{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ApiMeter \u00b6 ApiMeter \u662f\u4e00\u4e2a\u7b80\u6d01\u4f18\u96c5\u4f46\u529f\u80fd\u5f3a\u5927\u7684 HTTP(S) \u63a5\u53e3\u6d4b\u8bd5\u6846\u67b6\uff0c\u57fa\u4e8eHttpRunner v2.5.9 \u6df1\u5ea6\u6269\u5c55\uff0c\u5b9e\u73b0\u53ea\u9700\u7f16\u5199\u7ef4\u62a4\u4e00\u4efd YAML/JSON \u811a\u672c\uff0c\u4fbf\u53ef\u9ad8\u6548\u5feb\u901f\u5b9e\u73b0\u63a5\u53e3\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u7ebf\u4e0a\u76d1\u63a7\u3001\u6301\u7eed\u96c6\u6210\u7b49\u591a\u79cd\u6d4b\u8bd5\u9700\u6c42\u3002 \u8bbe\u8ba1\u7406\u5ff5 \u00b6 \u5145\u5206\u590d\u7528\u4f18\u79c0\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u4e0d\u8ffd\u6c42\u91cd\u590d\u9020\u8f6e\u5b50\uff0c\u800c\u662f\u5c06\u5f3a\u5927\u7684\u8f6e\u5b50\u7ec4\u88c5\u6210\u6218\u8f66 \u9075\u5faa \u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e \u7684\u51c6\u5219\uff0c\u5728\u6846\u67b6\u529f\u80fd\u4e2d\u878d\u5165\u81ea\u52a8\u5316\u6d4b\u8bd5\u6700\u4f73\u5de5\u7a0b\u5b9e\u8df5 \u8ffd\u6c42\u6295\u5165\u4ea7\u51fa\u6bd4\uff0c\u4e00\u4efd\u6295\u5165\u5373\u53ef\u5b9e\u73b0\u591a\u79cd\u6d4b\u8bd5\u9700\u6c42 \u6838\u5fc3\u7279\u6027 \u00b6 \u7ee7\u627f Requests \u7684\u5168\u90e8\u7279\u6027\uff0c\u8f7b\u677e\u5b9e\u73b0 HTTP(S) \u7684\u5404\u79cd\u6d4b\u8bd5\u9700\u6c42 \u91c7\u7528 YAML/JSON \u7684\u5f62\u5f0f\u63cf\u8ff0\u6d4b\u8bd5\u573a\u666f\uff0c\u4fdd\u969c\u6d4b\u8bd5\u7528\u4f8b\u63cf\u8ff0\u7684\u7edf\u4e00\u6027\u548c\u53ef\u7ef4\u62a4\u6027 \u501f\u52a9\u8f85\u52a9\u51fd\u6570\uff08debugtalk.py\uff09\uff0c\u5728\u6d4b\u8bd5\u811a\u672c\u4e2d\u8f7b\u677e\u5b9e\u73b0\u590d\u6742\u7684\u52a8\u6001\u8ba1\u7b97\u903b\u8f91 \u652f\u6301\u5b8c\u5584\u7684\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u673a\u5236\uff0c\u5145\u5206\u5b9e\u73b0\u6d4b\u8bd5\u7528\u4f8b\u7684\u590d\u7528 \u6d4b\u8bd5\u524d\u540e\u652f\u6301\u5b8c\u5584\u7684 hook \u673a\u5236 \u54cd\u5e94\u7ed3\u679c\u652f\u6301\u4e30\u5bcc\u7684\u6821\u9a8c\u673a\u5236 \u57fa\u4e8e HAR \u5b9e\u73b0\u63a5\u53e3\u5f55\u5236\u548c\u7528\u4f8b\u751f\u6210\u529f\u80fd\uff08 har2case \uff09 \u7ed3\u5408 Locust \u6846\u67b6\uff0c\u65e0\u9700\u989d\u5916\u7684\u5de5\u4f5c\u5373\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u6027\u80fd\u6d4b\u8bd5 \u6267\u884c\u65b9\u5f0f\u91c7\u7528 CLI \u8c03\u7528\uff0c\u53ef\u4e0e Jenkins \u7b49\u6301\u7eed\u96c6\u6210\u5de5\u5177\u5b8c\u7f8e\u7ed3\u5408 \u6d4b\u8bd5\u7ed3\u679c\u7edf\u8ba1\u62a5\u544a\u7b80\u6d01\u6e05\u6670\uff0c\u9644\u5e26\u8be6\u5c3d\u7edf\u8ba1\u4fe1\u606f\u548c\u65e5\u5fd7\u8bb0\u5f55 \u6781\u5f3a\u7684\u53ef\u6269\u5c55\u6027\uff0c\u8f7b\u677e\u5b9e\u73b0\u4e8c\u6b21\u5f00\u53d1\u548c Web \u5e73\u53f0\u5316","title":"\u4ecb\u7ecd"},{"location":"#apimeter","text":"ApiMeter \u662f\u4e00\u4e2a\u7b80\u6d01\u4f18\u96c5\u4f46\u529f\u80fd\u5f3a\u5927\u7684 HTTP(S) \u63a5\u53e3\u6d4b\u8bd5\u6846\u67b6\uff0c\u57fa\u4e8eHttpRunner v2.5.9 \u6df1\u5ea6\u6269\u5c55\uff0c\u5b9e\u73b0\u53ea\u9700\u7f16\u5199\u7ef4\u62a4\u4e00\u4efd YAML/JSON \u811a\u672c\uff0c\u4fbf\u53ef\u9ad8\u6548\u5feb\u901f\u5b9e\u73b0\u63a5\u53e3\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u7ebf\u4e0a\u76d1\u63a7\u3001\u6301\u7eed\u96c6\u6210\u7b49\u591a\u79cd\u6d4b\u8bd5\u9700\u6c42\u3002","title":"ApiMeter"},{"location":"#_1","text":"\u5145\u5206\u590d\u7528\u4f18\u79c0\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u4e0d\u8ffd\u6c42\u91cd\u590d\u9020\u8f6e\u5b50\uff0c\u800c\u662f\u5c06\u5f3a\u5927\u7684\u8f6e\u5b50\u7ec4\u88c5\u6210\u6218\u8f66 \u9075\u5faa \u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e \u7684\u51c6\u5219\uff0c\u5728\u6846\u67b6\u529f\u80fd\u4e2d\u878d\u5165\u81ea\u52a8\u5316\u6d4b\u8bd5\u6700\u4f73\u5de5\u7a0b\u5b9e\u8df5 \u8ffd\u6c42\u6295\u5165\u4ea7\u51fa\u6bd4\uff0c\u4e00\u4efd\u6295\u5165\u5373\u53ef\u5b9e\u73b0\u591a\u79cd\u6d4b\u8bd5\u9700\u6c42","title":"\u8bbe\u8ba1\u7406\u5ff5"},{"location":"#_2","text":"\u7ee7\u627f Requests \u7684\u5168\u90e8\u7279\u6027\uff0c\u8f7b\u677e\u5b9e\u73b0 HTTP(S) \u7684\u5404\u79cd\u6d4b\u8bd5\u9700\u6c42 \u91c7\u7528 YAML/JSON \u7684\u5f62\u5f0f\u63cf\u8ff0\u6d4b\u8bd5\u573a\u666f\uff0c\u4fdd\u969c\u6d4b\u8bd5\u7528\u4f8b\u63cf\u8ff0\u7684\u7edf\u4e00\u6027\u548c\u53ef\u7ef4\u62a4\u6027 \u501f\u52a9\u8f85\u52a9\u51fd\u6570\uff08debugtalk.py\uff09\uff0c\u5728\u6d4b\u8bd5\u811a\u672c\u4e2d\u8f7b\u677e\u5b9e\u73b0\u590d\u6742\u7684\u52a8\u6001\u8ba1\u7b97\u903b\u8f91 \u652f\u6301\u5b8c\u5584\u7684\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u673a\u5236\uff0c\u5145\u5206\u5b9e\u73b0\u6d4b\u8bd5\u7528\u4f8b\u7684\u590d\u7528 \u6d4b\u8bd5\u524d\u540e\u652f\u6301\u5b8c\u5584\u7684 hook \u673a\u5236 \u54cd\u5e94\u7ed3\u679c\u652f\u6301\u4e30\u5bcc\u7684\u6821\u9a8c\u673a\u5236 \u57fa\u4e8e HAR \u5b9e\u73b0\u63a5\u53e3\u5f55\u5236\u548c\u7528\u4f8b\u751f\u6210\u529f\u80fd\uff08 har2case \uff09 \u7ed3\u5408 Locust \u6846\u67b6\uff0c\u65e0\u9700\u989d\u5916\u7684\u5de5\u4f5c\u5373\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u6027\u80fd\u6d4b\u8bd5 \u6267\u884c\u65b9\u5f0f\u91c7\u7528 CLI \u8c03\u7528\uff0c\u53ef\u4e0e Jenkins \u7b49\u6301\u7eed\u96c6\u6210\u5de5\u5177\u5b8c\u7f8e\u7ed3\u5408 \u6d4b\u8bd5\u7ed3\u679c\u7edf\u8ba1\u62a5\u544a\u7b80\u6d01\u6e05\u6670\uff0c\u9644\u5e26\u8be6\u5c3d\u7edf\u8ba1\u4fe1\u606f\u548c\u65e5\u5fd7\u8bb0\u5f55 \u6781\u5f3a\u7684\u53ef\u6269\u5c55\u6027\uff0c\u8f7b\u677e\u5b9e\u73b0\u4e8c\u6b21\u5f00\u53d1\u548c Web \u5e73\u53f0\u5316","title":"\u6838\u5fc3\u7279\u6027"},{"location":"CHANGELOG/","text":"Release History \u00b6 2.12.2 (2025-09-15) \u00b6 Added feat: \u652f\u6301HTML\u62a5\u544a\u6a21\u677f\u6298\u53e0\u5185\u5bb9\u4e00\u952e\u5c55\u5f00 2.12.0 (2025-09-05) \u00b6 Added feat: \u5728\u62a5\u544a\u6a21\u677f\u4e2d\u5bf9\u6298\u53e0\u5185\u5bb9\u6dfb\u52a0\u4e00\u952e\u590d\u5236\u6309\u94ae\u529f\u80fd Changed perf: \u4f18\u5316\u62a5\u544a\u6a21\u677f\u6027\u80fd\uff0c\u589e\u52a0\u70b9\u51fb\u89e6\u53d1\u673a\u5236\u548c\u6811\u5f62\u7ed3\u6784\u61d2\u52a0\u8f7d\u673a\u5236 Fixed fix: \u6dfb\u52a0\u5bbd\u677e\u89e3\u6790\u51fd\u6570\uff0c\u4fee\u590d\u62a5\u544a\u6a21\u677fPython\u5b57\u5178\u6570\u636e\uff08\u5355\u5f15\u53f7\uff09\u8bc6\u522b\u9057\u6f0f\u60c5\u51b5 2.11.1 (2025-08-28) \u00b6 Changed feat: \u8c03\u6574skip-success\u9ed8\u8ba4\u503c\u4e3aTrue\uff0c\u540c\u65f6\u652f\u6301--no-skip-success\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5e76\u4e14\u4fdd\u6301\u5411\u540e\u517c\u5bb9 2.11.0 (2025-08-25) \u00b6 Added feat: \u5728\u62a5\u544a\u6a21\u677f\u4e2d\u589e\u52a0\u811a\u672cscript\u6821\u9a8c\u5c55\u793a\u6a21\u5757 feat: \u62a5\u544a\u6a21\u677f\u589e\u52a0\u5185\u5bb9\u6298\u53e0\u548cJSON\u6811\u5f62\u5c55\u793a\u529f\u80fd feat: \u589e\u5f3a\u62a5\u544a\u6a21\u677f\u7684JSON\u89e3\u6790\u529f\u80fd\uff0c\u652f\u6301Python\u5b57\u5178\u683c\u5f0f feat: \u6dfb\u52a0Github Action\u81ea\u52a8\u5316\u6784\u5efa\u6587\u6863\u811a\u672c Changed refactor: \u62a5\u544a\u6a21\u677f\u5185\u5bb9\u81ea\u52a8\u6298\u53e0\u903b\u8f91\u7b80\u5316\uff0c\u81ea\u52a8\u8bc6\u522bjson\u548cpython\u5b57\u5178\u6570\u636e\u6811\u5f62\u5c55\u793a\uff0c\u7136\u540e\u5b9e\u9645\u884c\u6570\u8ba1\u7b97\u548c\u8d85\u8fc7\u5341\u884c\u81ea\u52a8\u6298\u53e0 Fixed fix: \u4fee\u590d\u6587\u6863\u6784\u5efa\u5931\u8d25\u95ee\u9898 2.10.0 (2025-07-21) \u00b6 Added feat: \u652f\u6301\u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u529f\u80fd\uff08script\uff09\uff0c\u652f\u6301assert\u8bed\u53e5\u548c\u81ea\u5b9a\u4e49\u51fd\u6570 feat: \u4f18\u5316validate_script\u65b9\u6cd5\uff0c\u652f\u6301\u4efb\u610fPython\u811a\u672c\u6267\u884c feat: \u65b0\u589eResponseFieldProxy\u7c7b\u4ee5\u652f\u6301\u54cd\u5e94\u5b57\u6bb5\u7684\u70b9\u53f7\u8bbf\u95ee feat: \u5728LazyString\u7c7b\u4e2d\u65b0\u589e__str__\u65b9\u6cd5 feat: \u652f\u6301\u5168\u5c40\u53d8\u91cf\u4f7f\u7528\u53cd\u659c\u6760'\\'\u8f6c\u4e49\u4e3a\u5b57\u9762\u91cf Fixed fix: \u652f\u6301elapsed\u5168\u5c40\u53d8\u91cf\u89e3\u6790 fix: \u5728Validator\u7c7b\u4e2d\u589e\u5f3a\u5f02\u5e38\u5904\u7406\uff0c\u786e\u4fdd\u5173\u952e\u5f02\u5e38\u629b\u51fa\u5e76\u8bb0\u5f55\u9519\u8bef\u4fe1\u606f fix: \u5728Validator\u7c7b\u4e2d\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\uff0c\u786e\u4fdd\u6821\u9a8c\u70b9\u6267\u884c\u5f02\u5e38\u65f6\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u800c\u4e0d\u4e2d\u65ad\u5176\u4ed6\u6821\u9a8c 2.9.2 (2025-06-26) \u00b6 Added feat: \u652f\u6301\u5168\u5c40\u53d8\u91cf\u4f7f\u7528\u53cd\u659c\u6760'\\'\u8f6c\u4e49\u4e3a\u5b57\u9762\u91cf 2.9.1 (2025-06-25) \u00b6 Fixed fix: \u4f18\u5316\u53d8\u91cf\u89e3\u6790\u673a\u5236\uff0c\u4fee\u590d\u89e3\u6790\u903b\u8f91\u8fc7\u4e8e\u5bbd\u6cdb\u5bfc\u81f4\u5faa\u73af\u4f9d\u8d56\u95ee\u9898 2.9.0 (2025-06-25) \u00b6 Changed chore: \u5c06\u7248\u672c\u53f7\u66f4\u65b0\u81f32.9.0 2.8.5 (2025-06-25) \u00b6 Fixed fix: \u79fb\u9664\u65e5\u5fd7\u5904\u7406\u5668\u91cd\u590d\u6dfb\u52a0\u7684\u68c0\u67e5\uff0c\u4fee\u590d\u5355\u5143\u6d4b\u8bd5test_log_file\u5931\u8d25\u95ee\u9898 fix: \u4fee\u590d\u591a\u4e2a\u5e93\u8c03\u7528\u65e5\u5fd7\u91cd\u590d\u6253\u5370\u95ee\u9898 Changed refactor: \u79fb\u9664Flask\u670d\u52a1\u5668\u5065\u5eb7\u68c0\u67e5\u65b9\u6cd5\uff0c\u6539\u4e3a\u7b80\u5355\u7684\u7b49\u5f85\u673a\u5236\u4ee5\u63d0\u9ad8\u6d4b\u8bd5\u6548\u7387 chore: \u89e3\u51b3Python 3.10+\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u66f4\u65b0CI/CD\u914d\u7f6e\uff0c\u652f\u6301Python 3.6-3.12\u7248\u672c\u6d4b\u8bd5 2.8.4 (2025-06-12) \u00b6 Added feat: \u589e\u5f3a\u89e3\u6790\u529f\u80fd\uff0c\u652f\u6301\u5217\u8868\u548c\u5b57\u5178\u7684\u667a\u80fd\u5206\u5272\uff0c\u5904\u7406\u5d4c\u5957\u60c5\u51b5 Fixed fix: \u6539\u8fdb\u6d4b\u8bd5\u8fd0\u884c\u8f93\u51fa\u5904\u7406\uff0c\u589e\u52a0\u9519\u8bef\u4fe1\u606f\u548c\u8f93\u51fa\u663e\u793a\uff0c\u4f18\u5316\u7528\u6237\u4ea4\u4e92 fix: \u4fee\u590dShell\u811a\u672c\u4e2d\u7684\u6587\u4ef6\u8def\u5f84\u5904\u7406 fix: \u4fee\u590d\u6807\u7b7e\u68c0\u6d4b\u903b\u8f91\u9519\u8bef fix: \u589e\u5f3a\u54cd\u5e94\u8def\u5f84\u89e3\u6790\u903b\u8f91\uff0c\u6dfb\u52a0\u5168\u5c40\u53d8\u91cf\u5217\u8868\u4ee5\u9650\u5236\u89e3\u6790\u8303\u56f4\uff0c\u6d88\u9664\u4e86\u9519\u8bef\u65e5\u5fd7 Changed refactor: \u4f18\u5316\u6807\u7b7e\u68c0\u6d4b\u903b\u8f91\u548cshell\u811a\u672c\u4e2d\u6587\u4ef6\u8def\u5f84\u786c\u7f16\u7801\u95ee\u9898 2.8.2 (2025-06-10) \u00b6 Fixed fix: \u4fee\u590d\u54cd\u5e94\u4f53body\u5c5e\u6027\u5f15\u7528\uff0c\u8c03\u6574\u76f8\u5173\u6587\u6863\u4e0e\u6d4b\u8bd5\u7528\u4f8b 2.8.1 (2025-06-09) \u00b6 Fixed fix: \u9650\u5b9aresponse\u5b57\u6bb5\u8def\u5f84\u89e3\u6790\u8303\u56f4\uff0c\u6d88\u9664\u4e86\u9519\u8bef\u65e5\u5fd7\u4fe1\u606f 2.8.0 (2025-06-06) \u00b6 Added feat: \u589e\u5f3a\u81ea\u5b9a\u4e49\u51fd\u6570\u53c2\u6570\u89e3\u6790\u652f\u6301\u5d4c\u5957\u5c5e\u6027\u8bbf\u95ee Fixed fix: \u4fee\u590d\u53d8\u91cf\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u4e8e$device_sn.\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u70b9\u53f7\u7684\u9519\u8bef\u89e3\u6790\u95ee\u9898 2.7.1 (2025-06-05) \u00b6 Changed chore: \u8c03\u6574\u4e3aPython3.6+\u548c\u6dfb\u52a0\u793a\u4f8b\u7528\u4f8b 2.7.0 (2025-06-04) \u00b6 Added feat: \u652f\u6301--skip-success\u53c2\u6570\uff0c\u4f18\u5316\u62a5\u544a\u663e\u793askip\u7528\u4f8b feat: \u4f18\u5316\u62a5\u544a\u4f53\u79ef\u7684\u540c\u65f6\u51cf\u5c11\u8fd0\u884c\u5185\u5b58\u5360\u7528 feat: \u4ec5\u8986\u76d6hrun\u547d\u4ee4\uff0cate\u548chttprunner\u4f9d\u7136\u53ef\u7528 feat: \u4f18\u5316\u8fd0\u884c\u5185\u5b58\u548c\u62a5\u544a\u663e\u793askip\u7528\u4f8b feat: \u652f\u6301\u9010\u884c\u4ee3\u7801\u8fd0\u884c\u65f6\u5185\u5b58\u5206\u6790 Changed refactor: \u4e0a\u4f20pypi\u9700\u66f4\u6362\u5305\u540d\u4e3aapimeter Fixed fix: \u4fee\u590d markupsafe\u4f9d\u8d56\u4e0d\u517c\u5bb9\u95ee\u9898\u548c\u66f4\u65b0 mkdocs \u914d\u7f6e\u4fe1\u606f 2.5.9 (2022-04-30) \u00b6 fix #1217: reload debugtalk.py if loaded fix #1246: catch exceptions caused by GA report failure refactor: format code with black 2.5.8 (2022-03-23) \u00b6 change: replace events reporter from sentry to Google Analytics 2.5.7 (2020-02-21) \u00b6 Changed feat: validate with python script, display print message Fixed fix: validate script missing indents in html report fix: validate with python script, display lineno error 2.5.6 (2020-02-19) \u00b6 Added feat: save variables and export data to JSON files (named xx.io.json) when specified --save-tests Changed change: alter HttpRunner default log_level to WARNING Fixed fix: abort test when failed to parse all cases fix: log error when parse failed 2.5.5 (2020-01-06) \u00b6 Fixed fix: HTTP method missed \"CONNECT\", \"TRACE\" Changed change: remove method validation from runner.Runner 2.5.4 (2020-01-03) \u00b6 Added doc: add examples in json schema Fixed fix #835: UnicodeDecodeError when loading json schema files fix: RecursionError caused by checking root dir incorrectly on Windows 2.5.3 (2020-01-03) \u00b6 Fixed fix json schema: variables maybe in string type, e.g. '${prepare_variables()}' fix json schema: post json maybe in string type, e.g. '${prepare_post_data()}', '$post_data' 2.5.2 (2020-01-02) \u00b6 Fixed fix #826: Windows does not support file name include \":\" fix #819: maximum recursion error in locusts fix #818: request missed url in setup_hooks fix #808: project_working_directory is not initialized when running passed in data structure 2.5.1 (2020-01-02) \u00b6 Fixed fix: RefResolutionError on Windows platform 2.5.0 (2020-01-01) \u00b6 Added feat: add json schema validation for api feat: add json schema validation for testcase v1 & v2 feat: add json schema validation for testsuite v1 & v2 Changed refactor: use loader.load_cases to validate test files refactor: use is_test_path to check if path is valid json/yaml file or a existed directory refactor: use is_test_content to check if data_structure is apis/testcases/testsuites 2.4.9 (2019-12-29) \u00b6 Added test: add unittest for cli Changed change: html report name defaults to be in UTC ISO 8601 format Fixed fix: display validators in report when validate raised exception fix: eval validator python script before validating fix: do not strip string content when preparing lazy data fix: catch ApiNotFound exception when loading testcases fix: print exception string with exception stage 2.4.8 (2019-12-25) \u00b6 Added feat: store parse failed api/testcase/testsuite file path in logs/xxx.parse_failed.json feat: add exception SummaryEmpty Fixed fix: display request & response details in report when extraction failed fix: include CHANGELOG in package Changed change: use sys.exit(code) in hrun main 2.4.7 (2019-12-24) \u00b6 Added feat: report user id to sentry Fixed fix #797: locusts command error 2.4.6 (2019-12-23) \u00b6 Added feat: report tests start event and running exception to sentry Fixed fix: ensure initializing sentry_sdk on startup Fixed 2.4.5 (2019-12-20) \u00b6 Added feat: integrate sentry sdk Fixed fix: catch UnicodeDecodeError when json loads request body fix: display indented json for request json body Changed change: detect request/response bytes encoding, instead of assuming utf-8 refactor: make report as submodule 2.4.4 (2019-12-17) \u00b6 Added feat: add keyword body to reference response body Changed refactor: dumps request/response headers, display indented json in html report refactor: dumps request/response body if it is in json format, display indented json in html report change: unify response field(content/json/text) to body in html report 2.4.3 (2019-12-16) \u00b6 Added feat: load api content on demand Changed refactor: use poetry>=1.0.0 test: migrate from travis CI to github actions test: migrate from coveralls to codecov test: run matrix tests on linux/macos/~~windows~~ and Python 2.7/3.5/3.6/3.7/3.8 2.4.2 (2019-12-13) \u00b6 Changed refactor: replace with open file handler, avoid reading files into memory refactor: rename plugin to extension, httprunner/plugins -> httprunner/ext docs: update installation doc for developers 2.4.1 (2019-12-12) \u00b6 Added feat: add upload keyword for upload test, see doc test: pip install package test: hrun command Fixed fix: typo testfile_paths fix: check if locustio installed fix: dump json file name is empty when running relative testfile 2.4.0 (2019-12-11) \u00b6 Added feat: validate with python script, ref #773 feat: rearrange html report, failed testcases will be displayed on top. Changed refactor: make loader as submodule, split to check/locate/load/buildup refactor: make built_in as submodule, split to comparators and functions refactor: adjust code for context and validator docs: update cli argument help adjust format code, remove unused import Fixed fix: keep setup/teardown hooks original order when merge & override. fix: length comparator exceptions when running in CSV data-driven mode. 2.3.3 (2019-12-04) \u00b6 Fixed fix #768: dump json file path error when folder name contains dot, such as a.b.c Changed change: rename builtin function, sleep_N_secs => sleep 2.3.2 (2019-11-01) \u00b6 Added docs: add docs content to repo, visit at https://docs.httprunner.org docs: update developer interface docs Changed rename render_html_report to gen_html_report make gen_html_report separate with HttpRunner().run_tests() --report-file : specify report file path, this has higher priority than specifying report dir. remove summary property from HttpRunner 2.3.1 (2019-10-28) \u00b6 Fixed fix locusts entry configuration Changed update PyPi classifiers 2.3.0 (2019-10-27) \u00b6 Added feat: implement plugin system prototype, make locusts as plugin test: add Python 3.8 to Travis-CI feat: add __main__.py , python -m httprunner can be used to hrun tests Changed update dependency versions in pyproject.toml rename folder, httprunner/templates => httprunner/static log httprunner version before running tests remove unused import & code Fixed fix #707: duration stat error in multiple testsuites 2.2.6 (2019-09-18) \u00b6 Added feat: config variables support parsing from function feat: support jsonpath to parse json response #679 feat: generate html report with specified report file #704 Changed remove unused import adjust code format Fixed fix: dev-rules link 404 2.2.5 (2019-07-28) \u00b6 Added log HttpRunner version when initializing Fixed fix #658: sys.exit 1 if any testcase failed fix ModuleNotFoundError in debugging mode if httprunner uninstalled 2.2.4 (2019-07-18) \u00b6 Changed replace pipenv & setup.py with poetry drop support for Python 3.4 as it was EOL on 2019-03-16 relocate debugging scripts, move from main-debug.py to httprunner.cli Fixed fix #574: delete unnecessary code fix #551: raise if times is not digit fix #572: tests_def_mapping[\"testcases\"] typo error 2.2.3 (2019-06-30) \u00b6 Fixed fix yaml FullLoader AttributeError when PyYAML version < 5.1 2.2.2 (2019-06-26) \u00b6 Changed extract is used to replace output when passing former teststep's (as a testcase) export value to next teststep export is used to replace output in testcase config 2.2.1 (2019-06-25) \u00b6 Added add demo api/testcase/testsuite to new created scaffold project update default .gitignore of new created scaffold project add demo content to debugtalk.py / .env of new created scaffold project Fixed fix extend with testcase reference in format version 2 fix ImportError when locustio is not installed fix YAMLLoadWarning by specify yaml loader 2.2.0 (2019-06-24) \u00b6 Added support testcase/testsuite in format version 2 Fixed add wheel in dev packages fix exception when teststep name reference former extracted variable 2.1.3 (2019-04-24) \u00b6 Fixed replace eval mechanism with builtins to prevent security vulnerabilities ImportError for builtins in Python2.7 2.1.2 (2019-04-17) \u00b6 Added support new variable notation ${var} use \\$\\$ to escape \\$ notation add Python 3.7 for travis CI Fixed match duplicate variable/function in single raw string escape '{' and '}' notation in raw string print_info: TypeError when value is None display api name when running api as testcase 2.1.1 (2019-04-11) \u00b6 Changed refactor upload files mechanism with requests-toolbelt : simplify usage syntax, detect mimetype with filetype . support upload multiple fields. 2.1.0 (2019-04-10) \u00b6 Added implement json dump Python objects when save tests implement lazy parser remove project_mapping from parse_tests result Fixed reference output variables pass output variables between testcases 2.0.6 (2019-03-18) \u00b6 Added create .gitignore file when initializing new project Fixed fix CSV relative path detection fix current validators displaying the former one when they are empty 2.0.5 (2019-03-04) \u00b6 Added implement method to get variables and output Fixed fix xss in response json 2.0.4 (2019-02-28) \u00b6 Fixed fix verify priority with nested testcase fix function in config variables called multiple times dump loaded tests when running tests_mapping directly 2.0.3 (2019-02-24) \u00b6 Fixed fix verify priority: teststep > config fix Chinese charactor in log_file encoding error in Windows fix dump file with Chinese charactor in Python 3 2.0.2 (2019-01-21) \u00b6 Fixed each teststeps in one testcase share the same session fix duplicate API definition output Changed display result from hook functions in DEBUG level log change log level of \"Variables & Output\" to INFO print Invalid testcase path or testcases print testcase output in INFO level log 2.0.1 (2019-01-18) \u00b6 Fixed override current teststep variables with former testcase output variables Fixed compatibility when testcase name is empty skip undefined variable when parsing string content Changed add back request method in report 2.0.0 (2019-01-01) \u00b6 Changed Massive Refactor and Simplification Redesign testcase structure Module pipline Start Semantic Versioning Switch to Apache 2.0 license Change logo","title":"CHANGELOG"},{"location":"CHANGELOG/#release-history","text":"","title":"Release History"},{"location":"CHANGELOG/#2122-2025-09-15","text":"Added feat: \u652f\u6301HTML\u62a5\u544a\u6a21\u677f\u6298\u53e0\u5185\u5bb9\u4e00\u952e\u5c55\u5f00","title":"2.12.2 (2025-09-15)"},{"location":"CHANGELOG/#2120-2025-09-05","text":"Added feat: \u5728\u62a5\u544a\u6a21\u677f\u4e2d\u5bf9\u6298\u53e0\u5185\u5bb9\u6dfb\u52a0\u4e00\u952e\u590d\u5236\u6309\u94ae\u529f\u80fd Changed perf: \u4f18\u5316\u62a5\u544a\u6a21\u677f\u6027\u80fd\uff0c\u589e\u52a0\u70b9\u51fb\u89e6\u53d1\u673a\u5236\u548c\u6811\u5f62\u7ed3\u6784\u61d2\u52a0\u8f7d\u673a\u5236 Fixed fix: \u6dfb\u52a0\u5bbd\u677e\u89e3\u6790\u51fd\u6570\uff0c\u4fee\u590d\u62a5\u544a\u6a21\u677fPython\u5b57\u5178\u6570\u636e\uff08\u5355\u5f15\u53f7\uff09\u8bc6\u522b\u9057\u6f0f\u60c5\u51b5","title":"2.12.0 (2025-09-05)"},{"location":"CHANGELOG/#2111-2025-08-28","text":"Changed feat: \u8c03\u6574skip-success\u9ed8\u8ba4\u503c\u4e3aTrue\uff0c\u540c\u65f6\u652f\u6301--no-skip-success\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5e76\u4e14\u4fdd\u6301\u5411\u540e\u517c\u5bb9","title":"2.11.1 (2025-08-28)"},{"location":"CHANGELOG/#2110-2025-08-25","text":"Added feat: \u5728\u62a5\u544a\u6a21\u677f\u4e2d\u589e\u52a0\u811a\u672cscript\u6821\u9a8c\u5c55\u793a\u6a21\u5757 feat: \u62a5\u544a\u6a21\u677f\u589e\u52a0\u5185\u5bb9\u6298\u53e0\u548cJSON\u6811\u5f62\u5c55\u793a\u529f\u80fd feat: \u589e\u5f3a\u62a5\u544a\u6a21\u677f\u7684JSON\u89e3\u6790\u529f\u80fd\uff0c\u652f\u6301Python\u5b57\u5178\u683c\u5f0f feat: \u6dfb\u52a0Github Action\u81ea\u52a8\u5316\u6784\u5efa\u6587\u6863\u811a\u672c Changed refactor: \u62a5\u544a\u6a21\u677f\u5185\u5bb9\u81ea\u52a8\u6298\u53e0\u903b\u8f91\u7b80\u5316\uff0c\u81ea\u52a8\u8bc6\u522bjson\u548cpython\u5b57\u5178\u6570\u636e\u6811\u5f62\u5c55\u793a\uff0c\u7136\u540e\u5b9e\u9645\u884c\u6570\u8ba1\u7b97\u548c\u8d85\u8fc7\u5341\u884c\u81ea\u52a8\u6298\u53e0 Fixed fix: \u4fee\u590d\u6587\u6863\u6784\u5efa\u5931\u8d25\u95ee\u9898","title":"2.11.0 (2025-08-25)"},{"location":"CHANGELOG/#2100-2025-07-21","text":"Added feat: \u652f\u6301\u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u529f\u80fd\uff08script\uff09\uff0c\u652f\u6301assert\u8bed\u53e5\u548c\u81ea\u5b9a\u4e49\u51fd\u6570 feat: \u4f18\u5316validate_script\u65b9\u6cd5\uff0c\u652f\u6301\u4efb\u610fPython\u811a\u672c\u6267\u884c feat: \u65b0\u589eResponseFieldProxy\u7c7b\u4ee5\u652f\u6301\u54cd\u5e94\u5b57\u6bb5\u7684\u70b9\u53f7\u8bbf\u95ee feat: \u5728LazyString\u7c7b\u4e2d\u65b0\u589e__str__\u65b9\u6cd5 feat: \u652f\u6301\u5168\u5c40\u53d8\u91cf\u4f7f\u7528\u53cd\u659c\u6760'\\'\u8f6c\u4e49\u4e3a\u5b57\u9762\u91cf Fixed fix: \u652f\u6301elapsed\u5168\u5c40\u53d8\u91cf\u89e3\u6790 fix: \u5728Validator\u7c7b\u4e2d\u589e\u5f3a\u5f02\u5e38\u5904\u7406\uff0c\u786e\u4fdd\u5173\u952e\u5f02\u5e38\u629b\u51fa\u5e76\u8bb0\u5f55\u9519\u8bef\u4fe1\u606f fix: \u5728Validator\u7c7b\u4e2d\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\uff0c\u786e\u4fdd\u6821\u9a8c\u70b9\u6267\u884c\u5f02\u5e38\u65f6\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u800c\u4e0d\u4e2d\u65ad\u5176\u4ed6\u6821\u9a8c","title":"2.10.0 (2025-07-21)"},{"location":"CHANGELOG/#292-2025-06-26","text":"Added feat: \u652f\u6301\u5168\u5c40\u53d8\u91cf\u4f7f\u7528\u53cd\u659c\u6760'\\'\u8f6c\u4e49\u4e3a\u5b57\u9762\u91cf","title":"2.9.2 (2025-06-26)"},{"location":"CHANGELOG/#291-2025-06-25","text":"Fixed fix: \u4f18\u5316\u53d8\u91cf\u89e3\u6790\u673a\u5236\uff0c\u4fee\u590d\u89e3\u6790\u903b\u8f91\u8fc7\u4e8e\u5bbd\u6cdb\u5bfc\u81f4\u5faa\u73af\u4f9d\u8d56\u95ee\u9898","title":"2.9.1 (2025-06-25)"},{"location":"CHANGELOG/#290-2025-06-25","text":"Changed chore: \u5c06\u7248\u672c\u53f7\u66f4\u65b0\u81f32.9.0","title":"2.9.0 (2025-06-25)"},{"location":"CHANGELOG/#285-2025-06-25","text":"Fixed fix: \u79fb\u9664\u65e5\u5fd7\u5904\u7406\u5668\u91cd\u590d\u6dfb\u52a0\u7684\u68c0\u67e5\uff0c\u4fee\u590d\u5355\u5143\u6d4b\u8bd5test_log_file\u5931\u8d25\u95ee\u9898 fix: \u4fee\u590d\u591a\u4e2a\u5e93\u8c03\u7528\u65e5\u5fd7\u91cd\u590d\u6253\u5370\u95ee\u9898 Changed refactor: \u79fb\u9664Flask\u670d\u52a1\u5668\u5065\u5eb7\u68c0\u67e5\u65b9\u6cd5\uff0c\u6539\u4e3a\u7b80\u5355\u7684\u7b49\u5f85\u673a\u5236\u4ee5\u63d0\u9ad8\u6d4b\u8bd5\u6548\u7387 chore: \u89e3\u51b3Python 3.10+\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u66f4\u65b0CI/CD\u914d\u7f6e\uff0c\u652f\u6301Python 3.6-3.12\u7248\u672c\u6d4b\u8bd5","title":"2.8.5 (2025-06-25)"},{"location":"CHANGELOG/#284-2025-06-12","text":"Added feat: \u589e\u5f3a\u89e3\u6790\u529f\u80fd\uff0c\u652f\u6301\u5217\u8868\u548c\u5b57\u5178\u7684\u667a\u80fd\u5206\u5272\uff0c\u5904\u7406\u5d4c\u5957\u60c5\u51b5 Fixed fix: \u6539\u8fdb\u6d4b\u8bd5\u8fd0\u884c\u8f93\u51fa\u5904\u7406\uff0c\u589e\u52a0\u9519\u8bef\u4fe1\u606f\u548c\u8f93\u51fa\u663e\u793a\uff0c\u4f18\u5316\u7528\u6237\u4ea4\u4e92 fix: \u4fee\u590dShell\u811a\u672c\u4e2d\u7684\u6587\u4ef6\u8def\u5f84\u5904\u7406 fix: \u4fee\u590d\u6807\u7b7e\u68c0\u6d4b\u903b\u8f91\u9519\u8bef fix: \u589e\u5f3a\u54cd\u5e94\u8def\u5f84\u89e3\u6790\u903b\u8f91\uff0c\u6dfb\u52a0\u5168\u5c40\u53d8\u91cf\u5217\u8868\u4ee5\u9650\u5236\u89e3\u6790\u8303\u56f4\uff0c\u6d88\u9664\u4e86\u9519\u8bef\u65e5\u5fd7 Changed refactor: \u4f18\u5316\u6807\u7b7e\u68c0\u6d4b\u903b\u8f91\u548cshell\u811a\u672c\u4e2d\u6587\u4ef6\u8def\u5f84\u786c\u7f16\u7801\u95ee\u9898","title":"2.8.4 (2025-06-12)"},{"location":"CHANGELOG/#282-2025-06-10","text":"Fixed fix: \u4fee\u590d\u54cd\u5e94\u4f53body\u5c5e\u6027\u5f15\u7528\uff0c\u8c03\u6574\u76f8\u5173\u6587\u6863\u4e0e\u6d4b\u8bd5\u7528\u4f8b","title":"2.8.2 (2025-06-10)"},{"location":"CHANGELOG/#281-2025-06-09","text":"Fixed fix: \u9650\u5b9aresponse\u5b57\u6bb5\u8def\u5f84\u89e3\u6790\u8303\u56f4\uff0c\u6d88\u9664\u4e86\u9519\u8bef\u65e5\u5fd7\u4fe1\u606f","title":"2.8.1 (2025-06-09)"},{"location":"CHANGELOG/#280-2025-06-06","text":"Added feat: \u589e\u5f3a\u81ea\u5b9a\u4e49\u51fd\u6570\u53c2\u6570\u89e3\u6790\u652f\u6301\u5d4c\u5957\u5c5e\u6027\u8bbf\u95ee Fixed fix: \u4fee\u590d\u53d8\u91cf\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u4e8e$device_sn.\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u70b9\u53f7\u7684\u9519\u8bef\u89e3\u6790\u95ee\u9898","title":"2.8.0 (2025-06-06)"},{"location":"CHANGELOG/#271-2025-06-05","text":"Changed chore: \u8c03\u6574\u4e3aPython3.6+\u548c\u6dfb\u52a0\u793a\u4f8b\u7528\u4f8b","title":"2.7.1 (2025-06-05)"},{"location":"CHANGELOG/#270-2025-06-04","text":"Added feat: \u652f\u6301--skip-success\u53c2\u6570\uff0c\u4f18\u5316\u62a5\u544a\u663e\u793askip\u7528\u4f8b feat: \u4f18\u5316\u62a5\u544a\u4f53\u79ef\u7684\u540c\u65f6\u51cf\u5c11\u8fd0\u884c\u5185\u5b58\u5360\u7528 feat: \u4ec5\u8986\u76d6hrun\u547d\u4ee4\uff0cate\u548chttprunner\u4f9d\u7136\u53ef\u7528 feat: \u4f18\u5316\u8fd0\u884c\u5185\u5b58\u548c\u62a5\u544a\u663e\u793askip\u7528\u4f8b feat: \u652f\u6301\u9010\u884c\u4ee3\u7801\u8fd0\u884c\u65f6\u5185\u5b58\u5206\u6790 Changed refactor: \u4e0a\u4f20pypi\u9700\u66f4\u6362\u5305\u540d\u4e3aapimeter Fixed fix: \u4fee\u590d markupsafe\u4f9d\u8d56\u4e0d\u517c\u5bb9\u95ee\u9898\u548c\u66f4\u65b0 mkdocs \u914d\u7f6e\u4fe1\u606f","title":"2.7.0 (2025-06-04)"},{"location":"CHANGELOG/#259-2022-04-30","text":"fix #1217: reload debugtalk.py if loaded fix #1246: catch exceptions caused by GA report failure refactor: format code with black","title":"2.5.9 (2022-04-30)"},{"location":"CHANGELOG/#258-2022-03-23","text":"change: replace events reporter from sentry to Google Analytics","title":"2.5.8 (2022-03-23)"},{"location":"CHANGELOG/#257-2020-02-21","text":"Changed feat: validate with python script, display print message Fixed fix: validate script missing indents in html report fix: validate with python script, display lineno error","title":"2.5.7 (2020-02-21)"},{"location":"CHANGELOG/#256-2020-02-19","text":"Added feat: save variables and export data to JSON files (named xx.io.json) when specified --save-tests Changed change: alter HttpRunner default log_level to WARNING Fixed fix: abort test when failed to parse all cases fix: log error when parse failed","title":"2.5.6 (2020-02-19)"},{"location":"CHANGELOG/#255-2020-01-06","text":"Fixed fix: HTTP method missed \"CONNECT\", \"TRACE\" Changed change: remove method validation from runner.Runner","title":"2.5.5 (2020-01-06)"},{"location":"CHANGELOG/#254-2020-01-03","text":"Added doc: add examples in json schema Fixed fix #835: UnicodeDecodeError when loading json schema files fix: RecursionError caused by checking root dir incorrectly on Windows","title":"2.5.4 (2020-01-03)"},{"location":"CHANGELOG/#253-2020-01-03","text":"Fixed fix json schema: variables maybe in string type, e.g. '${prepare_variables()}' fix json schema: post json maybe in string type, e.g. '${prepare_post_data()}', '$post_data'","title":"2.5.3 (2020-01-03)"},{"location":"CHANGELOG/#252-2020-01-02","text":"Fixed fix #826: Windows does not support file name include \":\" fix #819: maximum recursion error in locusts fix #818: request missed url in setup_hooks fix #808: project_working_directory is not initialized when running passed in data structure","title":"2.5.2 (2020-01-02)"},{"location":"CHANGELOG/#251-2020-01-02","text":"Fixed fix: RefResolutionError on Windows platform","title":"2.5.1 (2020-01-02)"},{"location":"CHANGELOG/#250-2020-01-01","text":"Added feat: add json schema validation for api feat: add json schema validation for testcase v1 & v2 feat: add json schema validation for testsuite v1 & v2 Changed refactor: use loader.load_cases to validate test files refactor: use is_test_path to check if path is valid json/yaml file or a existed directory refactor: use is_test_content to check if data_structure is apis/testcases/testsuites","title":"2.5.0 (2020-01-01)"},{"location":"CHANGELOG/#249-2019-12-29","text":"Added test: add unittest for cli Changed change: html report name defaults to be in UTC ISO 8601 format Fixed fix: display validators in report when validate raised exception fix: eval validator python script before validating fix: do not strip string content when preparing lazy data fix: catch ApiNotFound exception when loading testcases fix: print exception string with exception stage","title":"2.4.9 (2019-12-29)"},{"location":"CHANGELOG/#248-2019-12-25","text":"Added feat: store parse failed api/testcase/testsuite file path in logs/xxx.parse_failed.json feat: add exception SummaryEmpty Fixed fix: display request & response details in report when extraction failed fix: include CHANGELOG in package Changed change: use sys.exit(code) in hrun main","title":"2.4.8 (2019-12-25)"},{"location":"CHANGELOG/#247-2019-12-24","text":"Added feat: report user id to sentry Fixed fix #797: locusts command error","title":"2.4.7 (2019-12-24)"},{"location":"CHANGELOG/#246-2019-12-23","text":"Added feat: report tests start event and running exception to sentry Fixed fix: ensure initializing sentry_sdk on startup Fixed","title":"2.4.6 (2019-12-23)"},{"location":"CHANGELOG/#245-2019-12-20","text":"Added feat: integrate sentry sdk Fixed fix: catch UnicodeDecodeError when json loads request body fix: display indented json for request json body Changed change: detect request/response bytes encoding, instead of assuming utf-8 refactor: make report as submodule","title":"2.4.5 (2019-12-20)"},{"location":"CHANGELOG/#244-2019-12-17","text":"Added feat: add keyword body to reference response body Changed refactor: dumps request/response headers, display indented json in html report refactor: dumps request/response body if it is in json format, display indented json in html report change: unify response field(content/json/text) to body in html report","title":"2.4.4 (2019-12-17)"},{"location":"CHANGELOG/#243-2019-12-16","text":"Added feat: load api content on demand Changed refactor: use poetry>=1.0.0 test: migrate from travis CI to github actions test: migrate from coveralls to codecov test: run matrix tests on linux/macos/~~windows~~ and Python 2.7/3.5/3.6/3.7/3.8","title":"2.4.3 (2019-12-16)"},{"location":"CHANGELOG/#242-2019-12-13","text":"Changed refactor: replace with open file handler, avoid reading files into memory refactor: rename plugin to extension, httprunner/plugins -> httprunner/ext docs: update installation doc for developers","title":"2.4.2 (2019-12-13)"},{"location":"CHANGELOG/#241-2019-12-12","text":"Added feat: add upload keyword for upload test, see doc test: pip install package test: hrun command Fixed fix: typo testfile_paths fix: check if locustio installed fix: dump json file name is empty when running relative testfile","title":"2.4.1 (2019-12-12)"},{"location":"CHANGELOG/#240-2019-12-11","text":"Added feat: validate with python script, ref #773 feat: rearrange html report, failed testcases will be displayed on top. Changed refactor: make loader as submodule, split to check/locate/load/buildup refactor: make built_in as submodule, split to comparators and functions refactor: adjust code for context and validator docs: update cli argument help adjust format code, remove unused import Fixed fix: keep setup/teardown hooks original order when merge & override. fix: length comparator exceptions when running in CSV data-driven mode.","title":"2.4.0 (2019-12-11)"},{"location":"CHANGELOG/#233-2019-12-04","text":"Fixed fix #768: dump json file path error when folder name contains dot, such as a.b.c Changed change: rename builtin function, sleep_N_secs => sleep","title":"2.3.3 (2019-12-04)"},{"location":"CHANGELOG/#232-2019-11-01","text":"Added docs: add docs content to repo, visit at https://docs.httprunner.org docs: update developer interface docs Changed rename render_html_report to gen_html_report make gen_html_report separate with HttpRunner().run_tests() --report-file : specify report file path, this has higher priority than specifying report dir. remove summary property from HttpRunner","title":"2.3.2 (2019-11-01)"},{"location":"CHANGELOG/#231-2019-10-28","text":"Fixed fix locusts entry configuration Changed update PyPi classifiers","title":"2.3.1 (2019-10-28)"},{"location":"CHANGELOG/#230-2019-10-27","text":"Added feat: implement plugin system prototype, make locusts as plugin test: add Python 3.8 to Travis-CI feat: add __main__.py , python -m httprunner can be used to hrun tests Changed update dependency versions in pyproject.toml rename folder, httprunner/templates => httprunner/static log httprunner version before running tests remove unused import & code Fixed fix #707: duration stat error in multiple testsuites","title":"2.3.0 (2019-10-27)"},{"location":"CHANGELOG/#226-2019-09-18","text":"Added feat: config variables support parsing from function feat: support jsonpath to parse json response #679 feat: generate html report with specified report file #704 Changed remove unused import adjust code format Fixed fix: dev-rules link 404","title":"2.2.6 (2019-09-18)"},{"location":"CHANGELOG/#225-2019-07-28","text":"Added log HttpRunner version when initializing Fixed fix #658: sys.exit 1 if any testcase failed fix ModuleNotFoundError in debugging mode if httprunner uninstalled","title":"2.2.5 (2019-07-28)"},{"location":"CHANGELOG/#224-2019-07-18","text":"Changed replace pipenv & setup.py with poetry drop support for Python 3.4 as it was EOL on 2019-03-16 relocate debugging scripts, move from main-debug.py to httprunner.cli Fixed fix #574: delete unnecessary code fix #551: raise if times is not digit fix #572: tests_def_mapping[\"testcases\"] typo error","title":"2.2.4 (2019-07-18)"},{"location":"CHANGELOG/#223-2019-06-30","text":"Fixed fix yaml FullLoader AttributeError when PyYAML version < 5.1","title":"2.2.3 (2019-06-30)"},{"location":"CHANGELOG/#222-2019-06-26","text":"Changed extract is used to replace output when passing former teststep's (as a testcase) export value to next teststep export is used to replace output in testcase config","title":"2.2.2 (2019-06-26)"},{"location":"CHANGELOG/#221-2019-06-25","text":"Added add demo api/testcase/testsuite to new created scaffold project update default .gitignore of new created scaffold project add demo content to debugtalk.py / .env of new created scaffold project Fixed fix extend with testcase reference in format version 2 fix ImportError when locustio is not installed fix YAMLLoadWarning by specify yaml loader","title":"2.2.1 (2019-06-25)"},{"location":"CHANGELOG/#220-2019-06-24","text":"Added support testcase/testsuite in format version 2 Fixed add wheel in dev packages fix exception when teststep name reference former extracted variable","title":"2.2.0 (2019-06-24)"},{"location":"CHANGELOG/#213-2019-04-24","text":"Fixed replace eval mechanism with builtins to prevent security vulnerabilities ImportError for builtins in Python2.7","title":"2.1.3 (2019-04-24)"},{"location":"CHANGELOG/#212-2019-04-17","text":"Added support new variable notation ${var} use \\$\\$ to escape \\$ notation add Python 3.7 for travis CI Fixed match duplicate variable/function in single raw string escape '{' and '}' notation in raw string print_info: TypeError when value is None display api name when running api as testcase","title":"2.1.2 (2019-04-17)"},{"location":"CHANGELOG/#211-2019-04-11","text":"Changed refactor upload files mechanism with requests-toolbelt : simplify usage syntax, detect mimetype with filetype . support upload multiple fields.","title":"2.1.1 (2019-04-11)"},{"location":"CHANGELOG/#210-2019-04-10","text":"Added implement json dump Python objects when save tests implement lazy parser remove project_mapping from parse_tests result Fixed reference output variables pass output variables between testcases","title":"2.1.0 (2019-04-10)"},{"location":"CHANGELOG/#206-2019-03-18","text":"Added create .gitignore file when initializing new project Fixed fix CSV relative path detection fix current validators displaying the former one when they are empty","title":"2.0.6 (2019-03-18)"},{"location":"CHANGELOG/#205-2019-03-04","text":"Added implement method to get variables and output Fixed fix xss in response json","title":"2.0.5 (2019-03-04)"},{"location":"CHANGELOG/#204-2019-02-28","text":"Fixed fix verify priority with nested testcase fix function in config variables called multiple times dump loaded tests when running tests_mapping directly","title":"2.0.4 (2019-02-28)"},{"location":"CHANGELOG/#203-2019-02-24","text":"Fixed fix verify priority: teststep > config fix Chinese charactor in log_file encoding error in Windows fix dump file with Chinese charactor in Python 3","title":"2.0.3 (2019-02-24)"},{"location":"CHANGELOG/#202-2019-01-21","text":"Fixed each teststeps in one testcase share the same session fix duplicate API definition output Changed display result from hook functions in DEBUG level log change log level of \"Variables & Output\" to INFO print Invalid testcase path or testcases print testcase output in INFO level log","title":"2.0.2 (2019-01-21)"},{"location":"CHANGELOG/#201-2019-01-18","text":"Fixed override current teststep variables with former testcase output variables Fixed compatibility when testcase name is empty skip undefined variable when parsing string content Changed add back request method in report","title":"2.0.1 (2019-01-18)"},{"location":"CHANGELOG/#200-2019-01-01","text":"Changed Massive Refactor and Simplification Redesign testcase structure Module pipline Start Semantic Versioning Switch to Apache 2.0 license Change logo","title":"2.0.0 (2019-01-01)"},{"location":"FAQ/","text":"\u5e38\u89c1\u95ee\u9898 \u00b6 HTTPS SSLError \u00b6 \u8bf7\u6c42 HTTPS \u63a5\u53e3\u65f6\uff0c\u82e5\u672c\u5730\u5f00\u542f\u4e86\u4ee3\u7406\u8f6f\u4ef6\uff08Charles/Fiddler\uff09\uff0c\u7531\u4e8e HTTPS \u8bc1\u4e66\u7684\u539f\u56e0\uff0c\u4f1a\u5bfc\u81f4 SSLError \u7684\u62a5\u9519\u3002 \u89e3\u51b3\u7684\u65b9\u5f0f\u662f\uff0c\u5728 config \u4e2d\u589e\u52a0 verify: False \uff0c\u539f\u7406\u89c1 requests \u7684 SSL Cert Verification \u90e8\u5206\u3002 config : name : XXX base_url : XXX verify : False","title":"FAQ"},{"location":"FAQ/#_1","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"FAQ/#https-sslerror","text":"\u8bf7\u6c42 HTTPS \u63a5\u53e3\u65f6\uff0c\u82e5\u672c\u5730\u5f00\u542f\u4e86\u4ee3\u7406\u8f6f\u4ef6\uff08Charles/Fiddler\uff09\uff0c\u7531\u4e8e HTTPS \u8bc1\u4e66\u7684\u539f\u56e0\uff0c\u4f1a\u5bfc\u81f4 SSLError \u7684\u62a5\u9519\u3002 \u89e3\u51b3\u7684\u65b9\u5f0f\u662f\uff0c\u5728 config \u4e2d\u589e\u52a0 verify: False \uff0c\u539f\u7406\u89c1 requests \u7684 SSL Cert Verification \u90e8\u5206\u3002 config : name : XXX base_url : XXX verify : False","title":"HTTPS SSLError"},{"location":"Installation/","text":"\u5b89\u88c5\u8bf4\u660e \u00b6 \u8fd0\u884c\u73af\u5883 \u00b6 HttpRunner \u662f\u4e00\u4e2a\u57fa\u4e8e Python \u5f00\u53d1\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728 macOS\u3001Linux\u3001Windows \u7cfb\u7edf\u5e73\u53f0\u4e0a\u3002 Python \u7248\u672c \uff1aHttpRunner \u652f\u6301 Python 3.5 \u53ca\u4ee5\u4e0a\u7684\u6240\u6709\u7248\u672c\uff0c\u5e76\u4f7f\u7528 Travis-CI \u8fdb\u884c\u4e86 \u6301\u7eed\u96c6\u6210\u6d4b\u8bd5 \uff0c\u6d4b\u8bd5\u8986\u76d6\u7684\u7248\u672c\u5305\u62ec 2.7/3.5/3.6/3.7/3.8\u3002\u867d\u7136 HttpRunner \u6682\u65f6\u4fdd\u7559\u4e86\u5bf9 Python 2.7 \u7684\u517c\u5bb9\u652f\u6301\uff0c\u4f46\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528 Python 3.6 \u53ca\u4ee5\u4e0a\u7248\u672c\u3002 \u64cd\u4f5c\u7cfb\u7edf \uff1a\u63a8\u8350\u4f7f\u7528 macOS/Linux\u3002 \u5b89\u88c5\u65b9\u5f0f \u00b6 HttpRunner \u7684\u7a33\u5b9a\u7248\u672c\u6258\u7ba1\u5728 PyPI \u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 pip \u8fdb\u884c\u5b89\u88c5\u3002 $ pip install apimeter \u7248\u672c\u5347\u7ea7 \u00b6 \u5047\u5982\u4f60\u4e4b\u524d\u5df2\u7ecf\u5b89\u88c5\u8fc7\u4e86\uff0c\u73b0\u5728\u9700\u8981\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4f7f\u7528 -U \u53c2\u6570\u3002\u8be5\u53c2\u6570\u5bf9\u4ee5\u4e0a\u4e09\u79cd\u5b89\u88c5\u65b9\u5f0f\u5747\u751f\u6548\u3002 $ pip install -U apimeter \u5b89\u88c5\u6821\u9a8c \u00b6 \u5728 HttpRunner \u5b89\u88c5\u6210\u529f\u540e\uff0c\u7cfb\u7edf\u4e2d\u4f1a\u65b0\u589e\u5982\u4e0b 5 \u4e2a\u547d\u4ee4\uff1a httprunner : \u6838\u5fc3\u547d\u4ee4 ate : \u66fe\u7ecf\u7528\u8fc7\u7684\u547d\u4ee4\uff08\u5f53\u65f6\u6846\u67b6\u540d\u79f0\u4e3a ApiTestEngine\uff09\uff0c\u529f\u80fd\u4e0e httprunner \u5b8c\u5168\u76f8\u540c hrun : httprunner \u7684\u7f29\u5199\uff0c\u529f\u80fd\u4e0e httprunner \u5b8c\u5168\u76f8\u540c locusts : \u57fa\u4e8e Locust \u5b9e\u73b0 \u6027\u80fd\u6d4b\u8bd5 har2case : \u8f85\u52a9\u5de5\u5177\uff0c\u53ef\u5c06\u6807\u51c6\u901a\u7528\u7684 HAR \u683c\u5f0f\uff08HTTP Archive\uff09\u8f6c\u6362\u4e3a YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b httprunner\u3001hrun\u3001ate \u4e09\u4e2a\u547d\u4ee4\u5b8c\u5168\u7b49\u4ef7\uff0c\u529f\u80fd\u7279\u6027\u5b8c\u5168\u76f8\u540c\uff0c\u4e2a\u4eba\u63a8\u8350\u4f7f\u7528 hrun \u547d\u4ee4\u3002 \u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u82e5\u6b63\u5e38\u663e\u793a\u7248\u672c\u53f7\uff0c\u5219\u8bf4\u660e HttpRunner \u5b89\u88c5\u6210\u529f\u3002 $ hrun -V 2.4.1 $ har2case -V 0.3.1 \u5f00\u53d1\u8005\u6a21\u5f0f \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b89\u88c5 HttpRunner \u7684\u65f6\u5019\u53ea\u4f1a\u5b89\u88c5\u8fd0\u884c HttpRunner \u7684\u5fc5\u8981\u4f9d\u8d56\u5e93\u3002 \u5982\u679c\u4f60\u4e0d\u4ec5\u4ec5\u662f\u4f7f\u7528 HttpRunner\uff0c\u8fd8\u9700\u8981\u5bf9 HttpRunner \u8fdb\u884c\u5f00\u53d1\u8c03\u8bd5\uff08debug\uff09\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\u3002 HttpRunner \u4f7f\u7528 poetry \u5bf9\u4f9d\u8d56\u5305\u8fdb\u884c\u7ba1\u7406\uff0c\u82e5\u4f60\u8fd8\u6ca1\u6709\u5b89\u88c5 poetry\uff0c\u9700\u8981\u5148\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\uff1a $ curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python \u83b7\u53d6 HttpRunner \u6e90\u7801\uff1a $ git clone https://github.com/HttpRunner/HttpRunner.git \u8fdb\u5165\u4ed3\u5e93\u76ee\u5f55\uff0c\u5b89\u88c5\u6240\u6709\u4f9d\u8d56\uff1a $ poetry install \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u82e5\u6d4b\u8bd5\u5168\u90e8\u901a\u8fc7\uff0c\u5219\u8bf4\u660e\u73af\u5883\u6b63\u5e38\u3002 $ poetry run python -m unittest discover \u67e5\u770b HttpRunner \u7684\u4f9d\u8d56\u60c5\u51b5\uff1a $ poetry show --tree colorama 0 .4.1 Cross-platform colored terminal text. colorlog 4 .0.2 Log formatting with colors! \u2514\u2500\u2500 colorama * coverage 4 .5.4 Code coverage measurement for Python coveralls 1 .8.2 Show coverage stats online via coveralls.io \u251c\u2500\u2500 coverage > = 3 .6,< 5 .0 \u251c\u2500\u2500 docopt > = 0 .6.1 \u251c\u2500\u2500 requests > = 1 .0.0 \u2502 \u251c\u2500\u2500 certifi > = 2017 .4.17 \u2502 \u251c\u2500\u2500 chardet > = 3 .0.2,< 3 .1.0 \u2502 \u251c\u2500\u2500 idna > = 2 .5,< 2 .9 \u2502 \u2514\u2500\u2500 urllib3 > = 1 .21.1,< 1 .25.0 || >1.25.0,< 1 .25.1 || >1.25.1,< 1 .26 \u2514\u2500\u2500 urllib3 * filetype 1 .0.5 Infer file type and MIME type of any file/buffer. No external dependencies. flask 0 .12.4 A microframework based on Werkzeug, Jinja2 and good intentions \u251c\u2500\u2500 click > = 2 .0 \u251c\u2500\u2500 itsdangerous > = 0 .21 \u251c\u2500\u2500 jinja2 > = 2 .4 \u2502 \u2514\u2500\u2500 markupsafe > = 0 .23 \u2514\u2500\u2500 werkzeug > = 0 .7 future 0 .18.1 Clean single-source support for Python 3 and 2 har2case 0 .3.1 Convert HAR ( HTTP Archive ) to YAML/JSON testcases for HttpRunner. \u2514\u2500\u2500 pyyaml * jinja2 2 .10.3 A very fast and expressive template engine. \u2514\u2500\u2500 markupsafe > = 0 .23 jsonpath 0 .82 An XPath for JSON pyyaml 5 .1.2 YAML parser and emitter for Python requests 2 .22.0 Python HTTP for Humans. \u251c\u2500\u2500 certifi > = 2017 .4.17 \u251c\u2500\u2500 chardet > = 3 .0.2,< 3 .1.0 \u251c\u2500\u2500 idna > = 2 .5,< 2 .9 \u2514\u2500\u2500 urllib3 > = 1 .21.1,< 1 .25.0 || >1.25.0,< 1 .25.1 || >1.25.1,< 1 .26 requests-toolbelt 0 .9.1 A utility belt for advanced users of python-requests \u2514\u2500\u2500 requests > = 2 .0.1,< 3 .0.0 \u251c\u2500\u2500 certifi > = 2017 .4.17 \u251c\u2500\u2500 chardet > = 3 .0.2,< 3 .1.0 \u251c\u2500\u2500 idna > = 2 .5,< 2 .9 \u2514\u2500\u2500 urllib3 > = 1 .21.1,< 1 .25.0 || >1.25.0,< 1 .25.1 || >1.25.1,< 1 .26 \u8c03\u8bd5\u8fd0\u884c\u65b9\u5f0f\uff1a # \u8c03\u8bd5\u8fd0\u884c hrun $ poetry run python -m httprunner -h # \u8c03\u8bd5\u8fd0\u884c locusts $ pipenv run python -m httprunner.ext.locusts -h Docker \u00b6 TODO","title":"\u5b89\u88c5\u8bf4\u660e"},{"location":"Installation/#_1","text":"","title":"\u5b89\u88c5\u8bf4\u660e"},{"location":"Installation/#_2","text":"HttpRunner \u662f\u4e00\u4e2a\u57fa\u4e8e Python \u5f00\u53d1\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728 macOS\u3001Linux\u3001Windows \u7cfb\u7edf\u5e73\u53f0\u4e0a\u3002 Python \u7248\u672c \uff1aHttpRunner \u652f\u6301 Python 3.5 \u53ca\u4ee5\u4e0a\u7684\u6240\u6709\u7248\u672c\uff0c\u5e76\u4f7f\u7528 Travis-CI \u8fdb\u884c\u4e86 \u6301\u7eed\u96c6\u6210\u6d4b\u8bd5 \uff0c\u6d4b\u8bd5\u8986\u76d6\u7684\u7248\u672c\u5305\u62ec 2.7/3.5/3.6/3.7/3.8\u3002\u867d\u7136 HttpRunner \u6682\u65f6\u4fdd\u7559\u4e86\u5bf9 Python 2.7 \u7684\u517c\u5bb9\u652f\u6301\uff0c\u4f46\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528 Python 3.6 \u53ca\u4ee5\u4e0a\u7248\u672c\u3002 \u64cd\u4f5c\u7cfb\u7edf \uff1a\u63a8\u8350\u4f7f\u7528 macOS/Linux\u3002","title":"\u8fd0\u884c\u73af\u5883"},{"location":"Installation/#_3","text":"HttpRunner \u7684\u7a33\u5b9a\u7248\u672c\u6258\u7ba1\u5728 PyPI \u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 pip \u8fdb\u884c\u5b89\u88c5\u3002 $ pip install apimeter","title":"\u5b89\u88c5\u65b9\u5f0f"},{"location":"Installation/#_4","text":"\u5047\u5982\u4f60\u4e4b\u524d\u5df2\u7ecf\u5b89\u88c5\u8fc7\u4e86\uff0c\u73b0\u5728\u9700\u8981\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4f7f\u7528 -U \u53c2\u6570\u3002\u8be5\u53c2\u6570\u5bf9\u4ee5\u4e0a\u4e09\u79cd\u5b89\u88c5\u65b9\u5f0f\u5747\u751f\u6548\u3002 $ pip install -U apimeter","title":"\u7248\u672c\u5347\u7ea7"},{"location":"Installation/#_5","text":"\u5728 HttpRunner \u5b89\u88c5\u6210\u529f\u540e\uff0c\u7cfb\u7edf\u4e2d\u4f1a\u65b0\u589e\u5982\u4e0b 5 \u4e2a\u547d\u4ee4\uff1a httprunner : \u6838\u5fc3\u547d\u4ee4 ate : \u66fe\u7ecf\u7528\u8fc7\u7684\u547d\u4ee4\uff08\u5f53\u65f6\u6846\u67b6\u540d\u79f0\u4e3a ApiTestEngine\uff09\uff0c\u529f\u80fd\u4e0e httprunner \u5b8c\u5168\u76f8\u540c hrun : httprunner \u7684\u7f29\u5199\uff0c\u529f\u80fd\u4e0e httprunner \u5b8c\u5168\u76f8\u540c locusts : \u57fa\u4e8e Locust \u5b9e\u73b0 \u6027\u80fd\u6d4b\u8bd5 har2case : \u8f85\u52a9\u5de5\u5177\uff0c\u53ef\u5c06\u6807\u51c6\u901a\u7528\u7684 HAR \u683c\u5f0f\uff08HTTP Archive\uff09\u8f6c\u6362\u4e3a YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b httprunner\u3001hrun\u3001ate \u4e09\u4e2a\u547d\u4ee4\u5b8c\u5168\u7b49\u4ef7\uff0c\u529f\u80fd\u7279\u6027\u5b8c\u5168\u76f8\u540c\uff0c\u4e2a\u4eba\u63a8\u8350\u4f7f\u7528 hrun \u547d\u4ee4\u3002 \u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u82e5\u6b63\u5e38\u663e\u793a\u7248\u672c\u53f7\uff0c\u5219\u8bf4\u660e HttpRunner \u5b89\u88c5\u6210\u529f\u3002 $ hrun -V 2.4.1 $ har2case -V 0.3.1","title":"\u5b89\u88c5\u6821\u9a8c"},{"location":"Installation/#_6","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b89\u88c5 HttpRunner \u7684\u65f6\u5019\u53ea\u4f1a\u5b89\u88c5\u8fd0\u884c HttpRunner \u7684\u5fc5\u8981\u4f9d\u8d56\u5e93\u3002 \u5982\u679c\u4f60\u4e0d\u4ec5\u4ec5\u662f\u4f7f\u7528 HttpRunner\uff0c\u8fd8\u9700\u8981\u5bf9 HttpRunner \u8fdb\u884c\u5f00\u53d1\u8c03\u8bd5\uff08debug\uff09\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\u3002 HttpRunner \u4f7f\u7528 poetry \u5bf9\u4f9d\u8d56\u5305\u8fdb\u884c\u7ba1\u7406\uff0c\u82e5\u4f60\u8fd8\u6ca1\u6709\u5b89\u88c5 poetry\uff0c\u9700\u8981\u5148\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\uff1a $ curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python \u83b7\u53d6 HttpRunner \u6e90\u7801\uff1a $ git clone https://github.com/HttpRunner/HttpRunner.git \u8fdb\u5165\u4ed3\u5e93\u76ee\u5f55\uff0c\u5b89\u88c5\u6240\u6709\u4f9d\u8d56\uff1a $ poetry install \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u82e5\u6d4b\u8bd5\u5168\u90e8\u901a\u8fc7\uff0c\u5219\u8bf4\u660e\u73af\u5883\u6b63\u5e38\u3002 $ poetry run python -m unittest discover \u67e5\u770b HttpRunner \u7684\u4f9d\u8d56\u60c5\u51b5\uff1a $ poetry show --tree colorama 0 .4.1 Cross-platform colored terminal text. colorlog 4 .0.2 Log formatting with colors! \u2514\u2500\u2500 colorama * coverage 4 .5.4 Code coverage measurement for Python coveralls 1 .8.2 Show coverage stats online via coveralls.io \u251c\u2500\u2500 coverage > = 3 .6,< 5 .0 \u251c\u2500\u2500 docopt > = 0 .6.1 \u251c\u2500\u2500 requests > = 1 .0.0 \u2502 \u251c\u2500\u2500 certifi > = 2017 .4.17 \u2502 \u251c\u2500\u2500 chardet > = 3 .0.2,< 3 .1.0 \u2502 \u251c\u2500\u2500 idna > = 2 .5,< 2 .9 \u2502 \u2514\u2500\u2500 urllib3 > = 1 .21.1,< 1 .25.0 || >1.25.0,< 1 .25.1 || >1.25.1,< 1 .26 \u2514\u2500\u2500 urllib3 * filetype 1 .0.5 Infer file type and MIME type of any file/buffer. No external dependencies. flask 0 .12.4 A microframework based on Werkzeug, Jinja2 and good intentions \u251c\u2500\u2500 click > = 2 .0 \u251c\u2500\u2500 itsdangerous > = 0 .21 \u251c\u2500\u2500 jinja2 > = 2 .4 \u2502 \u2514\u2500\u2500 markupsafe > = 0 .23 \u2514\u2500\u2500 werkzeug > = 0 .7 future 0 .18.1 Clean single-source support for Python 3 and 2 har2case 0 .3.1 Convert HAR ( HTTP Archive ) to YAML/JSON testcases for HttpRunner. \u2514\u2500\u2500 pyyaml * jinja2 2 .10.3 A very fast and expressive template engine. \u2514\u2500\u2500 markupsafe > = 0 .23 jsonpath 0 .82 An XPath for JSON pyyaml 5 .1.2 YAML parser and emitter for Python requests 2 .22.0 Python HTTP for Humans. \u251c\u2500\u2500 certifi > = 2017 .4.17 \u251c\u2500\u2500 chardet > = 3 .0.2,< 3 .1.0 \u251c\u2500\u2500 idna > = 2 .5,< 2 .9 \u2514\u2500\u2500 urllib3 > = 1 .21.1,< 1 .25.0 || >1.25.0,< 1 .25.1 || >1.25.1,< 1 .26 requests-toolbelt 0 .9.1 A utility belt for advanced users of python-requests \u2514\u2500\u2500 requests > = 2 .0.1,< 3 .0.0 \u251c\u2500\u2500 certifi > = 2017 .4.17 \u251c\u2500\u2500 chardet > = 3 .0.2,< 3 .1.0 \u251c\u2500\u2500 idna > = 2 .5,< 2 .9 \u2514\u2500\u2500 urllib3 > = 1 .21.1,< 1 .25.0 || >1.25.0,< 1 .25.1 || >1.25.1,< 1 .26 \u8c03\u8bd5\u8fd0\u884c\u65b9\u5f0f\uff1a # \u8c03\u8bd5\u8fd0\u884c hrun $ poetry run python -m httprunner -h # \u8c03\u8bd5\u8fd0\u884c locusts $ pipenv run python -m httprunner.ext.locusts -h","title":"\u5f00\u53d1\u8005\u6a21\u5f0f"},{"location":"Installation/#docker","text":"TODO","title":"Docker"},{"location":"quickstart/","text":"\u5feb\u901f\u4e0a\u624b\u6307\u5357 \u00b6 \u6b22\u8fce\u4f7f\u7528 ApiMeter\uff01\u8fd9\u4efd\u6307\u5357\u5c06\u5728 10 \u5206\u949f\u5185 \u5e2e\u4f60\u638c\u63e1 ApiMeter \u7684\u6838\u5fc3\u529f\u80fd\uff0c\u8f7b\u677e\u4e0a\u624b API \u81ea\u52a8\u5316\u6d4b\u8bd5\u3002 \ud83c\udfaf \u5b66\u4e60\u76ee\u6807 \u00b6 \u901a\u8fc7\u672c\u6307\u5357\uff0c\u4f60\u5c06\u5b66\u4f1a\uff1a - \u2705 \u5b89\u88c5\u548c\u914d\u7f6e ApiMeter - \u2705 \u7f16\u5199\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b - \u2705 \u4f7f\u7528 ApiMeter \u7684\u6838\u5fc3\u7279\u6027\uff08script \u6821\u9a8c\u3001\u5168\u5c40\u53d8\u91cf\u3001\u81ea\u5b9a\u4e49\u51fd\u6570\uff09 - \u2705 \u8fd0\u884c\u6d4b\u8bd5\u5e76\u67e5\u770b\u62a5\u544a \ud83d\udce6 \u7b2c\u4e00\u6b65\uff1a\u5b89\u88c5 ApiMeter \u00b6 \u5b89\u88c5\u547d\u4ee4 \u00b6 pip install apimeter \u9a8c\u8bc1\u5b89\u88c5 \u00b6 # \u67e5\u770b\u7248\u672c apimeter -V # \u67e5\u770b\u5e2e\u52a9 apimeter -h \ud83d\ude80 \u7b2c\u4e8c\u6b65\uff1a\u51c6\u5907\u6d4b\u8bd5\u73af\u5883 \u00b6 \u6211\u4eec\u5c06\u4f7f\u7528 ApiMeter \u81ea\u5e26\u7684\u6d4b\u8bd5\u670d\u52a1\u5668\u8fdb\u884c\u6f14\u793a\u3002 \u542f\u52a8\u6d4b\u8bd5\u670d\u52a1\u5668 \u00b6 \u9996\u5148\uff0c\u4e0b\u8f7d\u6d4b\u8bd5\u670d\u52a1\u5668\u6587\u4ef6\uff1a # \u65b9\u5f0f1\uff1a\u5982\u679c\u4f60\u5df2\u7ecf\u514b\u9686\u4e86 ApiMeter \u4ed3\u5e93 cd /path/to/apimeter python tests/api_server.py # \u65b9\u5f0f2\uff1a\u76f4\u63a5\u4f7f\u7528\u5728\u7ebf\u670d\u52a1\uff08\u8df3\u8fc7\u672c\u5730\u670d\u52a1\u5668\uff09 # \u6211\u4eec\u540e\u9762\u7684\u793a\u4f8b\u4e5f\u53ef\u4ee5\u4f7f\u7528 https://httpbin.org \u670d\u52a1\u5668\u542f\u52a8\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff1a * Running on http://127.0.0.1:5000/ \u6d4b\u8bd5\u670d\u52a1\u5668\u63a5\u53e3\u8bf4\u660e \u00b6 \u6211\u4eec\u7684\u6d4b\u8bd5\u670d\u52a1\u5668\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6237\u7ba1\u7406 API\uff1a \u63a5\u53e3 \u65b9\u6cd5 \u8bf4\u660e /api/get-token POST \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c /api/users/<id> POST \u521b\u5efa\u7528\u6237 /api/users/<id> GET \u67e5\u8be2\u7528\u6237 /api/users/<id> PUT \u66f4\u65b0\u7528\u6237 /api/users/<id> DELETE \u5220\u9664\u7528\u6237 \ud83d\udcdd \u7b2c\u4e09\u6b65\uff1a\u521b\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b \u00b6 1. \u521b\u5efa\u9879\u76ee\u7ed3\u6784 \u00b6 # \u521b\u5efa\u9879\u76ee\u76ee\u5f55 mkdir my_api_test cd my_api_test # \u521b\u5efa\u5fc5\u8981\u7684\u76ee\u5f55 mkdir -p testcases mkdir -p api 2. \u521b\u5efa\u81ea\u5b9a\u4e49\u51fd\u6570\u6587\u4ef6 \u00b6 \u521b\u5efa debugtalk.py \uff08\u653e\u5728\u9879\u76ee\u6839\u76ee\u5f55\uff09\uff1a import hashlib import hmac SECRET_KEY = \"DebugTalk\" def get_sign ( * args ): \"\"\"\u751f\u6210\u7b7e\u540d\"\"\" content = \"\" . join ( args ) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) sign = hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () return sign def validate_token_length ( token ): \"\"\"\u6821\u9a8c token \u957f\u5ea6\"\"\" assert len ( token ) == 16 , f \"Token length should be 16, got { len ( token ) } \" return True def validate_user_data ( user_data ): \"\"\"\u6821\u9a8c\u7528\u6237\u6570\u636e\u5b8c\u6574\u6027\"\"\" required_fields = [ \"name\" , \"password\" ] for field in required_fields : assert field in user_data , f \"Missing required field: { field } \" return True 3. \u521b\u5efa\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b \u00b6 \u521b\u5efa testcases/test_user_management.yml \uff1a config : name : \"\u7528\u6237\u7ba1\u7406\u63a5\u53e3\u6d4b\u8bd5\" variables : base_url : \"http://127.0.0.1:5000\" user_agent : \"iOS/10.3\" device_sn : \"TEST_DEVICE_001\" os_platform : \"ios\" app_version : \"2.8.6\" teststeps : # ==================== \u6b65\u9aa41\uff1a\u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c ==================== - name : \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c request : url : $base_url/api/get-token method : POST headers : Content-Type : \"application/json\" user_agent : $user_agent device_sn : $device_sn os_platform : $os_platform app_version : $app_version json : sign : ${get_sign($device_sn, $os_platform, $app_version)} extract : # \u63d0\u53d6 token \u4f9b\u540e\u7eed\u6b65\u9aa4\u4f7f\u7528 - token : content.token validate : # \u4f20\u7edf\u6821\u9a8c\u65b9\u5f0f - eq : [ \"status_code\" , 200 ] - eq : [ \"content.success\" , true ] - len_eq : [ \"content.token\" , 16 ] script : # \ud83c\udd95 ApiMeter \u65b0\u7279\u6027\uff1ascript \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c # \u652f\u6301\u4efb\u610f Python \u811a\u672c\uff0c\u66f4\u7075\u6d3b\u5f3a\u5927 # \u57fa\u7840\u65ad\u8a00 - assert status_code == 200 - assert content.success is True # \u5168\u5c40\u53d8\u91cf\u76f4\u63a5\u8bbf\u95ee\uff08\u65e0\u9700 $ \u524d\u7f00\uff09 - assert len(content.token) == 16 - assert content.token is not None # \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 - ${validate_token_length(content.token)} # \u590d\u6742\u6761\u4ef6\u5224\u65ad - | if status_code == 200: assert content.success is True assert \"token\" in content else: assert content.success is False # \u6027\u80fd\u6821\u9a8c - assert elapsed.total_seconds < 2.0 # ==================== \u6b65\u9aa42\uff1a\u521b\u5efa\u7528\u6237 ==================== - name : \u521b\u5efa\u65b0\u7528\u6237 request : url : $base_url/api/users/1001 method : POST headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token # \u4f7f\u7528\u4e0a\u4e00\u6b65\u63d0\u53d6\u7684 token json : name : \"\u6d4b\u8bd5\u7528\u6237\" password : \"123456\" script : # \u72b6\u6001\u7801\u6821\u9a8c - assert status_code == 201 - assert content.success is True - assert content.msg == \"user created successfully.\" # \u81ea\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f - assert status_code == 201, f\"\u671f\u671b\u72b6\u6001\u7801 201\uff0c\u5b9e\u9645\u5f97\u5230 {status_code}\" # ==================== \u6b65\u9aa43\uff1a\u67e5\u8be2\u7528\u6237 ==================== - name : \u67e5\u8be2\u7528\u6237\u4fe1\u606f request : url : $base_url/api/users/1001 method : GET headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token extract : - user_name : content.data.name - user_password : content.data.password script : # \u57fa\u7840\u6821\u9a8c - assert status_code == 200 - assert content.success is True # \ud83c\udd95 \u94fe\u5f0f\u53d6\u503c\uff08\u6df1\u5c42\u6570\u636e\u8bbf\u95ee\uff09 - assert content.data.name == \"\u6d4b\u8bd5\u7528\u6237\" - assert content.data.password == \"123456\" # \ud83c\udd95 \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\u6570\u636e\u7ed3\u6784 - ${validate_user_data(content.data)} # \u6570\u636e\u7c7b\u578b\u6821\u9a8c - assert isinstance(content.data, dict) - assert len(content.data) >= 2 # ==================== \u6b65\u9aa44\uff1a\u66f4\u65b0\u7528\u6237 ==================== - name : \u66f4\u65b0\u7528\u6237\u4fe1\u606f request : url : $base_url/api/users/1001 method : PUT headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token json : name : \"\u66f4\u65b0\u540e\u7684\u7528\u6237\u540d\" password : \"new_password\" script : - assert status_code == 200 - assert content.success is True - assert content.data.name == \"\u66f4\u65b0\u540e\u7684\u7528\u6237\u540d\" - assert content.data.password == \"new_password\" # ==================== \u6b65\u9aa45\uff1a\u5220\u9664\u7528\u6237 ==================== - name : \u5220\u9664\u7528\u6237 request : url : $base_url/api/users/1001 method : DELETE headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token script : - assert status_code == 200 - assert content.success is True - assert content.data.name == \"\u66f4\u65b0\u540e\u7684\u7528\u6237\u540d\" \ud83c\udfae \u7b2c\u56db\u6b65\uff1a\u8fd0\u884c\u6d4b\u8bd5 \u00b6 \u57fa\u7840\u8fd0\u884c \u00b6 # \u8fd0\u884c\u5355\u4e2a\u6d4b\u8bd5\u6587\u4ef6 hrun testcases/test_user_management.yml # \u8fd0\u884c\u6574\u4e2a\u76ee\u5f55 hrun testcases/ # \u8be6\u7ec6\u6a21\u5f0f\uff08\u663e\u793a\u66f4\u591a\u65e5\u5fd7\uff09 hrun testcases/test_user_management.yml --log-level debug \u751f\u6210 HTML \u62a5\u544a \u00b6 # \u751f\u6210\u5b8c\u6574\u62a5\u544a hrun testcases/test_user_management.yml --html report.html # \u62a5\u544a\u4e2d\u8df3\u8fc7\u6210\u529f\u7528\u4f8b\uff08\u4ec5\u663e\u793a\u5931\u8d25\u548c\u9519\u8bef\uff09 hrun testcases/test_user_management.yml --html report.html --skip-success # \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u62a5\u544a open report.html # macOS # \u6216 xdg-open report.html # Linux # \u6216\u76f4\u63a5\u7528\u6d4f\u89c8\u5668\u6253\u5f00 report.html \u9884\u671f\u8f93\u51fa \u00b6 test_user_management.yml \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c \u2713 \u521b\u5efa\u65b0\u7528\u6237 \u2713 \u67e5\u8be2\u7528\u6237\u4fe1\u606f \u2713 \u66f4\u65b0\u7528\u6237\u4fe1\u606f \u2713 \u5220\u9664\u7528\u6237 \u2713 ---------------------------------------------------------------------- Ran 5 tests in 0.123s OK \ud83c\udfaf \u7b2c\u4e94\u6b65\uff1a\u4f53\u9a8c ApiMeter \u6838\u5fc3\u7279\u6027 \u00b6 \u7279\u6027 1\uff1ascript \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c \u00b6 \u4f20\u7edf\u65b9\u5f0f vs ApiMeter \u65b9\u5f0f \uff1a # \u274c \u4f20\u7edf\u65b9\u5f0f\uff1avalidate\uff08\u529f\u80fd\u6709\u9650\uff09 validate : - eq : [ \"status_code\" , 200 ] - eq : [ \"content.success\" , true ] - len_eq : [ \"content.token\" , 16 ] # \u2705 ApiMeter \u65b9\u5f0f\uff1ascript\uff08\u529f\u80fd\u5f3a\u5927\uff09 script : # \u76f4\u63a5\u4f7f\u7528 Python assert \u8bed\u53e5 - assert status_code == 200 - assert content.success is True - assert len(content.token) == 16 # \u652f\u6301\u590d\u6742\u6761\u4ef6 - assert status_code in [200, 201, 202] # \u652f\u6301\u5faa\u73af - | for item in content.items: assert item.get(\"id\") is not None # \u652f\u6301\u6761\u4ef6\u5224\u65ad - | if content.user.vip_level > 0: assert content.user.vip_expires is not None \u7279\u6027 2\uff1a\u5168\u5c40\u53d8\u91cf\u65e0\u7f1d\u8bbf\u95ee \u00b6 \u5728 script \u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6240\u6709\u54cd\u5e94\u5b57\u6bb5\uff0c\u65e0\u9700\u7279\u6b8a\u8bed\u6cd5\uff1a script : # \u76f4\u63a5\u8bbf\u95ee\uff0c\u65e0\u9700 $ \u524d\u7f00 - assert status_code == 200 - assert headers[\"Content-Type\"] == \"application/json\" - assert content.user.id > 0 - assert cookies.session_id is not None - assert elapsed.total_seconds < 2.0 # \u652f\u6301\u94fe\u5f0f\u53d6\u503c\uff08\u6df1\u5c42\u8bbf\u95ee\uff09 - assert content.data.user.profile.age > 0 \u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\uff1a - status_code - HTTP \u72b6\u6001\u7801 - headers - \u54cd\u5e94\u5934 - cookies - Cookie \u4fe1\u606f - content / body / json - \u54cd\u5e94\u4f53 - elapsed - \u54cd\u5e94\u65f6\u95f4 - ok - \u8bf7\u6c42\u662f\u5426\u6210\u529f - reason - \u72b6\u6001\u8bf4\u660e - url - \u8bf7\u6c42 URL \u7279\u6027 3\uff1a\u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u53c2\u6570 \u00b6 ApiMeter \u652f\u6301\u5411\u81ea\u5b9a\u4e49\u51fd\u6570\u4f20\u9012\u590d\u6742\u53c2\u6570\uff1a # 1\ufe0f\u20e3 \u7b80\u5355\u53c2\u6570 script : - ${validate_token(content.token)} # 2\ufe0f\u20e3 \u5217\u8868\u53c2\u6570 request : json : sign : ${get_sign_v2([$device_sn, $os_platform, $app_version])} # 3\ufe0f\u20e3 \u5b57\u5178\u53c2\u6570 request : json : sign : \"${get_sign_v3({device_sn: $device_sn, platform: $os_platform})}\" # 4\ufe0f\u20e3 \u590d\u6742\u5d4c\u5957\u5bf9\u8c61 script : - \"${check_nested_fields(content, {list_path: productList, check_fields: [id, name, price]})}\" \u5bf9\u5e94\u7684 debugtalk.py \u51fd\u6570\uff1a # 1\ufe0f\u20e3 \u7b80\u5355\u53c2\u6570 def validate_token ( token ): assert len ( token ) == 16 return True # 2\ufe0f\u20e3 \u5217\u8868\u53c2\u6570 def get_sign_v2 ( args_list ): content = \"\" . join ( args_list ) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) return hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () # 3\ufe0f\u20e3 \u5b57\u5178\u53c2\u6570 def get_sign_v3 ( args_dict ): content = \"\" . join ([ args_dict [ \"device_sn\" ], args_dict [ \"platform\" ]]) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) return hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () # 4\ufe0f\u20e3 \u590d\u6742\u5d4c\u5957\u5bf9\u8c61 def check_nested_fields ( data , config ): list_path = config [ \"list_path\" ] check_fields = config [ \"check_fields\" ] for item in data [ list_path ]: for field in check_fields : assert field in item return True \u7279\u6027 4\uff1a\u53d8\u91cf\u8f6c\u4e49 \u00b6 \u5f53\u6570\u636e\u5b57\u6bb5\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u4f7f\u7528\u53cd\u659c\u6760\u8f6c\u4e49\uff1a script : # content \u662f\u5168\u5c40\u53d8\u91cf\uff08\u54cd\u5e94\u5185\u5bb9\uff09 # \\content \u662f\u5b57\u7b26\u4e32 \"content\"\uff08\u5b57\u6bb5\u540d\uff09 - ${check_field_exists(data, \\content)} def check_field_exists ( data , field_name ): \"\"\" \u68c0\u67e5\u6570\u636e\u4e2d\u662f\u5426\u5b58\u5728\u6307\u5b9a\u5b57\u6bb5 field_name \u63a5\u6536\u5230\u7684\u662f\u5b57\u7b26\u4e32 \"content\" \"\"\" return field_name in data \ud83d\udcca \u7b2c\u516d\u6b65\uff1a\u67e5\u770b\u6d4b\u8bd5\u62a5\u544a \u00b6 \u8fd0\u884c\u6d4b\u8bd5\u540e\u751f\u6210\u7684 HTML \u62a5\u544a\u5305\u542b\uff1a 1. \u6d4b\u8bd5\u6982\u89c8 \u00b6 \u2705 \u603b\u7528\u4f8b\u6570\u3001\u6210\u529f\u6570\u3001\u5931\u8d25\u6570 \u2705 \u6267\u884c\u65f6\u95f4\u7edf\u8ba1 \u2705 \u6210\u529f\u7387\u767e\u5206\u6bd4 2. \u8be6\u7ec6\u7ed3\u679c\uff08\ud83c\udd95 ApiMeter \u589e\u5f3a\u7279\u6027\uff09 \u00b6 \u667a\u80fd\u6298\u53e0 \uff1a - \u8d85\u8fc7 15 \u884c\u7684\u5185\u5bb9\u81ea\u52a8\u6298\u53e0 - \u70b9\u51fb\u5c55\u5f00/\u6298\u53e0 - \u4e00\u952e\u590d\u5236\u6309\u94ae JSON \u6811\u5f62\u5c55\u793a \uff1a - \u81ea\u52a8\u8bc6\u522b JSON \u548c Python \u5b57\u5178 - \u5f69\u8272\u8bed\u6cd5\u9ad8\u4eae - \u8282\u70b9\u7ea7\u522b\u5c55\u5f00/\u6298\u53e0 - \u63d0\u5347\u5927\u6570\u636e\u91cf\u573a\u666f\u7684\u53ef\u8bfb\u6027 Script \u6821\u9a8c\u5c55\u793a \uff1a - \u6bcf\u6761\u811a\u672c\u7684\u6267\u884c\u7ed3\u679c - \u5931\u8d25\u811a\u672c\u7684\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f - \u6267\u884c\u8f93\u51fa\u548c\u8fd4\u56de\u503c \ud83c\udf93 \u8fdb\u9636\u5b66\u4e60 \u00b6 \u53c2\u6570\u5316\u6d4b\u8bd5 \u00b6 \u521b\u5efa\u6570\u636e\u6587\u4ef6 data/users.csv \uff1a user_id,user_name,password 1001,Alice,pass123 1002,Bob,pass456 1003,Charlie,pass789 \u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u4f7f\u7528\uff1a config : name : \"\u53c2\u6570\u5316\u7528\u6237\u521b\u5efa\u6d4b\u8bd5\" parameters : - user_id-user_name-password : ${P(data/users.csv)} teststeps : - name : \"\u521b\u5efa\u7528\u6237 - ${user_name}\" request : url : $base_url/api/users/$user_id method : POST json : name : $user_name password : $password script : - assert status_code == 201 - assert content.success is True \u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42 \u00b6 \u5c06\u63a5\u53e3\u5b9a\u4e49\u548c\u6d4b\u8bd5\u903b\u8f91\u5206\u79bb\uff1a api/create_user.yml \uff08\u63a5\u53e3\u5b9a\u4e49\uff09\uff1a name : \u521b\u5efa\u7528\u6237\u63a5\u53e3 variables : user_id : 9999 user_name : \"default\" user_password : \"000000\" request : url : $base_url/api/users/$user_id method : POST headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token json : name : $user_name password : $user_password validate : - eq : [ \"status_code\" , 201 ] testcases/test_create_user.yml \uff08\u6d4b\u8bd5\u7528\u4f8b\uff09\uff1a config : name : \"\u521b\u5efa\u7528\u6237\u6d4b\u8bd5\u573a\u666f\" variables : base_url : \"http://127.0.0.1:5000\" teststeps : - name : \u83b7\u53d6 token testcase : testcases/setup.yml extract : - token - name : \u521b\u5efa\u7528\u6237 Alice api : api/create_user.yml variables : user_id : 2001 user_name : \"Alice\" user_password : \"alice123\" script : - assert content.success is True - name : \u521b\u5efa\u7528\u6237 Bob api : api/create_user.yml variables : user_id : 2002 user_name : \"Bob\" user_password : \"bob456\" script : - assert content.success is True \u73af\u5883\u53d8\u91cf\u7ba1\u7406 \u00b6 \u521b\u5efa .env \u6587\u4ef6\uff1a # \u5f00\u53d1\u73af\u5883 BASE_URL = http://127.0.0.1:5000 DEVICE_SN = DEV_DEVICE_001 # \u6d4b\u8bd5\u73af\u5883 # BASE_URL=https://test.example.com # DEVICE_SN=TEST_DEVICE_001 # \u751f\u4ea7\u73af\u5883 # BASE_URL=https://api.example.com # DEVICE_SN=PROD_DEVICE_001 \u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u4f7f\u7528\uff1a config : name : \"\u73af\u5883\u914d\u7f6e\u793a\u4f8b\" variables : base_url : ${ENV(BASE_URL)} device_sn : ${ENV(DEVICE_SN)} \ud83d\udd25 \u5b9e\u6218\u7ec3\u4e60 \u00b6 \u7ec3\u4e60 1\uff1aHTTP \u63a5\u53e3\u6d4b\u8bd5 \u00b6 \u4f7f\u7528\u516c\u5171\u6d4b\u8bd5\u63a5\u53e3 https://httpbin.org \u7ec3\u4e60\uff1a config : name : \"HTTPBin \u6d4b\u8bd5\u7ec3\u4e60\" base_url : \"https://httpbin.org\" teststeps : - name : GET \u8bf7\u6c42\u6d4b\u8bd5 request : url : /get method : GET params : name : \"ApiMeter\" version : \"2.12\" script : - assert status_code == 200 - assert json.args.name == \"ApiMeter\" - assert json.args.version == \"2.12\" - assert json.url.startswith(\"https://httpbin.org\") - name : POST \u8bf7\u6c42\u6d4b\u8bd5 request : url : /post method : POST json : username : \"test_user\" email : \"test@example.com\" script : - assert status_code == 200 - assert json.json.username == \"test_user\" - assert json.json.email == \"test@example.com\" - name : \u54cd\u5e94\u5934\u6d4b\u8bd5 request : url : /headers method : GET script : - assert status_code == 200 - assert \"User-Agent\" in json.headers - assert json.headers[\"Host\"] == \"httpbin.org\" - name : \u54cd\u5e94\u72b6\u6001\u7801\u6d4b\u8bd5 request : url : /status/404 method : GET script : - assert status_code == 404 - assert ok is False \u7ec3\u4e60 2\uff1a\u8ba4\u8bc1\u6d41\u7a0b\u6d4b\u8bd5 \u00b6 \u6a21\u62df\u5b8c\u6574\u7684 OAuth2 \u8ba4\u8bc1\u6d41\u7a0b\uff1a config : name : \"OAuth2 \u8ba4\u8bc1\u6d41\u7a0b\" variables : client_id : \"test_client\" client_secret : \"test_secret\" teststeps : - name : \u83b7\u53d6\u6388\u6743\u7801 request : url : https://oauth.example.com/authorize method : POST json : client_id : $client_id response_type : \"code\" extract : - auth_code : content.code script : - assert status_code == 200 - assert content.code is not None - name : \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c request : url : https://oauth.example.com/token method : POST json : client_id : $client_id client_secret : $client_secret code : $auth_code grant_type : \"authorization_code\" extract : - access_token : content.access_token - refresh_token : content.refresh_token script : - assert status_code == 200 - assert content.access_token is not None - assert content.token_type == \"Bearer\" - assert content.expires_in > 0 - name : \u4f7f\u7528\u8bbf\u95ee\u4ee4\u724c\u8bf7\u6c42 API request : url : https://api.example.com/user/profile method : GET headers : Authorization : \"Bearer $access_token\" script : - assert status_code == 200 - assert content.user_id is not None \ud83d\udcda \u4e0b\u4e00\u6b65\u5b66\u4e60 \u00b6 \u606d\u559c\u4f60\uff01\u4f60\u5df2\u7ecf\u638c\u63e1\u4e86 ApiMeter \u7684\u6838\u5fc3\u529f\u80fd\u3002\u63a5\u4e0b\u6765\u53ef\u4ee5\uff1a \u6df1\u5165\u5b66\u4e60 \u00b6 \ud83d\udcd6 \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u8be6\u89e3 - \u638c\u63e1 script \u7684\u6240\u6709\u7528\u6cd5 \ud83d\udcd6 \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 - \u5b66\u4e60\u590d\u6742\u53c2\u6570\u4f20\u9012 \ud83d\udcd6 \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 - \u4e86\u89e3\u6240\u6709\u53ef\u7528\u53d8\u91cf \ud83d\udcd6 \u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a - \u4e86\u89e3\u62a5\u544a\u4f18\u5316\u7279\u6027 \u5b9e\u6218\u6848\u4f8b \u00b6 \ud83c\udfaf \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b - \u771f\u5b9e\u573a\u666f\u6848\u4f8b \ud83c\udfaf \u5b8c\u6574\u9879\u76ee\u793a\u4f8b - \u4f01\u4e1a\u7ea7\u9879\u76ee\u7ed3\u6784 \u8fdb\u9636\u4e3b\u9898 \u00b6 \ud83d\ude80 \u6027\u80fd\u6d4b\u8bd5 - \u4f7f\u7528 Locust \u8fdb\u884c\u538b\u6d4b \ud83d\ude80 \u6301\u7eed\u96c6\u6210 - \u96c6\u6210\u5230 CI/CD \u6d41\u7a0b \ud83d\ude80 \u7528\u4f8b\u5206\u5c42 - \u4f18\u5316\u7528\u4f8b\u7ec4\u7ec7\u7ed3\u6784 \u2753 \u5e38\u89c1\u95ee\u9898 \u00b6 1. \u4e3a\u4ec0\u4e48\u63a8\u8350\u4f7f\u7528 script \u800c\u4e0d\u662f validate\uff1f \u00b6 \u56de\u7b54 \uff1a \u2705 script \u4f18\u52bf \uff1a \u4f7f\u7528\u6807\u51c6 Python \u8bed\u6cd5\uff0c\u96f6\u5b66\u4e60\u6210\u672c \u652f\u6301\u4efb\u610f\u590d\u6742\u903b\u8f91\uff08\u6761\u4ef6\u3001\u5faa\u73af\u3001\u51fd\u6570\uff09 \u9010\u6761\u6267\u884c\uff0c\u5355\u6761\u5931\u8d25\u4e0d\u5f71\u54cd\u5176\u4ed6\u6821\u9a8c \u9519\u8bef\u4fe1\u606f\u66f4\u6e05\u6670 \u26a0\ufe0f validate \u5c40\u9650 \uff1a \u9700\u8981\u8bb0\u5fc6\u7279\u5b9a\u8bed\u6cd5 \u590d\u6742\u903b\u8f91\u96be\u4ee5\u5b9e\u73b0 \u529f\u80fd\u76f8\u5bf9\u56fa\u5b9a \u5efa\u8bae \uff1a\u65b0\u9879\u76ee\u4f18\u5148\u4f7f\u7528 script \uff0c\u4e24\u8005\u53ef\u4ee5\u5171\u5b58\u3002 2. script \u4e2d\u7684\u53d8\u91cf\u9700\u8981\u52a0 $ \u524d\u7f00\u5417\uff1f \u00b6 \u56de\u7b54 \uff1a script : # \u274c \u9519\u8bef\uff1a\u4e0d\u9700\u8981 $ \u524d\u7f00 - assert $status_code == 200 # \u2705 \u6b63\u786e\uff1a\u5168\u5c40\u53d8\u91cf\u76f4\u63a5\u4f7f\u7528 - assert status_code == 200 - assert content.token is not None # \u2705 \u6b63\u786e\uff1a\u81ea\u5b9a\u4e49\u53d8\u91cf\u9700\u8981\u5f15\u53f7\u548c $ - assert \"$token\" is not None - assert len(\"$token\") == 16 # \u2705 \u6b63\u786e\uff1a\u5728\u51fd\u6570\u4e2d\u5f15\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf - ${validate_token($token)} 3. \u5982\u4f55\u8c03\u8bd5\u5931\u8d25\u7684\u6d4b\u8bd5\uff1f \u00b6 \u65b9\u6cd5 1 \uff1a\u67e5\u770b\u8be6\u7ec6\u65e5\u5fd7 hrun testcases/test.yml --log-level debug \u65b9\u6cd5 2 \uff1a\u5728 debugtalk.py \u4e2d\u6dfb\u52a0\u65e5\u5fd7 from apimeter.logger import log_debug , log_info def my_function ( data ): log_debug ( f \"\u63a5\u6536\u5230\u7684\u6570\u636e: { data } \" ) # \u4f60\u7684\u903b\u8f91 result = process ( data ) log_info ( f \"\u5904\u7406\u7ed3\u679c: { result } \" ) return result \u65b9\u6cd5 3 \uff1a\u67e5\u770b HTML \u62a5\u544a \u62a5\u544a\u4e2d\u5305\u542b\u6bcf\u4e2a\u6b65\u9aa4\u7684\u5b8c\u6574\u8bf7\u6c42\u548c\u54cd\u5e94\u4fe1\u606f\uff0c\u4ee5\u53ca script \u6267\u884c\u8be6\u60c5\u3002 4. \u5982\u4f55\u7ec4\u7ec7\u5927\u578b\u6d4b\u8bd5\u9879\u76ee\uff1f \u00b6 \u63a8\u8350\u7ed3\u6784 \uff1a my_project/ \u251c\u2500\u2500 api/ # \u63a5\u53e3\u5b9a\u4e49\u5c42 \u2502 \u251c\u2500\u2500 auth/ \u2502 \u2502 \u251c\u2500\u2500 login.yml \u2502 \u2502 \u2514\u2500\u2500 logout.yml \u2502 \u2514\u2500\u2500 user/ \u2502 \u251c\u2500\u2500 create.yml \u2502 \u251c\u2500\u2500 update.yml \u2502 \u2514\u2500\u2500 delete.yml \u251c\u2500\u2500 testcases/ # \u6d4b\u8bd5\u7528\u4f8b\u5c42 \u2502 \u251c\u2500\u2500 test_auth.yml \u2502 \u2514\u2500\u2500 test_user_crud.yml \u251c\u2500\u2500 testsuites/ # \u6d4b\u8bd5\u5957\u4ef6\u5c42 \u2502 \u2514\u2500\u2500 full_regression.yml \u251c\u2500\u2500 data/ # \u6d4b\u8bd5\u6570\u636e \u2502 \u251c\u2500\u2500 users.csv \u2502 \u2514\u2500\u2500 products.csv \u251c\u2500\u2500 debugtalk.py # \u81ea\u5b9a\u4e49\u51fd\u6570 \u251c\u2500\u2500 .env # \u73af\u5883\u914d\u7f6e \u2514\u2500\u2500 reports/ # \u6d4b\u8bd5\u62a5\u544a \ud83c\udf89 \u603b\u7ed3 \u00b6 \u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\uff1a \u2705 \u5b89\u88c5\u548c\u8fd0\u884c ApiMeter \u2705 \u7f16\u5199\u57fa\u672c\u6d4b\u8bd5\u7528\u4f8b\uff08request + validate + script\uff09 \u2705 \u4f7f\u7528 script \u8fdb\u884c\u5f3a\u5927\u7684\u81ea\u5b9a\u4e49\u6821\u9a8c \u2705 \u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u548c\u94fe\u5f0f\u53d6\u503c \u2705 \u7f16\u5199\u548c\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 \u2705 \u751f\u6210\u548c\u67e5\u770b HTML \u62a5\u544a \u2705 \u53c2\u6570\u5316\u6d4b\u8bd5\u548c\u7528\u4f8b\u5206\u5c42 ApiMeter \u7684\u6838\u5fc3\u4f18\u52bf \uff1a \u7279\u6027 \u4f20\u7edf\u5de5\u5177 ApiMeter \u6821\u9a8c\u80fd\u529b \u56fa\u5b9a\u8bed\u6cd5 Python \u811a\u672c\uff0c\u65e0\u9650\u53ef\u80fd \u5b66\u4e60\u6210\u672c \u9700\u8bb0\u5fc6\u7279\u5b9a\u8bed\u6cd5 \u6807\u51c6 Python\uff0c\u96f6\u5b66\u4e60\u6210\u672c \u590d\u6742\u903b\u8f91 \u6709\u9650\u652f\u6301 \u5b8c\u5168\u652f\u6301\uff08\u6761\u4ef6\u3001\u5faa\u73af\u3001\u51fd\u6570\uff09 \u9519\u8bef\u5904\u7406 \u5355\u70b9\u5931\u8d25 \u9010\u6761\u6267\u884c\uff0c\u5bb9\u9519\u5904\u7406 \u6d4b\u8bd5\u62a5\u544a \u57fa\u7840\u5c55\u793a \u667a\u80fd\u6298\u53e0\u3001\u6811\u5f62\u5c55\u793a \u73b0\u5728\uff0c\u5f00\u59cb\u4f60\u7684 API \u81ea\u52a8\u5316\u6d4b\u8bd5\u4e4b\u65c5\u5427\uff01\ud83d\ude80 \u9700\u8981\u5e2e\u52a9\uff1f - \ud83d\udcd6 \u5b8c\u6574\u6587\u6863 - \ud83d\udc1b \u95ee\u9898\u53cd\u9988 - \ud83d\udcac \u6280\u672f\u4ea4\u6d41\u7fa4","title":"\u5feb\u901f\u4e0a\u624b\u6307\u5357"},{"location":"quickstart/#_1","text":"\u6b22\u8fce\u4f7f\u7528 ApiMeter\uff01\u8fd9\u4efd\u6307\u5357\u5c06\u5728 10 \u5206\u949f\u5185 \u5e2e\u4f60\u638c\u63e1 ApiMeter \u7684\u6838\u5fc3\u529f\u80fd\uff0c\u8f7b\u677e\u4e0a\u624b API \u81ea\u52a8\u5316\u6d4b\u8bd5\u3002","title":"\u5feb\u901f\u4e0a\u624b\u6307\u5357"},{"location":"quickstart/#_2","text":"\u901a\u8fc7\u672c\u6307\u5357\uff0c\u4f60\u5c06\u5b66\u4f1a\uff1a - \u2705 \u5b89\u88c5\u548c\u914d\u7f6e ApiMeter - \u2705 \u7f16\u5199\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b - \u2705 \u4f7f\u7528 ApiMeter \u7684\u6838\u5fc3\u7279\u6027\uff08script \u6821\u9a8c\u3001\u5168\u5c40\u53d8\u91cf\u3001\u81ea\u5b9a\u4e49\u51fd\u6570\uff09 - \u2705 \u8fd0\u884c\u6d4b\u8bd5\u5e76\u67e5\u770b\u62a5\u544a","title":"\ud83c\udfaf \u5b66\u4e60\u76ee\u6807"},{"location":"quickstart/#apimeter","text":"","title":"\ud83d\udce6 \u7b2c\u4e00\u6b65\uff1a\u5b89\u88c5 ApiMeter"},{"location":"quickstart/#_3","text":"pip install apimeter","title":"\u5b89\u88c5\u547d\u4ee4"},{"location":"quickstart/#_4","text":"# \u67e5\u770b\u7248\u672c apimeter -V # \u67e5\u770b\u5e2e\u52a9 apimeter -h","title":"\u9a8c\u8bc1\u5b89\u88c5"},{"location":"quickstart/#_5","text":"\u6211\u4eec\u5c06\u4f7f\u7528 ApiMeter \u81ea\u5e26\u7684\u6d4b\u8bd5\u670d\u52a1\u5668\u8fdb\u884c\u6f14\u793a\u3002","title":"\ud83d\ude80 \u7b2c\u4e8c\u6b65\uff1a\u51c6\u5907\u6d4b\u8bd5\u73af\u5883"},{"location":"quickstart/#_6","text":"\u9996\u5148\uff0c\u4e0b\u8f7d\u6d4b\u8bd5\u670d\u52a1\u5668\u6587\u4ef6\uff1a # \u65b9\u5f0f1\uff1a\u5982\u679c\u4f60\u5df2\u7ecf\u514b\u9686\u4e86 ApiMeter \u4ed3\u5e93 cd /path/to/apimeter python tests/api_server.py # \u65b9\u5f0f2\uff1a\u76f4\u63a5\u4f7f\u7528\u5728\u7ebf\u670d\u52a1\uff08\u8df3\u8fc7\u672c\u5730\u670d\u52a1\u5668\uff09 # \u6211\u4eec\u540e\u9762\u7684\u793a\u4f8b\u4e5f\u53ef\u4ee5\u4f7f\u7528 https://httpbin.org \u670d\u52a1\u5668\u542f\u52a8\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff1a * Running on http://127.0.0.1:5000/","title":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1\u5668"},{"location":"quickstart/#_7","text":"\u6211\u4eec\u7684\u6d4b\u8bd5\u670d\u52a1\u5668\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6237\u7ba1\u7406 API\uff1a \u63a5\u53e3 \u65b9\u6cd5 \u8bf4\u660e /api/get-token POST \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c /api/users/<id> POST \u521b\u5efa\u7528\u6237 /api/users/<id> GET \u67e5\u8be2\u7528\u6237 /api/users/<id> PUT \u66f4\u65b0\u7528\u6237 /api/users/<id> DELETE \u5220\u9664\u7528\u6237","title":"\u6d4b\u8bd5\u670d\u52a1\u5668\u63a5\u53e3\u8bf4\u660e"},{"location":"quickstart/#_8","text":"","title":"\ud83d\udcdd \u7b2c\u4e09\u6b65\uff1a\u521b\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b"},{"location":"quickstart/#1","text":"# \u521b\u5efa\u9879\u76ee\u76ee\u5f55 mkdir my_api_test cd my_api_test # \u521b\u5efa\u5fc5\u8981\u7684\u76ee\u5f55 mkdir -p testcases mkdir -p api","title":"1. \u521b\u5efa\u9879\u76ee\u7ed3\u6784"},{"location":"quickstart/#2","text":"\u521b\u5efa debugtalk.py \uff08\u653e\u5728\u9879\u76ee\u6839\u76ee\u5f55\uff09\uff1a import hashlib import hmac SECRET_KEY = \"DebugTalk\" def get_sign ( * args ): \"\"\"\u751f\u6210\u7b7e\u540d\"\"\" content = \"\" . join ( args ) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) sign = hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () return sign def validate_token_length ( token ): \"\"\"\u6821\u9a8c token \u957f\u5ea6\"\"\" assert len ( token ) == 16 , f \"Token length should be 16, got { len ( token ) } \" return True def validate_user_data ( user_data ): \"\"\"\u6821\u9a8c\u7528\u6237\u6570\u636e\u5b8c\u6574\u6027\"\"\" required_fields = [ \"name\" , \"password\" ] for field in required_fields : assert field in user_data , f \"Missing required field: { field } \" return True","title":"2. \u521b\u5efa\u81ea\u5b9a\u4e49\u51fd\u6570\u6587\u4ef6"},{"location":"quickstart/#3","text":"\u521b\u5efa testcases/test_user_management.yml \uff1a config : name : \"\u7528\u6237\u7ba1\u7406\u63a5\u53e3\u6d4b\u8bd5\" variables : base_url : \"http://127.0.0.1:5000\" user_agent : \"iOS/10.3\" device_sn : \"TEST_DEVICE_001\" os_platform : \"ios\" app_version : \"2.8.6\" teststeps : # ==================== \u6b65\u9aa41\uff1a\u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c ==================== - name : \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c request : url : $base_url/api/get-token method : POST headers : Content-Type : \"application/json\" user_agent : $user_agent device_sn : $device_sn os_platform : $os_platform app_version : $app_version json : sign : ${get_sign($device_sn, $os_platform, $app_version)} extract : # \u63d0\u53d6 token \u4f9b\u540e\u7eed\u6b65\u9aa4\u4f7f\u7528 - token : content.token validate : # \u4f20\u7edf\u6821\u9a8c\u65b9\u5f0f - eq : [ \"status_code\" , 200 ] - eq : [ \"content.success\" , true ] - len_eq : [ \"content.token\" , 16 ] script : # \ud83c\udd95 ApiMeter \u65b0\u7279\u6027\uff1ascript \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c # \u652f\u6301\u4efb\u610f Python \u811a\u672c\uff0c\u66f4\u7075\u6d3b\u5f3a\u5927 # \u57fa\u7840\u65ad\u8a00 - assert status_code == 200 - assert content.success is True # \u5168\u5c40\u53d8\u91cf\u76f4\u63a5\u8bbf\u95ee\uff08\u65e0\u9700 $ \u524d\u7f00\uff09 - assert len(content.token) == 16 - assert content.token is not None # \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 - ${validate_token_length(content.token)} # \u590d\u6742\u6761\u4ef6\u5224\u65ad - | if status_code == 200: assert content.success is True assert \"token\" in content else: assert content.success is False # \u6027\u80fd\u6821\u9a8c - assert elapsed.total_seconds < 2.0 # ==================== \u6b65\u9aa42\uff1a\u521b\u5efa\u7528\u6237 ==================== - name : \u521b\u5efa\u65b0\u7528\u6237 request : url : $base_url/api/users/1001 method : POST headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token # \u4f7f\u7528\u4e0a\u4e00\u6b65\u63d0\u53d6\u7684 token json : name : \"\u6d4b\u8bd5\u7528\u6237\" password : \"123456\" script : # \u72b6\u6001\u7801\u6821\u9a8c - assert status_code == 201 - assert content.success is True - assert content.msg == \"user created successfully.\" # \u81ea\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f - assert status_code == 201, f\"\u671f\u671b\u72b6\u6001\u7801 201\uff0c\u5b9e\u9645\u5f97\u5230 {status_code}\" # ==================== \u6b65\u9aa43\uff1a\u67e5\u8be2\u7528\u6237 ==================== - name : \u67e5\u8be2\u7528\u6237\u4fe1\u606f request : url : $base_url/api/users/1001 method : GET headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token extract : - user_name : content.data.name - user_password : content.data.password script : # \u57fa\u7840\u6821\u9a8c - assert status_code == 200 - assert content.success is True # \ud83c\udd95 \u94fe\u5f0f\u53d6\u503c\uff08\u6df1\u5c42\u6570\u636e\u8bbf\u95ee\uff09 - assert content.data.name == \"\u6d4b\u8bd5\u7528\u6237\" - assert content.data.password == \"123456\" # \ud83c\udd95 \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\u6570\u636e\u7ed3\u6784 - ${validate_user_data(content.data)} # \u6570\u636e\u7c7b\u578b\u6821\u9a8c - assert isinstance(content.data, dict) - assert len(content.data) >= 2 # ==================== \u6b65\u9aa44\uff1a\u66f4\u65b0\u7528\u6237 ==================== - name : \u66f4\u65b0\u7528\u6237\u4fe1\u606f request : url : $base_url/api/users/1001 method : PUT headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token json : name : \"\u66f4\u65b0\u540e\u7684\u7528\u6237\u540d\" password : \"new_password\" script : - assert status_code == 200 - assert content.success is True - assert content.data.name == \"\u66f4\u65b0\u540e\u7684\u7528\u6237\u540d\" - assert content.data.password == \"new_password\" # ==================== \u6b65\u9aa45\uff1a\u5220\u9664\u7528\u6237 ==================== - name : \u5220\u9664\u7528\u6237 request : url : $base_url/api/users/1001 method : DELETE headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token script : - assert status_code == 200 - assert content.success is True - assert content.data.name == \"\u66f4\u65b0\u540e\u7684\u7528\u6237\u540d\"","title":"3. \u521b\u5efa\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b"},{"location":"quickstart/#_9","text":"","title":"\ud83c\udfae \u7b2c\u56db\u6b65\uff1a\u8fd0\u884c\u6d4b\u8bd5"},{"location":"quickstart/#_10","text":"# \u8fd0\u884c\u5355\u4e2a\u6d4b\u8bd5\u6587\u4ef6 hrun testcases/test_user_management.yml # \u8fd0\u884c\u6574\u4e2a\u76ee\u5f55 hrun testcases/ # \u8be6\u7ec6\u6a21\u5f0f\uff08\u663e\u793a\u66f4\u591a\u65e5\u5fd7\uff09 hrun testcases/test_user_management.yml --log-level debug","title":"\u57fa\u7840\u8fd0\u884c"},{"location":"quickstart/#html","text":"# \u751f\u6210\u5b8c\u6574\u62a5\u544a hrun testcases/test_user_management.yml --html report.html # \u62a5\u544a\u4e2d\u8df3\u8fc7\u6210\u529f\u7528\u4f8b\uff08\u4ec5\u663e\u793a\u5931\u8d25\u548c\u9519\u8bef\uff09 hrun testcases/test_user_management.yml --html report.html --skip-success # \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u62a5\u544a open report.html # macOS # \u6216 xdg-open report.html # Linux # \u6216\u76f4\u63a5\u7528\u6d4f\u89c8\u5668\u6253\u5f00 report.html","title":"\u751f\u6210 HTML \u62a5\u544a"},{"location":"quickstart/#_11","text":"test_user_management.yml \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c \u2713 \u521b\u5efa\u65b0\u7528\u6237 \u2713 \u67e5\u8be2\u7528\u6237\u4fe1\u606f \u2713 \u66f4\u65b0\u7528\u6237\u4fe1\u606f \u2713 \u5220\u9664\u7528\u6237 \u2713 ---------------------------------------------------------------------- Ran 5 tests in 0.123s OK","title":"\u9884\u671f\u8f93\u51fa"},{"location":"quickstart/#apimeter_1","text":"","title":"\ud83c\udfaf \u7b2c\u4e94\u6b65\uff1a\u4f53\u9a8c ApiMeter \u6838\u5fc3\u7279\u6027"},{"location":"quickstart/#1script","text":"\u4f20\u7edf\u65b9\u5f0f vs ApiMeter \u65b9\u5f0f \uff1a # \u274c \u4f20\u7edf\u65b9\u5f0f\uff1avalidate\uff08\u529f\u80fd\u6709\u9650\uff09 validate : - eq : [ \"status_code\" , 200 ] - eq : [ \"content.success\" , true ] - len_eq : [ \"content.token\" , 16 ] # \u2705 ApiMeter \u65b9\u5f0f\uff1ascript\uff08\u529f\u80fd\u5f3a\u5927\uff09 script : # \u76f4\u63a5\u4f7f\u7528 Python assert \u8bed\u53e5 - assert status_code == 200 - assert content.success is True - assert len(content.token) == 16 # \u652f\u6301\u590d\u6742\u6761\u4ef6 - assert status_code in [200, 201, 202] # \u652f\u6301\u5faa\u73af - | for item in content.items: assert item.get(\"id\") is not None # \u652f\u6301\u6761\u4ef6\u5224\u65ad - | if content.user.vip_level > 0: assert content.user.vip_expires is not None","title":"\u7279\u6027 1\uff1ascript \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c"},{"location":"quickstart/#2_1","text":"\u5728 script \u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6240\u6709\u54cd\u5e94\u5b57\u6bb5\uff0c\u65e0\u9700\u7279\u6b8a\u8bed\u6cd5\uff1a script : # \u76f4\u63a5\u8bbf\u95ee\uff0c\u65e0\u9700 $ \u524d\u7f00 - assert status_code == 200 - assert headers[\"Content-Type\"] == \"application/json\" - assert content.user.id > 0 - assert cookies.session_id is not None - assert elapsed.total_seconds < 2.0 # \u652f\u6301\u94fe\u5f0f\u53d6\u503c\uff08\u6df1\u5c42\u8bbf\u95ee\uff09 - assert content.data.user.profile.age > 0 \u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\uff1a - status_code - HTTP \u72b6\u6001\u7801 - headers - \u54cd\u5e94\u5934 - cookies - Cookie \u4fe1\u606f - content / body / json - \u54cd\u5e94\u4f53 - elapsed - \u54cd\u5e94\u65f6\u95f4 - ok - \u8bf7\u6c42\u662f\u5426\u6210\u529f - reason - \u72b6\u6001\u8bf4\u660e - url - \u8bf7\u6c42 URL","title":"\u7279\u6027 2\uff1a\u5168\u5c40\u53d8\u91cf\u65e0\u7f1d\u8bbf\u95ee"},{"location":"quickstart/#3_1","text":"ApiMeter \u652f\u6301\u5411\u81ea\u5b9a\u4e49\u51fd\u6570\u4f20\u9012\u590d\u6742\u53c2\u6570\uff1a # 1\ufe0f\u20e3 \u7b80\u5355\u53c2\u6570 script : - ${validate_token(content.token)} # 2\ufe0f\u20e3 \u5217\u8868\u53c2\u6570 request : json : sign : ${get_sign_v2([$device_sn, $os_platform, $app_version])} # 3\ufe0f\u20e3 \u5b57\u5178\u53c2\u6570 request : json : sign : \"${get_sign_v3({device_sn: $device_sn, platform: $os_platform})}\" # 4\ufe0f\u20e3 \u590d\u6742\u5d4c\u5957\u5bf9\u8c61 script : - \"${check_nested_fields(content, {list_path: productList, check_fields: [id, name, price]})}\" \u5bf9\u5e94\u7684 debugtalk.py \u51fd\u6570\uff1a # 1\ufe0f\u20e3 \u7b80\u5355\u53c2\u6570 def validate_token ( token ): assert len ( token ) == 16 return True # 2\ufe0f\u20e3 \u5217\u8868\u53c2\u6570 def get_sign_v2 ( args_list ): content = \"\" . join ( args_list ) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) return hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () # 3\ufe0f\u20e3 \u5b57\u5178\u53c2\u6570 def get_sign_v3 ( args_dict ): content = \"\" . join ([ args_dict [ \"device_sn\" ], args_dict [ \"platform\" ]]) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) return hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () # 4\ufe0f\u20e3 \u590d\u6742\u5d4c\u5957\u5bf9\u8c61 def check_nested_fields ( data , config ): list_path = config [ \"list_path\" ] check_fields = config [ \"check_fields\" ] for item in data [ list_path ]: for field in check_fields : assert field in item return True","title":"\u7279\u6027 3\uff1a\u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u53c2\u6570"},{"location":"quickstart/#4","text":"\u5f53\u6570\u636e\u5b57\u6bb5\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u4f7f\u7528\u53cd\u659c\u6760\u8f6c\u4e49\uff1a script : # content \u662f\u5168\u5c40\u53d8\u91cf\uff08\u54cd\u5e94\u5185\u5bb9\uff09 # \\content \u662f\u5b57\u7b26\u4e32 \"content\"\uff08\u5b57\u6bb5\u540d\uff09 - ${check_field_exists(data, \\content)} def check_field_exists ( data , field_name ): \"\"\" \u68c0\u67e5\u6570\u636e\u4e2d\u662f\u5426\u5b58\u5728\u6307\u5b9a\u5b57\u6bb5 field_name \u63a5\u6536\u5230\u7684\u662f\u5b57\u7b26\u4e32 \"content\" \"\"\" return field_name in data","title":"\u7279\u6027 4\uff1a\u53d8\u91cf\u8f6c\u4e49"},{"location":"quickstart/#_12","text":"\u8fd0\u884c\u6d4b\u8bd5\u540e\u751f\u6210\u7684 HTML \u62a5\u544a\u5305\u542b\uff1a","title":"\ud83d\udcca \u7b2c\u516d\u6b65\uff1a\u67e5\u770b\u6d4b\u8bd5\u62a5\u544a"},{"location":"quickstart/#1_1","text":"\u2705 \u603b\u7528\u4f8b\u6570\u3001\u6210\u529f\u6570\u3001\u5931\u8d25\u6570 \u2705 \u6267\u884c\u65f6\u95f4\u7edf\u8ba1 \u2705 \u6210\u529f\u7387\u767e\u5206\u6bd4","title":"1. \u6d4b\u8bd5\u6982\u89c8"},{"location":"quickstart/#2-apimeter","text":"\u667a\u80fd\u6298\u53e0 \uff1a - \u8d85\u8fc7 15 \u884c\u7684\u5185\u5bb9\u81ea\u52a8\u6298\u53e0 - \u70b9\u51fb\u5c55\u5f00/\u6298\u53e0 - \u4e00\u952e\u590d\u5236\u6309\u94ae JSON \u6811\u5f62\u5c55\u793a \uff1a - \u81ea\u52a8\u8bc6\u522b JSON \u548c Python \u5b57\u5178 - \u5f69\u8272\u8bed\u6cd5\u9ad8\u4eae - \u8282\u70b9\u7ea7\u522b\u5c55\u5f00/\u6298\u53e0 - \u63d0\u5347\u5927\u6570\u636e\u91cf\u573a\u666f\u7684\u53ef\u8bfb\u6027 Script \u6821\u9a8c\u5c55\u793a \uff1a - \u6bcf\u6761\u811a\u672c\u7684\u6267\u884c\u7ed3\u679c - \u5931\u8d25\u811a\u672c\u7684\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f - \u6267\u884c\u8f93\u51fa\u548c\u8fd4\u56de\u503c","title":"2. \u8be6\u7ec6\u7ed3\u679c\uff08\ud83c\udd95 ApiMeter \u589e\u5f3a\u7279\u6027\uff09"},{"location":"quickstart/#_13","text":"","title":"\ud83c\udf93 \u8fdb\u9636\u5b66\u4e60"},{"location":"quickstart/#_14","text":"\u521b\u5efa\u6570\u636e\u6587\u4ef6 data/users.csv \uff1a user_id,user_name,password 1001,Alice,pass123 1002,Bob,pass456 1003,Charlie,pass789 \u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u4f7f\u7528\uff1a config : name : \"\u53c2\u6570\u5316\u7528\u6237\u521b\u5efa\u6d4b\u8bd5\" parameters : - user_id-user_name-password : ${P(data/users.csv)} teststeps : - name : \"\u521b\u5efa\u7528\u6237 - ${user_name}\" request : url : $base_url/api/users/$user_id method : POST json : name : $user_name password : $password script : - assert status_code == 201 - assert content.success is True","title":"\u53c2\u6570\u5316\u6d4b\u8bd5"},{"location":"quickstart/#_15","text":"\u5c06\u63a5\u53e3\u5b9a\u4e49\u548c\u6d4b\u8bd5\u903b\u8f91\u5206\u79bb\uff1a api/create_user.yml \uff08\u63a5\u53e3\u5b9a\u4e49\uff09\uff1a name : \u521b\u5efa\u7528\u6237\u63a5\u53e3 variables : user_id : 9999 user_name : \"default\" user_password : \"000000\" request : url : $base_url/api/users/$user_id method : POST headers : Content-Type : \"application/json\" device_sn : $device_sn token : $token json : name : $user_name password : $user_password validate : - eq : [ \"status_code\" , 201 ] testcases/test_create_user.yml \uff08\u6d4b\u8bd5\u7528\u4f8b\uff09\uff1a config : name : \"\u521b\u5efa\u7528\u6237\u6d4b\u8bd5\u573a\u666f\" variables : base_url : \"http://127.0.0.1:5000\" teststeps : - name : \u83b7\u53d6 token testcase : testcases/setup.yml extract : - token - name : \u521b\u5efa\u7528\u6237 Alice api : api/create_user.yml variables : user_id : 2001 user_name : \"Alice\" user_password : \"alice123\" script : - assert content.success is True - name : \u521b\u5efa\u7528\u6237 Bob api : api/create_user.yml variables : user_id : 2002 user_name : \"Bob\" user_password : \"bob456\" script : - assert content.success is True","title":"\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42"},{"location":"quickstart/#_16","text":"\u521b\u5efa .env \u6587\u4ef6\uff1a # \u5f00\u53d1\u73af\u5883 BASE_URL = http://127.0.0.1:5000 DEVICE_SN = DEV_DEVICE_001 # \u6d4b\u8bd5\u73af\u5883 # BASE_URL=https://test.example.com # DEVICE_SN=TEST_DEVICE_001 # \u751f\u4ea7\u73af\u5883 # BASE_URL=https://api.example.com # DEVICE_SN=PROD_DEVICE_001 \u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u4f7f\u7528\uff1a config : name : \"\u73af\u5883\u914d\u7f6e\u793a\u4f8b\" variables : base_url : ${ENV(BASE_URL)} device_sn : ${ENV(DEVICE_SN)}","title":"\u73af\u5883\u53d8\u91cf\u7ba1\u7406"},{"location":"quickstart/#_17","text":"","title":"\ud83d\udd25 \u5b9e\u6218\u7ec3\u4e60"},{"location":"quickstart/#1http","text":"\u4f7f\u7528\u516c\u5171\u6d4b\u8bd5\u63a5\u53e3 https://httpbin.org \u7ec3\u4e60\uff1a config : name : \"HTTPBin \u6d4b\u8bd5\u7ec3\u4e60\" base_url : \"https://httpbin.org\" teststeps : - name : GET \u8bf7\u6c42\u6d4b\u8bd5 request : url : /get method : GET params : name : \"ApiMeter\" version : \"2.12\" script : - assert status_code == 200 - assert json.args.name == \"ApiMeter\" - assert json.args.version == \"2.12\" - assert json.url.startswith(\"https://httpbin.org\") - name : POST \u8bf7\u6c42\u6d4b\u8bd5 request : url : /post method : POST json : username : \"test_user\" email : \"test@example.com\" script : - assert status_code == 200 - assert json.json.username == \"test_user\" - assert json.json.email == \"test@example.com\" - name : \u54cd\u5e94\u5934\u6d4b\u8bd5 request : url : /headers method : GET script : - assert status_code == 200 - assert \"User-Agent\" in json.headers - assert json.headers[\"Host\"] == \"httpbin.org\" - name : \u54cd\u5e94\u72b6\u6001\u7801\u6d4b\u8bd5 request : url : /status/404 method : GET script : - assert status_code == 404 - assert ok is False","title":"\u7ec3\u4e60 1\uff1aHTTP \u63a5\u53e3\u6d4b\u8bd5"},{"location":"quickstart/#2_2","text":"\u6a21\u62df\u5b8c\u6574\u7684 OAuth2 \u8ba4\u8bc1\u6d41\u7a0b\uff1a config : name : \"OAuth2 \u8ba4\u8bc1\u6d41\u7a0b\" variables : client_id : \"test_client\" client_secret : \"test_secret\" teststeps : - name : \u83b7\u53d6\u6388\u6743\u7801 request : url : https://oauth.example.com/authorize method : POST json : client_id : $client_id response_type : \"code\" extract : - auth_code : content.code script : - assert status_code == 200 - assert content.code is not None - name : \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c request : url : https://oauth.example.com/token method : POST json : client_id : $client_id client_secret : $client_secret code : $auth_code grant_type : \"authorization_code\" extract : - access_token : content.access_token - refresh_token : content.refresh_token script : - assert status_code == 200 - assert content.access_token is not None - assert content.token_type == \"Bearer\" - assert content.expires_in > 0 - name : \u4f7f\u7528\u8bbf\u95ee\u4ee4\u724c\u8bf7\u6c42 API request : url : https://api.example.com/user/profile method : GET headers : Authorization : \"Bearer $access_token\" script : - assert status_code == 200 - assert content.user_id is not None","title":"\u7ec3\u4e60 2\uff1a\u8ba4\u8bc1\u6d41\u7a0b\u6d4b\u8bd5"},{"location":"quickstart/#_18","text":"\u606d\u559c\u4f60\uff01\u4f60\u5df2\u7ecf\u638c\u63e1\u4e86 ApiMeter \u7684\u6838\u5fc3\u529f\u80fd\u3002\u63a5\u4e0b\u6765\u53ef\u4ee5\uff1a","title":"\ud83d\udcda \u4e0b\u4e00\u6b65\u5b66\u4e60"},{"location":"quickstart/#_19","text":"\ud83d\udcd6 \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u8be6\u89e3 - \u638c\u63e1 script \u7684\u6240\u6709\u7528\u6cd5 \ud83d\udcd6 \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 - \u5b66\u4e60\u590d\u6742\u53c2\u6570\u4f20\u9012 \ud83d\udcd6 \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 - \u4e86\u89e3\u6240\u6709\u53ef\u7528\u53d8\u91cf \ud83d\udcd6 \u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a - \u4e86\u89e3\u62a5\u544a\u4f18\u5316\u7279\u6027","title":"\u6df1\u5165\u5b66\u4e60"},{"location":"quickstart/#_20","text":"\ud83c\udfaf \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b - \u771f\u5b9e\u573a\u666f\u6848\u4f8b \ud83c\udfaf \u5b8c\u6574\u9879\u76ee\u793a\u4f8b - \u4f01\u4e1a\u7ea7\u9879\u76ee\u7ed3\u6784","title":"\u5b9e\u6218\u6848\u4f8b"},{"location":"quickstart/#_21","text":"\ud83d\ude80 \u6027\u80fd\u6d4b\u8bd5 - \u4f7f\u7528 Locust \u8fdb\u884c\u538b\u6d4b \ud83d\ude80 \u6301\u7eed\u96c6\u6210 - \u96c6\u6210\u5230 CI/CD \u6d41\u7a0b \ud83d\ude80 \u7528\u4f8b\u5206\u5c42 - \u4f18\u5316\u7528\u4f8b\u7ec4\u7ec7\u7ed3\u6784","title":"\u8fdb\u9636\u4e3b\u9898"},{"location":"quickstart/#_22","text":"","title":"\u2753 \u5e38\u89c1\u95ee\u9898"},{"location":"quickstart/#1-script-validate","text":"\u56de\u7b54 \uff1a \u2705 script \u4f18\u52bf \uff1a \u4f7f\u7528\u6807\u51c6 Python \u8bed\u6cd5\uff0c\u96f6\u5b66\u4e60\u6210\u672c \u652f\u6301\u4efb\u610f\u590d\u6742\u903b\u8f91\uff08\u6761\u4ef6\u3001\u5faa\u73af\u3001\u51fd\u6570\uff09 \u9010\u6761\u6267\u884c\uff0c\u5355\u6761\u5931\u8d25\u4e0d\u5f71\u54cd\u5176\u4ed6\u6821\u9a8c \u9519\u8bef\u4fe1\u606f\u66f4\u6e05\u6670 \u26a0\ufe0f validate \u5c40\u9650 \uff1a \u9700\u8981\u8bb0\u5fc6\u7279\u5b9a\u8bed\u6cd5 \u590d\u6742\u903b\u8f91\u96be\u4ee5\u5b9e\u73b0 \u529f\u80fd\u76f8\u5bf9\u56fa\u5b9a \u5efa\u8bae \uff1a\u65b0\u9879\u76ee\u4f18\u5148\u4f7f\u7528 script \uff0c\u4e24\u8005\u53ef\u4ee5\u5171\u5b58\u3002","title":"1. \u4e3a\u4ec0\u4e48\u63a8\u8350\u4f7f\u7528 script \u800c\u4e0d\u662f validate\uff1f"},{"location":"quickstart/#2-script","text":"\u56de\u7b54 \uff1a script : # \u274c \u9519\u8bef\uff1a\u4e0d\u9700\u8981 $ \u524d\u7f00 - assert $status_code == 200 # \u2705 \u6b63\u786e\uff1a\u5168\u5c40\u53d8\u91cf\u76f4\u63a5\u4f7f\u7528 - assert status_code == 200 - assert content.token is not None # \u2705 \u6b63\u786e\uff1a\u81ea\u5b9a\u4e49\u53d8\u91cf\u9700\u8981\u5f15\u53f7\u548c $ - assert \"$token\" is not None - assert len(\"$token\") == 16 # \u2705 \u6b63\u786e\uff1a\u5728\u51fd\u6570\u4e2d\u5f15\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf - ${validate_token($token)}","title":"2. script \u4e2d\u7684\u53d8\u91cf\u9700\u8981\u52a0 $ \u524d\u7f00\u5417\uff1f"},{"location":"quickstart/#3_2","text":"\u65b9\u6cd5 1 \uff1a\u67e5\u770b\u8be6\u7ec6\u65e5\u5fd7 hrun testcases/test.yml --log-level debug \u65b9\u6cd5 2 \uff1a\u5728 debugtalk.py \u4e2d\u6dfb\u52a0\u65e5\u5fd7 from apimeter.logger import log_debug , log_info def my_function ( data ): log_debug ( f \"\u63a5\u6536\u5230\u7684\u6570\u636e: { data } \" ) # \u4f60\u7684\u903b\u8f91 result = process ( data ) log_info ( f \"\u5904\u7406\u7ed3\u679c: { result } \" ) return result \u65b9\u6cd5 3 \uff1a\u67e5\u770b HTML \u62a5\u544a \u62a5\u544a\u4e2d\u5305\u542b\u6bcf\u4e2a\u6b65\u9aa4\u7684\u5b8c\u6574\u8bf7\u6c42\u548c\u54cd\u5e94\u4fe1\u606f\uff0c\u4ee5\u53ca script \u6267\u884c\u8be6\u60c5\u3002","title":"3. \u5982\u4f55\u8c03\u8bd5\u5931\u8d25\u7684\u6d4b\u8bd5\uff1f"},{"location":"quickstart/#4_1","text":"\u63a8\u8350\u7ed3\u6784 \uff1a my_project/ \u251c\u2500\u2500 api/ # \u63a5\u53e3\u5b9a\u4e49\u5c42 \u2502 \u251c\u2500\u2500 auth/ \u2502 \u2502 \u251c\u2500\u2500 login.yml \u2502 \u2502 \u2514\u2500\u2500 logout.yml \u2502 \u2514\u2500\u2500 user/ \u2502 \u251c\u2500\u2500 create.yml \u2502 \u251c\u2500\u2500 update.yml \u2502 \u2514\u2500\u2500 delete.yml \u251c\u2500\u2500 testcases/ # \u6d4b\u8bd5\u7528\u4f8b\u5c42 \u2502 \u251c\u2500\u2500 test_auth.yml \u2502 \u2514\u2500\u2500 test_user_crud.yml \u251c\u2500\u2500 testsuites/ # \u6d4b\u8bd5\u5957\u4ef6\u5c42 \u2502 \u2514\u2500\u2500 full_regression.yml \u251c\u2500\u2500 data/ # \u6d4b\u8bd5\u6570\u636e \u2502 \u251c\u2500\u2500 users.csv \u2502 \u2514\u2500\u2500 products.csv \u251c\u2500\u2500 debugtalk.py # \u81ea\u5b9a\u4e49\u51fd\u6570 \u251c\u2500\u2500 .env # \u73af\u5883\u914d\u7f6e \u2514\u2500\u2500 reports/ # \u6d4b\u8bd5\u62a5\u544a","title":"4. \u5982\u4f55\u7ec4\u7ec7\u5927\u578b\u6d4b\u8bd5\u9879\u76ee\uff1f"},{"location":"quickstart/#_23","text":"\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\uff1a \u2705 \u5b89\u88c5\u548c\u8fd0\u884c ApiMeter \u2705 \u7f16\u5199\u57fa\u672c\u6d4b\u8bd5\u7528\u4f8b\uff08request + validate + script\uff09 \u2705 \u4f7f\u7528 script \u8fdb\u884c\u5f3a\u5927\u7684\u81ea\u5b9a\u4e49\u6821\u9a8c \u2705 \u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u548c\u94fe\u5f0f\u53d6\u503c \u2705 \u7f16\u5199\u548c\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 \u2705 \u751f\u6210\u548c\u67e5\u770b HTML \u62a5\u544a \u2705 \u53c2\u6570\u5316\u6d4b\u8bd5\u548c\u7528\u4f8b\u5206\u5c42 ApiMeter \u7684\u6838\u5fc3\u4f18\u52bf \uff1a \u7279\u6027 \u4f20\u7edf\u5de5\u5177 ApiMeter \u6821\u9a8c\u80fd\u529b \u56fa\u5b9a\u8bed\u6cd5 Python \u811a\u672c\uff0c\u65e0\u9650\u53ef\u80fd \u5b66\u4e60\u6210\u672c \u9700\u8bb0\u5fc6\u7279\u5b9a\u8bed\u6cd5 \u6807\u51c6 Python\uff0c\u96f6\u5b66\u4e60\u6210\u672c \u590d\u6742\u903b\u8f91 \u6709\u9650\u652f\u6301 \u5b8c\u5168\u652f\u6301\uff08\u6761\u4ef6\u3001\u5faa\u73af\u3001\u51fd\u6570\uff09 \u9519\u8bef\u5904\u7406 \u5355\u70b9\u5931\u8d25 \u9010\u6761\u6267\u884c\uff0c\u5bb9\u9519\u5904\u7406 \u6d4b\u8bd5\u62a5\u544a \u57fa\u7840\u5c55\u793a \u667a\u80fd\u6298\u53e0\u3001\u6811\u5f62\u5c55\u793a \u73b0\u5728\uff0c\u5f00\u59cb\u4f60\u7684 API \u81ea\u52a8\u5316\u6d4b\u8bd5\u4e4b\u65c5\u5427\uff01\ud83d\ude80 \u9700\u8981\u5e2e\u52a9\uff1f - \ud83d\udcd6 \u5b8c\u6574\u6587\u6863 - \ud83d\udc1b \u95ee\u9898\u53cd\u9988 - \ud83d\udcac \u6280\u672f\u4ea4\u6d41\u7fa4","title":"\ud83c\udf89 \u603b\u7ed3"},{"location":"related-docs/","text":"\u76f8\u5173\u8d44\u6599 \u00b6 \u5f00\u53d1\u7b14\u8bb0 \u00b6 DebugTalk \u6f14\u8bb2 \u00b6 MTSC 2018 : \u300a\u5927\u7586\u4e92\u8054\u7f51\u7684\u4e00\u7ad9\u5f0f\u81ea\u52a8\u5316\u6d4b\u8bd5\u89e3\u51b3\u65b9\u6848\uff08\u57fa\u4e8eHttpRunner\uff09\u300b PyCon China 2018 : \u300a\u501f\u52a9 Python \u5f00\u6e90\u751f\u6001\u6253\u9020\u4f01\u4e1a\u7ea7\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\uff08HttpRunner\uff09\u300b MTSC 2019 : \u300aHttpRunner 2.0 \u6280\u672f\u67b6\u6784\u4e0e\u63a5\u53e3\u6d4b\u8bd5\u5e94\u7528\u300b","title":"\u76f8\u5173\u8d44\u6599"},{"location":"related-docs/#_1","text":"","title":"\u76f8\u5173\u8d44\u6599"},{"location":"related-docs/#_2","text":"DebugTalk","title":"\u5f00\u53d1\u7b14\u8bb0"},{"location":"related-docs/#_3","text":"MTSC 2018 : \u300a\u5927\u7586\u4e92\u8054\u7f51\u7684\u4e00\u7ad9\u5f0f\u81ea\u52a8\u5316\u6d4b\u8bd5\u89e3\u51b3\u65b9\u6848\uff08\u57fa\u4e8eHttpRunner\uff09\u300b PyCon China 2018 : \u300a\u501f\u52a9 Python \u5f00\u6e90\u751f\u6001\u6253\u9020\u4f01\u4e1a\u7ea7\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\uff08HttpRunner\uff09\u300b MTSC 2019 : \u300aHttpRunner 2.0 \u6280\u672f\u67b6\u6784\u4e0e\u63a5\u53e3\u6d4b\u8bd5\u5e94\u7528\u300b","title":"\u6f14\u8bb2"},{"location":"sponsors/","text":"\u8d5e\u52a9\u5546 \u00b6 \u611f\u8c22\u5404\u4f4d\u5bf9 HttpRunner \u7684\u8d5e\u52a9\u652f\u6301\uff01 \u91d1\u724c\u8d5e\u52a9\u5546\uff08Gold Sponsor\uff09 \u00b6 \u970d\u683c\u6c83\u5179\u6d4b\u8bd5\u5b66\u9662 \u662f\u7531\u6d4b\u5427\uff08\u5317\u4eac\uff09\u79d1\u6280\u6709\u9650\u516c\u53f8\u4e0e\u77e5\u540d\u8f6f\u4ef6\u6d4b\u8bd5\u793e\u533a TesterHome \u5408\u4f5c\u7684\u9ad8\u7aef\u6559\u80b2\u54c1\u724c\u3002\u7531 BAT \u4e00\u7ebf \u6d4b\u8bd5\u5927\u5496\u6267\u6559 \uff0c\u63d0\u4f9b \u5b9e\u6218\u9a71\u52a8 \u7684\u63a5\u53e3\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u79fb\u52a8\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u6301\u7eed\u96c6\u6210\u4e0e DevOps \u7b49\u6280\u672f\u57f9\u8bad\uff0c\u4ee5\u53ca\u6d4b\u8bd5\u5f00\u53d1\u4f18\u79c0\u4eba\u624d\u5185\u63a8\u670d\u52a1\u3002 \u70b9\u51fb\u5b66\u4e60! \u970d\u683c\u6c83\u5179\u6d4b\u8bd5\u5b66\u9662\u662f HttpRunner \u7684\u9996\u5bb6\u91d1\u724c\u8d5e\u52a9\u5546\u3002 \u5f00\u6e90\u670d\u52a1\u8d5e\u52a9\u5546\uff08Open Source Sponsor\uff09 \u00b6 HttpRunner is in Sentry Sponsored plan. \u6210\u4e3a\u8d5e\u52a9\u5546 \u00b6 \u5982\u679c\u4f60\u6240\u5728\u7684\u516c\u53f8\u6216\u4e2a\u4eba\u4e5f\u60f3\u5bf9 HttpRunner \u8fdb\u884c\u8d5e\u52a9\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u6848\uff0c\u5177\u4f53\u53ef\u8054\u7cfb \u9879\u76ee\u4f5c\u8005 \u3002 \u7b49\u7ea7 \u91d1\u724c\u8d5e\u52a9\u5546 \uff08Gold Sponsor\uff09 \u94f6\u724c\u8d5e\u52a9\u5546 \uff08Silver Sponsor\uff09 \u4e2a\u4eba\u8d5e\u8d4f \u91d1\u989d \uffe510000/\u5e74 \uffe55000/\u5e74 \u4efb\u610f \u6743\u76ca \u516c\u53f8 logo\uff08\u5927\uff09\u548c\u94fe\u63a5\u5c55\u793a\u5728 README.md 150 \u5b57\u7684\u5ba3\u4f20\u6587\u6848 \u516c\u53f8 logo\uff08\u4e2d\uff09\u548c\u94fe\u63a5\u5c55\u793a\u5728 README.md 50 \u5b57\u7684\u5ba3\u4f20\u6587\u6848 \u4e2a\u4eba ID \u548c\u94fe\u63a5\u5c55\u793a\u5728 sponsors.md","title":"\u8d5e\u52a9\u5546"},{"location":"sponsors/#_1","text":"\u611f\u8c22\u5404\u4f4d\u5bf9 HttpRunner \u7684\u8d5e\u52a9\u652f\u6301\uff01","title":"\u8d5e\u52a9\u5546"},{"location":"sponsors/#gold-sponsor","text":"\u970d\u683c\u6c83\u5179\u6d4b\u8bd5\u5b66\u9662 \u662f\u7531\u6d4b\u5427\uff08\u5317\u4eac\uff09\u79d1\u6280\u6709\u9650\u516c\u53f8\u4e0e\u77e5\u540d\u8f6f\u4ef6\u6d4b\u8bd5\u793e\u533a TesterHome \u5408\u4f5c\u7684\u9ad8\u7aef\u6559\u80b2\u54c1\u724c\u3002\u7531 BAT \u4e00\u7ebf \u6d4b\u8bd5\u5927\u5496\u6267\u6559 \uff0c\u63d0\u4f9b \u5b9e\u6218\u9a71\u52a8 \u7684\u63a5\u53e3\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u79fb\u52a8\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u6301\u7eed\u96c6\u6210\u4e0e DevOps \u7b49\u6280\u672f\u57f9\u8bad\uff0c\u4ee5\u53ca\u6d4b\u8bd5\u5f00\u53d1\u4f18\u79c0\u4eba\u624d\u5185\u63a8\u670d\u52a1\u3002 \u70b9\u51fb\u5b66\u4e60! \u970d\u683c\u6c83\u5179\u6d4b\u8bd5\u5b66\u9662\u662f HttpRunner \u7684\u9996\u5bb6\u91d1\u724c\u8d5e\u52a9\u5546\u3002","title":"\u91d1\u724c\u8d5e\u52a9\u5546\uff08Gold Sponsor\uff09"},{"location":"sponsors/#open-source-sponsor","text":"HttpRunner is in Sentry Sponsored plan.","title":"\u5f00\u6e90\u670d\u52a1\u8d5e\u52a9\u5546\uff08Open Source Sponsor\uff09"},{"location":"sponsors/#_2","text":"\u5982\u679c\u4f60\u6240\u5728\u7684\u516c\u53f8\u6216\u4e2a\u4eba\u4e5f\u60f3\u5bf9 HttpRunner \u8fdb\u884c\u8d5e\u52a9\uff0c\u53ef\u53c2\u8003\u5982\u4e0b\u65b9\u6848\uff0c\u5177\u4f53\u53ef\u8054\u7cfb \u9879\u76ee\u4f5c\u8005 \u3002 \u7b49\u7ea7 \u91d1\u724c\u8d5e\u52a9\u5546 \uff08Gold Sponsor\uff09 \u94f6\u724c\u8d5e\u52a9\u5546 \uff08Silver Sponsor\uff09 \u4e2a\u4eba\u8d5e\u8d4f \u91d1\u989d \uffe510000/\u5e74 \uffe55000/\u5e74 \u4efb\u610f \u6743\u76ca \u516c\u53f8 logo\uff08\u5927\uff09\u548c\u94fe\u63a5\u5c55\u793a\u5728 README.md 150 \u5b57\u7684\u5ba3\u4f20\u6587\u6848 \u516c\u53f8 logo\uff08\u4e2d\uff09\u548c\u94fe\u63a5\u5c55\u793a\u5728 README.md 50 \u5b57\u7684\u5ba3\u4f20\u6587\u6848 \u4e2a\u4eba ID \u548c\u94fe\u63a5\u5c55\u793a\u5728 sponsors.md","title":"\u6210\u4e3a\u8d5e\u52a9\u5546"},{"location":"concept/nominal/","text":"\u540d\u8bcd\u89e3\u91ca \u00b6 \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09 \u00b6 \u4ece 2.0 \u7248\u672c\u5f00\u59cb\uff0cHttpRunner \u5f00\u59cb\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u7684\u5b9a\u4e49\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u660e\u786e\uff0c\u53c2\u8003 wiki \u4e0a\u7684\u63cf\u8ff0\u3002 A test case is a specification of the inputs, execution conditions, testing procedure, and expected results that define a single test to be executed to achieve a particular software testing objective, such as to exercise a particular program path or to verify compliance with a specific requirement. \u6982\u62ec\u4e0b\u6765\uff0c\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5e94\u8be5\u662f\u4e3a\u4e86\u6d4b\u8bd5\u67d0\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\u903b\u8f91\u800c\u7cbe\u5fc3\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u81f3\u5c11\u5305\u542b\u5982\u4e0b\u51e0\u70b9\uff1a \u660e\u786e\u7684\u6d4b\u8bd5\u76ee\u7684\uff08achieve a particular software testing objective\uff09 \u660e\u786e\u7684\u8f93\u5165\uff08inputs\uff09 \u660e\u786e\u7684\u8fd0\u884c\u73af\u5883\uff08execution conditions\uff09 \u660e\u786e\u7684\u6d4b\u8bd5\u6b65\u9aa4\u63cf\u8ff0\uff08testing procedure\uff09 \u660e\u786e\u7684\u9884\u671f\u7ed3\u679c\uff08expected results\uff09 \u5bf9\u5e94\u5730\uff0cHttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u63cf\u8ff0\u65b9\u5f0f\u8fdb\u884c\u5982\u4e0b\u8bbe\u8ba1\uff1a \u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u5b8c\u6574\u4e14\u72ec\u7acb\u7684\uff0c\u6bcf\u6761\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684\uff1b\u5728 HttpRunner \u4e2d\uff0c\u6bcf\u4e2a YAML/JSON \u6587\u4ef6\u5bf9\u5e94\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\u3002 \u6d4b\u8bd5\u7528\u4f8b\u5305\u542b \u6d4b\u8bd5\u811a\u672c \u548c \u6d4b\u8bd5\u6570\u636e \u4e24\u90e8\u5206\uff1a \u6d4b\u8bd5\u7528\u4f8b = \u6d4b\u8bd5\u811a\u672c + \u6d4b\u8bd5\u6570\u636e \u6d4b\u8bd5\u811a\u672c \u91cd\u70b9\u662f\u63cf\u8ff0\u6d4b\u8bd5\u7684 \u4e1a\u52a1\u529f\u80fd\u903b\u8f91 \uff0c\u5305\u62ec\u9884\u7f6e\u6761\u4ef6\u3001\u6d4b\u8bd5\u6b65\u9aa4\u3001\u9884\u671f\u7ed3\u679c\u7b49\uff0c\u5e76\u4e14\u53ef\u4ee5\u7ed3\u5408\u8f85\u52a9\u51fd\u6570\uff08debugtalk.py\uff09\u5b9e\u73b0\u590d\u6742\u7684\u8fd0\u7b97\u903b\u8f91\uff1b\u53ef\u4ee5\u5c06 \u6d4b\u8bd5\u811a\u672c \u7406\u89e3\u4e3a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684 \u7c7b\uff08class\uff09 \uff1b \u6d4b\u8bd5\u6570\u636e \u91cd\u70b9\u662f\u5bf9\u5e94\u6d4b\u8bd5\u7684 \u4e1a\u52a1\u6570\u636e\u903b\u8f91 \uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7c7b\u7684\u5b9e\u4f8b\u5316\u6570\u636e\uff1b \u6d4b\u8bd5\u6570\u636e \u548c \u6d4b\u8bd5\u811a\u672c \u5206\u79bb\u540e\uff0c\u5c31\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5\uff0c\u901a\u8fc7\u5bf9\u6d4b\u8bd5\u811a\u672c\u4f20\u5165\u4e00\u7ec4\u6570\u636e\uff0c\u5b9e\u73b0\u540c\u4e00\u4e1a\u52a1\u529f\u80fd\u5728\u4e0d\u540c\u6570\u636e\u903b\u8f91\u4e0b\u7684\u6d4b\u8bd5\u9a8c\u8bc1\u3002 \u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09 \u00b6 \u6d4b\u8bd5\u7528\u4f8b\u662f\u6d4b\u8bd5\u6b65\u9aa4\u7684 \u6709\u5e8f \u96c6\u5408\uff0c\u800c\u5bf9\u4e8e\u63a5\u53e3\u6d4b\u8bd5\u6765\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5e94\u8be5\u5c31\u5bf9\u5e94\u4e00\u4e2a API \u7684\u8bf7\u6c42\u63cf\u8ff0\u3002 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09 \u00b6 \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u662f \u6d4b\u8bd5\u7528\u4f8b \u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\u3002 \u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u600e\u4e48\u529e\uff0c\u4f8b\u5982\u767b\u5f55\u529f\u80fd\u548c\u4e0b\u5355\u529f\u80fd\u3002\u6b63\u786e\u7684\u505a\u6cd5\u5e94\u8be5\u662f\uff0c\u5728\u4e0b\u5355\u6d4b\u8bd5\u7528\u4f8b\u7684\u524d\u7f6e\u6b65\u9aa4\u4e2d\u6267\u884c\u767b\u5f55\u64cd\u4f5c\u3002 - config : name : order product - test : name : login testcase : testcases/login.yml - test : name : add to cart api : api/add_cart.yml - test : name : make order api : api/make_order.yml \u6d4b\u8bd5\u573a\u666f \u00b6 \u6d4b\u8bd5\u573a\u666f \u548c \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u662f\u540c\u4e00\u6982\u5ff5\uff0c\u90fd\u662f \u6d4b\u8bd5\u7528\u4f8b \u7684 \u65e0\u5e8f \u96c6\u5408\u3002 \u63a5\u53e3 \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u53c2\u6570 \u53d8\u91cf \u6d4b\u8bd5\u811a\u672c\uff08YAML/JSON\uff09 debugtalk.py \u73af\u5883\u53d8\u91cf \u9879\u76ee\u6839\u76ee\u5f55 \u00b6","title":"\u540d\u8bcd\u89e3\u91ca"},{"location":"concept/nominal/#_1","text":"","title":"\u540d\u8bcd\u89e3\u91ca"},{"location":"concept/nominal/#testcase","text":"\u4ece 2.0 \u7248\u672c\u5f00\u59cb\uff0cHttpRunner \u5f00\u59cb\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u7684\u5b9a\u4e49\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u660e\u786e\uff0c\u53c2\u8003 wiki \u4e0a\u7684\u63cf\u8ff0\u3002 A test case is a specification of the inputs, execution conditions, testing procedure, and expected results that define a single test to be executed to achieve a particular software testing objective, such as to exercise a particular program path or to verify compliance with a specific requirement. \u6982\u62ec\u4e0b\u6765\uff0c\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5e94\u8be5\u662f\u4e3a\u4e86\u6d4b\u8bd5\u67d0\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\u903b\u8f91\u800c\u7cbe\u5fc3\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u81f3\u5c11\u5305\u542b\u5982\u4e0b\u51e0\u70b9\uff1a \u660e\u786e\u7684\u6d4b\u8bd5\u76ee\u7684\uff08achieve a particular software testing objective\uff09 \u660e\u786e\u7684\u8f93\u5165\uff08inputs\uff09 \u660e\u786e\u7684\u8fd0\u884c\u73af\u5883\uff08execution conditions\uff09 \u660e\u786e\u7684\u6d4b\u8bd5\u6b65\u9aa4\u63cf\u8ff0\uff08testing procedure\uff09 \u660e\u786e\u7684\u9884\u671f\u7ed3\u679c\uff08expected results\uff09 \u5bf9\u5e94\u5730\uff0cHttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u63cf\u8ff0\u65b9\u5f0f\u8fdb\u884c\u5982\u4e0b\u8bbe\u8ba1\uff1a \u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u5b8c\u6574\u4e14\u72ec\u7acb\u7684\uff0c\u6bcf\u6761\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684\uff1b\u5728 HttpRunner \u4e2d\uff0c\u6bcf\u4e2a YAML/JSON \u6587\u4ef6\u5bf9\u5e94\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\u3002 \u6d4b\u8bd5\u7528\u4f8b\u5305\u542b \u6d4b\u8bd5\u811a\u672c \u548c \u6d4b\u8bd5\u6570\u636e \u4e24\u90e8\u5206\uff1a \u6d4b\u8bd5\u7528\u4f8b = \u6d4b\u8bd5\u811a\u672c + \u6d4b\u8bd5\u6570\u636e \u6d4b\u8bd5\u811a\u672c \u91cd\u70b9\u662f\u63cf\u8ff0\u6d4b\u8bd5\u7684 \u4e1a\u52a1\u529f\u80fd\u903b\u8f91 \uff0c\u5305\u62ec\u9884\u7f6e\u6761\u4ef6\u3001\u6d4b\u8bd5\u6b65\u9aa4\u3001\u9884\u671f\u7ed3\u679c\u7b49\uff0c\u5e76\u4e14\u53ef\u4ee5\u7ed3\u5408\u8f85\u52a9\u51fd\u6570\uff08debugtalk.py\uff09\u5b9e\u73b0\u590d\u6742\u7684\u8fd0\u7b97\u903b\u8f91\uff1b\u53ef\u4ee5\u5c06 \u6d4b\u8bd5\u811a\u672c \u7406\u89e3\u4e3a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684 \u7c7b\uff08class\uff09 \uff1b \u6d4b\u8bd5\u6570\u636e \u91cd\u70b9\u662f\u5bf9\u5e94\u6d4b\u8bd5\u7684 \u4e1a\u52a1\u6570\u636e\u903b\u8f91 \uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7c7b\u7684\u5b9e\u4f8b\u5316\u6570\u636e\uff1b \u6d4b\u8bd5\u6570\u636e \u548c \u6d4b\u8bd5\u811a\u672c \u5206\u79bb\u540e\uff0c\u5c31\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5\uff0c\u901a\u8fc7\u5bf9\u6d4b\u8bd5\u811a\u672c\u4f20\u5165\u4e00\u7ec4\u6570\u636e\uff0c\u5b9e\u73b0\u540c\u4e00\u4e1a\u52a1\u529f\u80fd\u5728\u4e0d\u540c\u6570\u636e\u903b\u8f91\u4e0b\u7684\u6d4b\u8bd5\u9a8c\u8bc1\u3002","title":"\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09"},{"location":"concept/nominal/#teststep","text":"\u6d4b\u8bd5\u7528\u4f8b\u662f\u6d4b\u8bd5\u6b65\u9aa4\u7684 \u6709\u5e8f \u96c6\u5408\uff0c\u800c\u5bf9\u4e8e\u63a5\u53e3\u6d4b\u8bd5\u6765\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5e94\u8be5\u5c31\u5bf9\u5e94\u4e00\u4e2a API \u7684\u8bf7\u6c42\u63cf\u8ff0\u3002","title":"\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09"},{"location":"concept/nominal/#testsuite","text":"\u6d4b\u8bd5\u7528\u4f8b\u96c6 \u662f \u6d4b\u8bd5\u7528\u4f8b \u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\u3002 \u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u600e\u4e48\u529e\uff0c\u4f8b\u5982\u767b\u5f55\u529f\u80fd\u548c\u4e0b\u5355\u529f\u80fd\u3002\u6b63\u786e\u7684\u505a\u6cd5\u5e94\u8be5\u662f\uff0c\u5728\u4e0b\u5355\u6d4b\u8bd5\u7528\u4f8b\u7684\u524d\u7f6e\u6b65\u9aa4\u4e2d\u6267\u884c\u767b\u5f55\u64cd\u4f5c\u3002 - config : name : order product - test : name : login testcase : testcases/login.yml - test : name : add to cart api : api/add_cart.yml - test : name : make order api : api/make_order.yml","title":"\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09"},{"location":"concept/nominal/#_2","text":"\u6d4b\u8bd5\u573a\u666f \u548c \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u662f\u540c\u4e00\u6982\u5ff5\uff0c\u90fd\u662f \u6d4b\u8bd5\u7528\u4f8b \u7684 \u65e0\u5e8f \u96c6\u5408\u3002 \u63a5\u53e3 \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u53c2\u6570 \u53d8\u91cf \u6d4b\u8bd5\u811a\u672c\uff08YAML/JSON\uff09 debugtalk.py \u73af\u5883\u53d8\u91cf","title":"\u6d4b\u8bd5\u573a\u666f"},{"location":"concept/nominal/#_3","text":"","title":"\u9879\u76ee\u6839\u76ee\u5f55"},{"location":"development/architecture/","text":"\u4ee3\u7801\u6846\u67b6 \u00b6","title":"\u4ee3\u7801\u6846\u67b6"},{"location":"development/architecture/#_1","text":"","title":"\u4ee3\u7801\u6846\u67b6"},{"location":"development/dev-api/","text":"\u5f00\u53d1\u6269\u5c55 \u00b6 HttpRunner \u9664\u4e86\u4f5c\u4e3a\u547d\u4ee4\u884c\u5de5\u5177\u4f7f\u7528\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u8f6f\u4ef6\u5305\u96c6\u6210\u5230\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u3002 \u7b80\u5355\u6765\u8bf4\uff0cHttpRunner \u63d0\u4f9b\u4e86\u8fd0\u884c YAML/JSON \u683c\u5f0f\u6d4b\u8bd5\u7528\u4f8b\u7684\u80fd\u529b\uff0c\u5e76\u80fd\u8fd4\u56de\u8be6\u7ec6\u7684\u6d4b\u8bd5\u7ed3\u679c\u4fe1\u606f\u3002 HttpRunner class \u00b6 TL;DR \u00b6 HttpRunner \u4ee5 \u7c7b\uff08class\uff09 \u7684\u5f62\u5f0f\u5bf9\u5916\u63d0\u4f9b\u8c03\u7528\u652f\u6301\uff0c\u7c7b\u540d\u4e3a HttpRunner \u3002\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a from httprunner.api import HttpRunner runner = HttpRunner ( failfast = True , save_tests = True , log_level = \"INFO\" , log_file = \"test.log\" ) summary = runner . run ( path_or_tests ) \u521d\u59cb\u5316\u53c2\u6570\u8bf4\u660e \u00b6 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u521d\u59cb\u5316 HttpRunner \u65f6\u7684\u53c2\u6570\u6709\u5982\u4e0b\u51e0\u4e2a\uff1a failfast \uff08\u53ef\u9009\uff09: \u8bbe\u7f6e\u4e3a True \u65f6\uff0c\u6d4b\u8bd5\u5728\u9996\u6b21\u9047\u5230\u9519\u8bef\u6216\u5931\u8d25\u65f6\u4f1a\u505c\u6b62\u8fd0\u884c\uff1b\u9ed8\u8ba4\u503c\u4e3a False save_tests \uff08\u53ef\u9009\uff09: \u8bbe\u7f6e\u4e3a True \u65f6\uff0c\u4f1a\u5c06\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\uff08loaded/parsed/summary\uff09\u4fdd\u5b58\u4e3a JSON \u6587\u4ef6\uff0c\u5b58\u50a8\u4e8e logs \u76ee\u5f55\u4e0b\uff1b\u9ed8\u8ba4\u4e3a False log_level \uff08\u53ef\u9009\uff09: \u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\uff0c\u9ed8\u8ba4\u4e3a \"INFO\" log_file \uff08\u53ef\u9009\uff09: \u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84\uff0c\u6307\u5b9a\u540e\u5c06\u540c\u65f6\u8f93\u51fa\u65e5\u5fd7\u6587\u4ef6\uff1b\u9ed8\u8ba4\u4e0d\u8f93\u51fa\u65e5\u5fd7\u6587\u4ef6 \u8c03\u7528\u65b9\u6cd5\u8bf4\u660e \u00b6 \u5728 HttpRunner \u4e2d\uff0c\u5bf9\u5916\u63d0\u4f9b\u4e86\u4e00\u4e2a run \u65b9\u6cd5\uff0c\u7528\u4e8e\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002 run \u65b9\u6cd5\u6709\u4e09\u4e2a\u53c2\u6570\uff1a path_or_tests \uff08\u5fc5\u4f20\uff09: \u6307\u5b9a\u8981\u8fd0\u884c\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1b\u652f\u6301\u4f20\u5165\u4e24\u7c7b\u53c2\u6570 str: YAML/JSON \u683c\u5f0f\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84 dict: \u6807\u51c6\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53 dot_env_path \uff08\u53ef\u9009\uff09: \u6307\u5b9a\u52a0\u8f7d\u73af\u5883\u53d8\u91cf\u6587\u4ef6\uff08.env\uff09\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u503c\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff08PWD\uff09\u4e2d\u7684 .env \u6587\u4ef6 mapping \uff08\u53ef\u9009\uff09: \u53d8\u91cf\u6620\u5c04\uff0c\u53ef\u7528\u4e8e\u5bf9\u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u8986\u76d6\u66ff\u6362\u3002 \u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84 \u00b6 \u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u652f\u6301\u4e09\u79cd\u5f62\u5f0f\uff1a YAML/JSON \u6587\u4ef6\u8def\u5f84\uff0c\u652f\u6301\u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84 \u5305\u542b YAML/JSON \u6587\u4ef6\u7684\u6587\u4ef6\u5939\uff0c\u652f\u6301\u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84 \u6587\u4ef6\u8def\u5f84\u548c\u6587\u4ef6\u5939\u8def\u5f84\u7684\u6df7\u5408\u60c5\u51b5\uff08list/set\uff09 # \u6587\u4ef6\u8def\u5f84 runner . run ( \"docs/data/demo-quickstart-2.yml\" ) # \u6587\u4ef6\u5939\u8def\u5f84 runner . run ( \"docs/data/\" ) # \u6df7\u5408\u60c5\u51b5 runner . run ([ \"docs/data/\" , \"files/demo-quickstart-2.yml\" ]) \u5982\u9700\u6307\u5b9a\u52a0\u8f7d\u73af\u5883\u53d8\u91cf\u6587\u4ef6\uff08.env\uff09\u7684\u8def\u5f84\uff0c\u6216\u8005\u9700\u8981\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u8986\u76d6\u66ff\u6362\uff0c\u5219\u53ef\u4f7f\u7528 dot_env_path \u548c mapping \u53c2\u6570\u3002 # dot_env_path runner . run ( \"docs/data/demo-quickstart-2.yml\" , dot_env_path = \"/path/to/.env\" ) # mapping override_mapping = { \"device_sn\" : \"XXX\" } runner . run ( \"docs/data/demo-quickstart-2.yml\" , mapping = override_mapping ) \u4f20\u5165\u6807\u51c6\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53 \u00b6 \u9664\u4e86\u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u6807\u51c6\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53\u3002 \u4ee5 demo-quickstart-2.yml \u4e3a\u4f8b\uff0c\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\u4f53\u5982\u4e0b\u6240\u793a\uff1a [ { \"config\" : { \"name\" : \"testcase description\" , \"request\" : { \"base_url\" : \"\" , \"headers\" : { \"User-Agent\" : \"python-requests/2.18.4\" } }, \"variables\" : [], \"output\" : [ \"token\" ], \"path\" : \"/abs-path/to/demo-quickstart-2.yml\" , \"refs\" : { \"env\" : {}, \"debugtalk\" : { \"variables\" : { \"SECRET_KEY\" : \"DebugTalk\" }, \"functions\" : { \"gen_random_string\" : < fun c t io n ge n _ra n dom_s tr i n g a t 0 x 108596268 > , \"get_sign\" : < fun c t io n ge t _sig n a t 0 x 1085962 f 0 > , \"get_user_id\" : < fun c t io n ge t _user_id a t 0 x 108596378 > , \"get_account\" : < fun c t io n ge t _accou nt a t 0 x 108596400 > , \"get_os_platform\" : < fun c t io n ge t _os_pla tf orm a t 0 x 108596488 > } }, \"def-api\" : {}, \"def-testcase\" : {} } }, \"teststeps\" : [ { \"name\" : \"/api/get-token\" , \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/get-token\" , \"method\" : \"POST\" , \"headers\" : { \"Content-Type\" : \"application/json\" , \"app_version\" : \"2.8.6\" , \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"os_platform\" : \"ios\" , \"user_agent\" : \"iOS/10.3\" }, \"json\" : { \"sign\" : \"9c0c7e51c91ae963c833a4ccbab8d683c4a90c98\" } }, \"extract\" : [ { \"token\" : \"content.token\" } ], \"validate\" : [ { \"eq\" : [ \"status_code\" , 200 ]}, { \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]}, { \"eq\" : [ \"content.success\" , true ]} ] }, { \"name\" : \"/api/users/1000\" , \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/users/1000\" , \"method\" : \"POST\" , \"headers\" : { \"Content-Type\" : \"application/json\" , \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"token\" : \"$token\" }, \"json\" : { \"name\" : \"user1\" , \"password\" : \"123456\" }}, \"validate\" : [ { \"eq\" : [ \"status_code\" , 201 ]}, { \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]}, { \"eq\" : [ \"content.success\" , true ]}, { \"eq\" : [ \"content.msg\" , \"user created successfully.\" ]} ] } ] }, { ... } # a n o t her test case ] \u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53\u65f6\uff0c\u652f\u6301\u4f20\u5165\u5355\u4e2a\u7ed3\u6784\u4f53\uff08dict\uff09\uff0c\u6216\u8005\u591a\u4e2a\u7ed3\u6784\u4f53\uff08list of dict\uff09\u3002 # \u8fd0\u884c\u5355\u4e2a\u7ed3\u6784\u4f53 runner . run ( testcase ) # \u8fd0\u884c\u591a\u4e2a\u7ed3\u6784\u4f53 runner . run ([ testcase1 , testcase2 ]) \u52a0\u8f7d debugtalk.py && .env \u00b6 \u901a\u8fc7\u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0cHttpRunner \u4f1a\u81ea\u52a8\u4ee5\u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u4e3a\u8d77\u70b9\uff0c\u5411\u4e0a\u641c\u7d22 debugtalk.py \u6587\u4ef6\uff0c\u5e76\u5c06 debugtalk.py \u6587\u4ef6\u6240\u5728\u7684\u6587\u4ef6\u76ee\u5f55\u4f5c\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff08PWD\uff09\u3002 \u540c\u65f6\uff0cHttpRunner \u4f1a\u5728\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff08PWD\uff09\u4e0b\u641c\u7d22 .env \u6587\u4ef6\uff0c\u4ee5\u53ca api \u548c testcases \u6587\u4ef6\u5939\uff0c\u5e76\u81ea\u52a8\u8fdb\u884c\u52a0\u8f7d\u3002 \u6700\u7ec8\u52a0\u8f7d\u5f97\u5230\u7684\u5b58\u50a8\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a { \"env\" : {}, \"debugtalk\" : { \"variables\" : { \"SECRET_KEY\" : \"DebugTalk\" }, \"functions\" : { \"gen_random_string\" : < fun c t io n ge n _ra n dom_s tr i n g a t 0 x 108596268 > , \"get_sign\" : < fun c t io n ge t _sig n a t 0 x 1085962 f 0 > , \"get_user_id\" : < fun c t io n ge t _user_id a t 0 x 108596378 > , \"get_account\" : < fun c t io n ge t _accou nt a t 0 x 108596400 > , \"get_os_platform\" : < fun c t io n ge t _os_pla tf orm a t 0 x 108596488 > } }, \"def-api\" : {}, \"def-testcase\" : {} } \u5176\u4e2d\uff0c env \u5bf9\u5e94\u7684\u662f .env \u6587\u4ef6\u4e2d\u7684\u73af\u5883\u53d8\u91cf\uff0c debugtalk \u5bf9\u5e94\u7684\u662f debugtalk.py \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u548c\u51fd\u6570\uff0c def-api \u5bf9\u5e94\u7684\u662f api \u6587\u4ef6\u5939\u4e0b\u5b9a\u4e49\u7684\u63a5\u53e3\u63cf\u8ff0\uff0c def-testcase \u5bf9\u5e94\u7684\u662f testcases \u6587\u4ef6\u5939\u4e0b\u5b9a\u4e49\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 \u901a\u8fc7\u4f20\u5165\u6807\u51c6\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53\u6267\u884c\u6d4b\u8bd5\u65f6\uff0c\u4f20\u5165\u7684\u6570\u636e\u5e94\u5305\u542b\u6240\u6709\u4fe1\u606f\uff0c\u5305\u62ec debugtalk.py \u3001 .env \u3001\u4f9d\u8d56\u7684 api \u548c \u6d4b\u8bd5\u7528\u4f8b\u7b49\uff1b\u56e0\u6b64\u4e5f\u65e0\u9700\u518d\u4f7f\u7528 dot_env_path \u548c mapping \u53c2\u6570\uff0c\u6240\u6709\u4fe1\u606f\u90fd\u8981\u901a\u8fc7 refs \u4f20\u5165\u3002 \u8fd4\u56de\u8be6\u7ec6\u6d4b\u8bd5\u7ed3\u679c\u6570\u636e \u00b6 \u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u901a\u8fc7 run() \u65b9\u6cd5\u7684\u8fd4\u56de\u7ed3\u679c\u53ef\u83b7\u53d6\u8be6\u5c3d\u7684\u8fd0\u884c\u7ed3\u679c\u6570\u636e\u3002 summary = runner . run ( path_or_tests ) \u5176\u6570\u636e\u7ed3\u6784\u4e3a\uff1a { \"success\" : true , \"stat\" : { \"testsRun\" : 2 , \"failures\" : 0 , \"errors\" : 0 , \"skipped\" : 0 , \"expectedFailures\" : 0 , \"unexpectedSuccesses\" : 0 , \"successes\" : 2 }, \"time\" : { \"start_at\" : 1538449655.944404 , \"duration\" : 0.03181314468383789 }, \"platform\" : { \"httprunner_version\" : \"1.5.14\" , \"python_version\" : \"CPython 3.6.5+\" , \"platform\" : \"Darwin-17.6.0-x86_64-i386-64bit\" }, \"details\" : [ { \"success\" : true , \"name\" : \"testcase description\" , \"base_url\" : \"\" , \"stat\" : { \"testsRun\" : 2 , \"failures\" : 0 , \"errors\" : 0 , \"skipped\" : 0 , \"expectedFailures\" : 0 , \"unexpectedSuccesses\" : 0 , \"successes\" : 2 }, \"time\" : { \"start_at\" : 1538449655.944404 , \"duration\" : 0.03181314468383789 }, \"records\" : [ { \"name\" : \"/api/get-token\" , \"status\" : \"success\" , \"attachment\" : \"\" , \"meta_data\" : { \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/get-token\" , \"method\" : \"POST\" , \"headers\" : { \"User-Agent\" : \"python-requests/2.18.4\" , \"Accept-Encoding\" : \"gzip, deflate\" , \"Accept\" : \"*/*\" , \"Connection\" : \"keep-alive\" , \"Content-Type\" : \"application/json\" , \"app_version\" : \"2.8.6\" , \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"os_platform\" : \"ios\" , \"user_agent\" : \"iOS/10.3\" , \"Content-Length\" : \"52\" }, \"start_timestamp\" : 1538449655.944801 , \"json\" : { \"sign\" : \"9c0c7e51c91ae963c833a4ccbab8d683c4a90c98\" }, \"body\" : b' { \"sign\" : \"9c0c7e51c91ae963c833a4ccbab8d683c4a90c98\" } ' }, \"response\" : { \"status_code\" : 200 , \"headers\" : { \"Content-Type\" : \"application/json\" , \"Content-Length\" : \"46\" , \"Server\" : \"Werkzeug/0.14.1 Python/3.6.5+\" , \"Date\" : \"Tue, 02 Oct 2018 03:07:35 GMT\" }, \"content_size\" : 46 , \"response_time_ms\" : 12.87 , \"elapsed_ms\" : 6.955 , \"encoding\" : null , \"content\" : b' { \"success\" : true , \"token\" : \"CcQ7dBjZZbjIXRkG\" } ' , \"content_type\" : \"application/json\" , \"ok\" : true , \"url\" : \"http://127.0.0.1:5000/api/get-token\" , \"reason\" : \"OK\" , \"cookies\" : {}, \"text\" : ' { \"success\" : true , \"token\" : \"CcQ7dBjZZbjIXRkG\" } ' , \"json\" : { \"success\" : true , \"token\" : \"CcQ7dBjZZbjIXRkG\" } }, \"validators\" : [ { \"check\" : \"status_code\" , \"expect\" : 200 , \"comparator\" : \"eq\" , \"check_value\" : 200 , \"check_result\" : \"pass\" }, { \"check\" : \"headers.Content-Type\" , \"expect\" : \"application/json\" , \"comparator\" : \"eq\" , \"check_value\" : \"application/json\" , \"check_result\" : \"pass\" }, { \"check\" : \"content.success\" , \"expect\" : true , \"comparator\" : \"eq\" , \"check_value\" : true , \"check_result\" : \"pass\" } ] } }, { \"name\" : \"/api/users/1000\" , \"status\" : \"success\" , \"attachment\" : \"\" , \"meta_data\" : { \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/users/1000\" , \"method\" : \"POST\" , \"headers\" : { \"User-Agent\" : \"python-requests/2.18.4\" , \"Accept-Encoding\" : \"gzip, deflate\" , \"Accept\" : \"*/*\" , \"Connection\" : \"keep-alive\" , \"Content-Type\" : \"application/json\" , \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"token\" : \"CcQ7dBjZZbjIXRkG\" , \"Content-Length\" : \"39\" }, \"start_timestamp\" : 1538449655.958944 , \"json\" : { \"name\" : \"user1\" , \"password\" : \"123456\" }, \"body\" : b' { \"name\" : \"user1\" , \"password\" : \"123456\" } ' }, \"response\" : { \"status_code\" : 201 , \"headers\" : { \"Content-Type\" : \"application/json\" , \"Content-Length\" : \"54\" , \"Server\" : \"Werkzeug/0.14.1 Python/3.6.5+\" , \"Date\" : \"Tue, 02 Oct 2018 03:07:35 GMT\" }, \"content_size\" : 54 , \"response_time_ms\" : 3.34 , \"elapsed_ms\" : 2.16 , \"encoding\" : null , \"content\" : b' { \"success\" : true , \"msg\" : \"user created successfully.\" } ' , \"content_type\" : \"application/json\" , \"ok\" : true , \"url\" : \"http://127.0.0.1:5000/api/users/1000\" , \"reason\" : \"CREATED\" , \"cookies\" : {}, \"text\" : ' { \"success\" : true , \"msg\" : \"user created successfully.\" } ' , \"json\" : { \"success\" : true , \"msg\" : \"user created successfully.\" } }, \"validators\" : [ { \"check\" : \"status_code\" , \"expect\" : 201 , \"comparator\" : \"eq\" , \"check_value\" : 201 , \"check_result\" : \"pass\" }, { \"check\" : \"headers.Content-Type\" , \"expect\" : \"application/json\" , \"comparator\" : \"eq\" , \"check_value\" : \"application/json\" , \"check_result\" : \"pass\" }, { \"check\" : \"content.success\" , \"expect\" : true , \"comparator\" : \"eq\" , \"check_value\" : true , \"check_result\" : \"pass\" }, { \"check\" : \"content.msg\" , \"expect\" : \"user created successfully.\" , \"comparator\" : \"eq\" , \"check_value\" : \"user created successfully.\" , \"check_result\" : \"pass\" } ] } } ], \"in_out\" : { \"in\" : { \"SECRET_KEY\" : \"DebugTalk\" }, \"out\" : { \"token\" : \"CcQ7dBjZZbjIXRkG\" } } } ] } \u751f\u6210 HTML \u6d4b\u8bd5\u62a5\u544a \u00b6 \u5982\u9700\u751f\u6210 HTML \u6d4b\u8bd5\u62a5\u544a\uff0c\u53ef\u8c03\u7528 report.gen_html_report \u65b9\u6cd5\u3002 from httprunner import report report_path = report . gen_html_report ( summary , report_template = \"/path/to/custom_report_template\" , report_dir = \"/path/to/reports_dir\" , report_file = \"/path/to/report_file_path\" ) gen_html_report() \u7684\u53c2\u6570\u6709\u56db\u4e2a\uff1a summary\uff08\u5fc5\u4f20\uff09: \u6d4b\u8bd5\u8fd0\u884c\u7ed3\u679c\u6c47\u603b\u6570\u636e report_template\uff08\u53ef\u9009\uff09: \u6307\u5b9a\u81ea\u5b9a\u4e49\u7684 HTML \u62a5\u544a\u6a21\u677f\uff0c\u6a21\u677f\u5fc5\u987b\u91c7\u7528 Jinja2 \u7684\u683c\u5f0f report_dir\uff08\u53ef\u9009\uff09: \u6307\u5b9a\u751f\u6210\u62a5\u544a\u7684\u6587\u4ef6\u5939\u8def\u5f84 report_file\uff08\u53ef\u9009\uff09: \u6307\u5b9a\u751f\u6210\u62a5\u544a\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u53c2\u6570\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e report_dir \u5173\u4e8e\u6d4b\u8bd5\u62a5\u544a\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b \u6d4b\u8bd5\u62a5\u544a \u90e8\u5206\u3002","title":"\u5f00\u53d1\u6269\u5c55"},{"location":"development/dev-api/#_1","text":"HttpRunner \u9664\u4e86\u4f5c\u4e3a\u547d\u4ee4\u884c\u5de5\u5177\u4f7f\u7528\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u8f6f\u4ef6\u5305\u96c6\u6210\u5230\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u3002 \u7b80\u5355\u6765\u8bf4\uff0cHttpRunner \u63d0\u4f9b\u4e86\u8fd0\u884c YAML/JSON \u683c\u5f0f\u6d4b\u8bd5\u7528\u4f8b\u7684\u80fd\u529b\uff0c\u5e76\u80fd\u8fd4\u56de\u8be6\u7ec6\u7684\u6d4b\u8bd5\u7ed3\u679c\u4fe1\u606f\u3002","title":"\u5f00\u53d1\u6269\u5c55"},{"location":"development/dev-api/#httprunner-class","text":"","title":"HttpRunner class"},{"location":"development/dev-api/#tldr","text":"HttpRunner \u4ee5 \u7c7b\uff08class\uff09 \u7684\u5f62\u5f0f\u5bf9\u5916\u63d0\u4f9b\u8c03\u7528\u652f\u6301\uff0c\u7c7b\u540d\u4e3a HttpRunner \u3002\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a from httprunner.api import HttpRunner runner = HttpRunner ( failfast = True , save_tests = True , log_level = \"INFO\" , log_file = \"test.log\" ) summary = runner . run ( path_or_tests )","title":"TL;DR"},{"location":"development/dev-api/#_2","text":"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u521d\u59cb\u5316 HttpRunner \u65f6\u7684\u53c2\u6570\u6709\u5982\u4e0b\u51e0\u4e2a\uff1a failfast \uff08\u53ef\u9009\uff09: \u8bbe\u7f6e\u4e3a True \u65f6\uff0c\u6d4b\u8bd5\u5728\u9996\u6b21\u9047\u5230\u9519\u8bef\u6216\u5931\u8d25\u65f6\u4f1a\u505c\u6b62\u8fd0\u884c\uff1b\u9ed8\u8ba4\u503c\u4e3a False save_tests \uff08\u53ef\u9009\uff09: \u8bbe\u7f6e\u4e3a True \u65f6\uff0c\u4f1a\u5c06\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\uff08loaded/parsed/summary\uff09\u4fdd\u5b58\u4e3a JSON \u6587\u4ef6\uff0c\u5b58\u50a8\u4e8e logs \u76ee\u5f55\u4e0b\uff1b\u9ed8\u8ba4\u4e3a False log_level \uff08\u53ef\u9009\uff09: \u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\uff0c\u9ed8\u8ba4\u4e3a \"INFO\" log_file \uff08\u53ef\u9009\uff09: \u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84\uff0c\u6307\u5b9a\u540e\u5c06\u540c\u65f6\u8f93\u51fa\u65e5\u5fd7\u6587\u4ef6\uff1b\u9ed8\u8ba4\u4e0d\u8f93\u51fa\u65e5\u5fd7\u6587\u4ef6","title":"\u521d\u59cb\u5316\u53c2\u6570\u8bf4\u660e"},{"location":"development/dev-api/#_3","text":"\u5728 HttpRunner \u4e2d\uff0c\u5bf9\u5916\u63d0\u4f9b\u4e86\u4e00\u4e2a run \u65b9\u6cd5\uff0c\u7528\u4e8e\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002 run \u65b9\u6cd5\u6709\u4e09\u4e2a\u53c2\u6570\uff1a path_or_tests \uff08\u5fc5\u4f20\uff09: \u6307\u5b9a\u8981\u8fd0\u884c\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1b\u652f\u6301\u4f20\u5165\u4e24\u7c7b\u53c2\u6570 str: YAML/JSON \u683c\u5f0f\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84 dict: \u6807\u51c6\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53 dot_env_path \uff08\u53ef\u9009\uff09: \u6307\u5b9a\u52a0\u8f7d\u73af\u5883\u53d8\u91cf\u6587\u4ef6\uff08.env\uff09\u7684\u8def\u5f84\uff0c\u9ed8\u8ba4\u503c\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff08PWD\uff09\u4e2d\u7684 .env \u6587\u4ef6 mapping \uff08\u53ef\u9009\uff09: \u53d8\u91cf\u6620\u5c04\uff0c\u53ef\u7528\u4e8e\u5bf9\u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u8986\u76d6\u66ff\u6362\u3002","title":"\u8c03\u7528\u65b9\u6cd5\u8bf4\u660e"},{"location":"development/dev-api/#_4","text":"\u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u652f\u6301\u4e09\u79cd\u5f62\u5f0f\uff1a YAML/JSON \u6587\u4ef6\u8def\u5f84\uff0c\u652f\u6301\u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84 \u5305\u542b YAML/JSON \u6587\u4ef6\u7684\u6587\u4ef6\u5939\uff0c\u652f\u6301\u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84 \u6587\u4ef6\u8def\u5f84\u548c\u6587\u4ef6\u5939\u8def\u5f84\u7684\u6df7\u5408\u60c5\u51b5\uff08list/set\uff09 # \u6587\u4ef6\u8def\u5f84 runner . run ( \"docs/data/demo-quickstart-2.yml\" ) # \u6587\u4ef6\u5939\u8def\u5f84 runner . run ( \"docs/data/\" ) # \u6df7\u5408\u60c5\u51b5 runner . run ([ \"docs/data/\" , \"files/demo-quickstart-2.yml\" ]) \u5982\u9700\u6307\u5b9a\u52a0\u8f7d\u73af\u5883\u53d8\u91cf\u6587\u4ef6\uff08.env\uff09\u7684\u8def\u5f84\uff0c\u6216\u8005\u9700\u8981\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u8986\u76d6\u66ff\u6362\uff0c\u5219\u53ef\u4f7f\u7528 dot_env_path \u548c mapping \u53c2\u6570\u3002 # dot_env_path runner . run ( \"docs/data/demo-quickstart-2.yml\" , dot_env_path = \"/path/to/.env\" ) # mapping override_mapping = { \"device_sn\" : \"XXX\" } runner . run ( \"docs/data/demo-quickstart-2.yml\" , mapping = override_mapping )","title":"\u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84"},{"location":"development/dev-api/#_5","text":"\u9664\u4e86\u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u6807\u51c6\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53\u3002 \u4ee5 demo-quickstart-2.yml \u4e3a\u4f8b\uff0c\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\u4f53\u5982\u4e0b\u6240\u793a\uff1a [ { \"config\" : { \"name\" : \"testcase description\" , \"request\" : { \"base_url\" : \"\" , \"headers\" : { \"User-Agent\" : \"python-requests/2.18.4\" } }, \"variables\" : [], \"output\" : [ \"token\" ], \"path\" : \"/abs-path/to/demo-quickstart-2.yml\" , \"refs\" : { \"env\" : {}, \"debugtalk\" : { \"variables\" : { \"SECRET_KEY\" : \"DebugTalk\" }, \"functions\" : { \"gen_random_string\" : < fun c t io n ge n _ra n dom_s tr i n g a t 0 x 108596268 > , \"get_sign\" : < fun c t io n ge t _sig n a t 0 x 1085962 f 0 > , \"get_user_id\" : < fun c t io n ge t _user_id a t 0 x 108596378 > , \"get_account\" : < fun c t io n ge t _accou nt a t 0 x 108596400 > , \"get_os_platform\" : < fun c t io n ge t _os_pla tf orm a t 0 x 108596488 > } }, \"def-api\" : {}, \"def-testcase\" : {} } }, \"teststeps\" : [ { \"name\" : \"/api/get-token\" , \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/get-token\" , \"method\" : \"POST\" , \"headers\" : { \"Content-Type\" : \"application/json\" , \"app_version\" : \"2.8.6\" , \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"os_platform\" : \"ios\" , \"user_agent\" : \"iOS/10.3\" }, \"json\" : { \"sign\" : \"9c0c7e51c91ae963c833a4ccbab8d683c4a90c98\" } }, \"extract\" : [ { \"token\" : \"content.token\" } ], \"validate\" : [ { \"eq\" : [ \"status_code\" , 200 ]}, { \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]}, { \"eq\" : [ \"content.success\" , true ]} ] }, { \"name\" : \"/api/users/1000\" , \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/users/1000\" , \"method\" : \"POST\" , \"headers\" : { \"Content-Type\" : \"application/json\" , \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"token\" : \"$token\" }, \"json\" : { \"name\" : \"user1\" , \"password\" : \"123456\" }}, \"validate\" : [ { \"eq\" : [ \"status_code\" , 201 ]}, { \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]}, { \"eq\" : [ \"content.success\" , true ]}, { \"eq\" : [ \"content.msg\" , \"user created successfully.\" ]} ] } ] }, { ... } # a n o t her test case ] \u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53\u65f6\uff0c\u652f\u6301\u4f20\u5165\u5355\u4e2a\u7ed3\u6784\u4f53\uff08dict\uff09\uff0c\u6216\u8005\u591a\u4e2a\u7ed3\u6784\u4f53\uff08list of dict\uff09\u3002 # \u8fd0\u884c\u5355\u4e2a\u7ed3\u6784\u4f53 runner . run ( testcase ) # \u8fd0\u884c\u591a\u4e2a\u7ed3\u6784\u4f53 runner . run ([ testcase1 , testcase2 ])","title":"\u4f20\u5165\u6807\u51c6\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53"},{"location":"development/dev-api/#debugtalkpy-env","text":"\u901a\u8fc7\u4f20\u5165\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0cHttpRunner \u4f1a\u81ea\u52a8\u4ee5\u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u4e3a\u8d77\u70b9\uff0c\u5411\u4e0a\u641c\u7d22 debugtalk.py \u6587\u4ef6\uff0c\u5e76\u5c06 debugtalk.py \u6587\u4ef6\u6240\u5728\u7684\u6587\u4ef6\u76ee\u5f55\u4f5c\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff08PWD\uff09\u3002 \u540c\u65f6\uff0cHttpRunner \u4f1a\u5728\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff08PWD\uff09\u4e0b\u641c\u7d22 .env \u6587\u4ef6\uff0c\u4ee5\u53ca api \u548c testcases \u6587\u4ef6\u5939\uff0c\u5e76\u81ea\u52a8\u8fdb\u884c\u52a0\u8f7d\u3002 \u6700\u7ec8\u52a0\u8f7d\u5f97\u5230\u7684\u5b58\u50a8\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a { \"env\" : {}, \"debugtalk\" : { \"variables\" : { \"SECRET_KEY\" : \"DebugTalk\" }, \"functions\" : { \"gen_random_string\" : < fun c t io n ge n _ra n dom_s tr i n g a t 0 x 108596268 > , \"get_sign\" : < fun c t io n ge t _sig n a t 0 x 1085962 f 0 > , \"get_user_id\" : < fun c t io n ge t _user_id a t 0 x 108596378 > , \"get_account\" : < fun c t io n ge t _accou nt a t 0 x 108596400 > , \"get_os_platform\" : < fun c t io n ge t _os_pla tf orm a t 0 x 108596488 > } }, \"def-api\" : {}, \"def-testcase\" : {} } \u5176\u4e2d\uff0c env \u5bf9\u5e94\u7684\u662f .env \u6587\u4ef6\u4e2d\u7684\u73af\u5883\u53d8\u91cf\uff0c debugtalk \u5bf9\u5e94\u7684\u662f debugtalk.py \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u548c\u51fd\u6570\uff0c def-api \u5bf9\u5e94\u7684\u662f api \u6587\u4ef6\u5939\u4e0b\u5b9a\u4e49\u7684\u63a5\u53e3\u63cf\u8ff0\uff0c def-testcase \u5bf9\u5e94\u7684\u662f testcases \u6587\u4ef6\u5939\u4e0b\u5b9a\u4e49\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 \u901a\u8fc7\u4f20\u5165\u6807\u51c6\u7684\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u4f53\u6267\u884c\u6d4b\u8bd5\u65f6\uff0c\u4f20\u5165\u7684\u6570\u636e\u5e94\u5305\u542b\u6240\u6709\u4fe1\u606f\uff0c\u5305\u62ec debugtalk.py \u3001 .env \u3001\u4f9d\u8d56\u7684 api \u548c \u6d4b\u8bd5\u7528\u4f8b\u7b49\uff1b\u56e0\u6b64\u4e5f\u65e0\u9700\u518d\u4f7f\u7528 dot_env_path \u548c mapping \u53c2\u6570\uff0c\u6240\u6709\u4fe1\u606f\u90fd\u8981\u901a\u8fc7 refs \u4f20\u5165\u3002","title":"\u52a0\u8f7d debugtalk.py &amp;&amp; .env"},{"location":"development/dev-api/#_6","text":"\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u901a\u8fc7 run() \u65b9\u6cd5\u7684\u8fd4\u56de\u7ed3\u679c\u53ef\u83b7\u53d6\u8be6\u5c3d\u7684\u8fd0\u884c\u7ed3\u679c\u6570\u636e\u3002 summary = runner . run ( path_or_tests ) \u5176\u6570\u636e\u7ed3\u6784\u4e3a\uff1a { \"success\" : true , \"stat\" : { \"testsRun\" : 2 , \"failures\" : 0 , \"errors\" : 0 , \"skipped\" : 0 , \"expectedFailures\" : 0 , \"unexpectedSuccesses\" : 0 , \"successes\" : 2 }, \"time\" : { \"start_at\" : 1538449655.944404 , \"duration\" : 0.03181314468383789 }, \"platform\" : { \"httprunner_version\" : \"1.5.14\" , \"python_version\" : \"CPython 3.6.5+\" , \"platform\" : \"Darwin-17.6.0-x86_64-i386-64bit\" }, \"details\" : [ { \"success\" : true , \"name\" : \"testcase description\" , \"base_url\" : \"\" , \"stat\" : { \"testsRun\" : 2 , \"failures\" : 0 , \"errors\" : 0 , \"skipped\" : 0 , \"expectedFailures\" : 0 , \"unexpectedSuccesses\" : 0 , \"successes\" : 2 }, \"time\" : { \"start_at\" : 1538449655.944404 , \"duration\" : 0.03181314468383789 }, \"records\" : [ { \"name\" : \"/api/get-token\" , \"status\" : \"success\" , \"attachment\" : \"\" , \"meta_data\" : { \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/get-token\" , \"method\" : \"POST\" , \"headers\" : { \"User-Agent\" : \"python-requests/2.18.4\" , \"Accept-Encoding\" : \"gzip, deflate\" , \"Accept\" : \"*/*\" , \"Connection\" : \"keep-alive\" , \"Content-Type\" : \"application/json\" , \"app_version\" : \"2.8.6\" , \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"os_platform\" : \"ios\" , \"user_agent\" : \"iOS/10.3\" , \"Content-Length\" : \"52\" }, \"start_timestamp\" : 1538449655.944801 , \"json\" : { \"sign\" : \"9c0c7e51c91ae963c833a4ccbab8d683c4a90c98\" }, \"body\" : b' { \"sign\" : \"9c0c7e51c91ae963c833a4ccbab8d683c4a90c98\" } ' }, \"response\" : { \"status_code\" : 200 , \"headers\" : { \"Content-Type\" : \"application/json\" , \"Content-Length\" : \"46\" , \"Server\" : \"Werkzeug/0.14.1 Python/3.6.5+\" , \"Date\" : \"Tue, 02 Oct 2018 03:07:35 GMT\" }, \"content_size\" : 46 , \"response_time_ms\" : 12.87 , \"elapsed_ms\" : 6.955 , \"encoding\" : null , \"content\" : b' { \"success\" : true , \"token\" : \"CcQ7dBjZZbjIXRkG\" } ' , \"content_type\" : \"application/json\" , \"ok\" : true , \"url\" : \"http://127.0.0.1:5000/api/get-token\" , \"reason\" : \"OK\" , \"cookies\" : {}, \"text\" : ' { \"success\" : true , \"token\" : \"CcQ7dBjZZbjIXRkG\" } ' , \"json\" : { \"success\" : true , \"token\" : \"CcQ7dBjZZbjIXRkG\" } }, \"validators\" : [ { \"check\" : \"status_code\" , \"expect\" : 200 , \"comparator\" : \"eq\" , \"check_value\" : 200 , \"check_result\" : \"pass\" }, { \"check\" : \"headers.Content-Type\" , \"expect\" : \"application/json\" , \"comparator\" : \"eq\" , \"check_value\" : \"application/json\" , \"check_result\" : \"pass\" }, { \"check\" : \"content.success\" , \"expect\" : true , \"comparator\" : \"eq\" , \"check_value\" : true , \"check_result\" : \"pass\" } ] } }, { \"name\" : \"/api/users/1000\" , \"status\" : \"success\" , \"attachment\" : \"\" , \"meta_data\" : { \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/users/1000\" , \"method\" : \"POST\" , \"headers\" : { \"User-Agent\" : \"python-requests/2.18.4\" , \"Accept-Encoding\" : \"gzip, deflate\" , \"Accept\" : \"*/*\" , \"Connection\" : \"keep-alive\" , \"Content-Type\" : \"application/json\" , \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"token\" : \"CcQ7dBjZZbjIXRkG\" , \"Content-Length\" : \"39\" }, \"start_timestamp\" : 1538449655.958944 , \"json\" : { \"name\" : \"user1\" , \"password\" : \"123456\" }, \"body\" : b' { \"name\" : \"user1\" , \"password\" : \"123456\" } ' }, \"response\" : { \"status_code\" : 201 , \"headers\" : { \"Content-Type\" : \"application/json\" , \"Content-Length\" : \"54\" , \"Server\" : \"Werkzeug/0.14.1 Python/3.6.5+\" , \"Date\" : \"Tue, 02 Oct 2018 03:07:35 GMT\" }, \"content_size\" : 54 , \"response_time_ms\" : 3.34 , \"elapsed_ms\" : 2.16 , \"encoding\" : null , \"content\" : b' { \"success\" : true , \"msg\" : \"user created successfully.\" } ' , \"content_type\" : \"application/json\" , \"ok\" : true , \"url\" : \"http://127.0.0.1:5000/api/users/1000\" , \"reason\" : \"CREATED\" , \"cookies\" : {}, \"text\" : ' { \"success\" : true , \"msg\" : \"user created successfully.\" } ' , \"json\" : { \"success\" : true , \"msg\" : \"user created successfully.\" } }, \"validators\" : [ { \"check\" : \"status_code\" , \"expect\" : 201 , \"comparator\" : \"eq\" , \"check_value\" : 201 , \"check_result\" : \"pass\" }, { \"check\" : \"headers.Content-Type\" , \"expect\" : \"application/json\" , \"comparator\" : \"eq\" , \"check_value\" : \"application/json\" , \"check_result\" : \"pass\" }, { \"check\" : \"content.success\" , \"expect\" : true , \"comparator\" : \"eq\" , \"check_value\" : true , \"check_result\" : \"pass\" }, { \"check\" : \"content.msg\" , \"expect\" : \"user created successfully.\" , \"comparator\" : \"eq\" , \"check_value\" : \"user created successfully.\" , \"check_result\" : \"pass\" } ] } } ], \"in_out\" : { \"in\" : { \"SECRET_KEY\" : \"DebugTalk\" }, \"out\" : { \"token\" : \"CcQ7dBjZZbjIXRkG\" } } } ] }","title":"\u8fd4\u56de\u8be6\u7ec6\u6d4b\u8bd5\u7ed3\u679c\u6570\u636e"},{"location":"development/dev-api/#html","text":"\u5982\u9700\u751f\u6210 HTML \u6d4b\u8bd5\u62a5\u544a\uff0c\u53ef\u8c03\u7528 report.gen_html_report \u65b9\u6cd5\u3002 from httprunner import report report_path = report . gen_html_report ( summary , report_template = \"/path/to/custom_report_template\" , report_dir = \"/path/to/reports_dir\" , report_file = \"/path/to/report_file_path\" ) gen_html_report() \u7684\u53c2\u6570\u6709\u56db\u4e2a\uff1a summary\uff08\u5fc5\u4f20\uff09: \u6d4b\u8bd5\u8fd0\u884c\u7ed3\u679c\u6c47\u603b\u6570\u636e report_template\uff08\u53ef\u9009\uff09: \u6307\u5b9a\u81ea\u5b9a\u4e49\u7684 HTML \u62a5\u544a\u6a21\u677f\uff0c\u6a21\u677f\u5fc5\u987b\u91c7\u7528 Jinja2 \u7684\u683c\u5f0f report_dir\uff08\u53ef\u9009\uff09: \u6307\u5b9a\u751f\u6210\u62a5\u544a\u7684\u6587\u4ef6\u5939\u8def\u5f84 report_file\uff08\u53ef\u9009\uff09: \u6307\u5b9a\u751f\u6210\u62a5\u544a\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u8be5\u53c2\u6570\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e report_dir \u5173\u4e8e\u6d4b\u8bd5\u62a5\u544a\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b \u6d4b\u8bd5\u62a5\u544a \u90e8\u5206\u3002","title":"\u751f\u6210 HTML \u6d4b\u8bd5\u62a5\u544a"},{"location":"examples/advanced-examples/","text":"\u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b \u00b6 \u672c\u6587\u6863\u63d0\u4f9b ApiMeter \u9ad8\u7ea7\u7279\u6027\u7684\u5b8c\u6574\u5b9e\u6218\u6848\u4f8b\uff0c\u6db5\u76d6\u771f\u5b9e\u4e1a\u52a1\u573a\u666f\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5\u3002 \ud83d\udcda \u793a\u4f8b\u76ee\u5f55 \u00b6 \u7535\u5546 API \u5b8c\u6574\u6d4b\u8bd5\u6d41\u7a0b OAuth2.0 \u8ba4\u8bc1\u6d41\u7a0b\u6d4b\u8bd5 \u6279\u91cf\u6570\u636e\u6821\u9a8c\u573a\u666f \u590d\u6742\u7b7e\u540d\u751f\u6210\u4e0e\u6821\u9a8c \u6761\u4ef6\u6821\u9a8c\u4e0e\u4e1a\u52a1\u903b\u8f91 \u6027\u80fd\u76d1\u63a7\u4e0e\u544a\u8b66 \u591a\u73af\u5883\u914d\u7f6e\u7ba1\u7406 \u793a\u4f8b1\uff1a\u7535\u5546 API \u5b8c\u6574\u6d4b\u8bd5\u6d41\u7a0b \u00b6 \u573a\u666f\u63cf\u8ff0 \u00b6 \u6d4b\u8bd5\u4e00\u4e2a\u5b8c\u6574\u7684\u7535\u5546\u4e0b\u5355\u6d41\u7a0b\uff0c\u5305\u62ec\uff1a 1. \u7528\u6237\u767b\u5f55\u83b7\u53d6 token 2. \u67e5\u8be2\u5546\u54c1\u5217\u8868 3. \u5c06\u5546\u54c1\u52a0\u5165\u8d2d\u7269\u8f66 4. \u521b\u5efa\u8ba2\u5355 5. \u652f\u4ed8\u8ba2\u5355 6. \u67e5\u8be2\u8ba2\u5355\u72b6\u6001 \u9879\u76ee\u7ed3\u6784 \u00b6 ecommerce_test/ \u251c\u2500\u2500 api/ \u2502 \u251c\u2500\u2500 auth.yml # \u8ba4\u8bc1\u76f8\u5173\u63a5\u53e3 \u2502 \u251c\u2500\u2500 products.yml # \u5546\u54c1\u76f8\u5173\u63a5\u53e3 \u2502 \u251c\u2500\u2500 cart.yml # \u8d2d\u7269\u8f66\u63a5\u53e3 \u2502 \u2514\u2500\u2500 orders.yml # \u8ba2\u5355\u63a5\u53e3 \u251c\u2500\u2500 testcases/ \u2502 \u2514\u2500\u2500 test_order_flow.yml \u251c\u2500\u2500 debugtalk.py \u2514\u2500\u2500 .env debugtalk.py \u00b6 import hashlib import hmac import time from apimeter.logger import log_info SECRET_KEY = \"ecommerce_secret\" def generate_order_sign ( order_data ): \"\"\"\u751f\u6210\u8ba2\u5355\u7b7e\u540d\"\"\" sorted_keys = sorted ( order_data . keys ()) sign_str = '&' . join ([ f \" { k } = { order_data [ k ] } \" for k in sorted_keys ]) return hashlib . md5 ( sign_str . encode ()) . hexdigest () def validate_product_list ( products , min_count = 1 ): \"\"\"\u6821\u9a8c\u5546\u54c1\u5217\u8868\u6570\u636e\"\"\" assert len ( products ) >= min_count , f \"\u5546\u54c1\u6570\u91cf\u4e0d\u8db3: { len ( products ) } \" for product in products : # \u5fc5\u586b\u5b57\u6bb5\u68c0\u67e5 assert product . get ( \"id\" ) is not None , \"\u5546\u54c1ID\u4e0d\u80fd\u4e3a\u7a7a\" assert product . get ( \"name\" ) is not None , \"\u5546\u54c1\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a\" assert product . get ( \"price\" ) is not None , \"\u5546\u54c1\u4ef7\u683c\u4e0d\u80fd\u4e3a\u7a7a\" # \u4ef7\u683c\u5408\u7406\u6027\u68c0\u67e5 price = product . get ( \"price\" , 0 ) assert price > 0 , f \"\u5546\u54c1\u4ef7\u683c\u5fc5\u987b\u5927\u4e8e0: { price } \" assert price < 1000000 , f \"\u5546\u54c1\u4ef7\u683c\u5f02\u5e38\u8fc7\u9ad8: { price } \" # \u5e93\u5b58\u68c0\u67e5 stock = product . get ( \"stock\" , 0 ) assert stock >= 0 , f \"\u5546\u54c1\u5e93\u5b58\u4e0d\u80fd\u4e3a\u8d1f: { stock } \" log_info ( f \"\u2713 \u5546\u54c1\u5217\u8868\u6821\u9a8c\u901a\u8fc7\uff0c\u5171 { len ( products ) } \u4e2a\u5546\u54c1\" ) return True def validate_order_data ( order ): \"\"\"\u6821\u9a8c\u8ba2\u5355\u6570\u636e\u5b8c\u6574\u6027\"\"\" required_fields = [ \"order_id\" , \"user_id\" , \"amount\" , \"status\" , \"items\" ] for field in required_fields : assert field in order , f \"\u8ba2\u5355\u7f3a\u5c11\u5fc5\u586b\u5b57\u6bb5: { field } \" # \u8ba2\u5355\u91d1\u989d\u68c0\u67e5 assert order [ \"amount\" ] > 0 , \"\u8ba2\u5355\u91d1\u989d\u5fc5\u987b\u5927\u4e8e0\" # \u8ba2\u5355\u5546\u54c1\u68c0\u67e5 assert len ( order [ \"items\" ]) > 0 , \"\u8ba2\u5355\u5546\u54c1\u5217\u8868\u4e0d\u80fd\u4e3a\u7a7a\" # \u72b6\u6001\u68c0\u67e5 valid_status = [ \"pending\" , \"paid\" , \"processing\" , \"completed\" , \"cancelled\" ] assert order [ \"status\" ] in valid_status , f \"\u8ba2\u5355\u72b6\u6001\u65e0\u6548: { order [ 'status' ] } \" return True \u6d4b\u8bd5\u7528\u4f8b: testcases/test_order_flow.yml \u00b6 config : name : \"\u7535\u5546\u4e0b\u5355\u5b8c\u6574\u6d41\u7a0b\u6d4b\u8bd5\" variables : base_url : \"https://api.ecommerce.com\" username : \"test_user@example.com\" password : \"Test123456\" teststeps : # ========== Step 1: \u7528\u6237\u767b\u5f55 ========== - name : \u7528\u6237\u767b\u5f55\u83b7\u53d6token request : url : $base_url/api/v1/auth/login method : POST json : username : $username password : $password extract : - access_token : content.data.access_token - user_id : content.data.user_id script : - assert status_code == 200 - assert content.success is True - assert content.data.access_token is not None - assert len(content.data.access_token) > 0 - assert content.data.user_id > 0 - assert elapsed.total_seconds < 2.0, \"\u767b\u5f55\u63a5\u53e3\u54cd\u5e94\u8fc7\u6162\" # ========== Step 2: \u67e5\u8be2\u5546\u54c1\u5217\u8868 ========== - name : \u67e5\u8be2\u5546\u54c1\u5217\u8868 request : url : $base_url/api/v1/products method : GET headers : Authorization : \"Bearer $access_token\" params : category : \"electronics\" page : 1 page_size : 20 extract : - products : content.data.products - first_product_id : content.data.products[0].id - first_product_price : content.data.products[0].price script : # \u57fa\u7840\u6821\u9a8c - assert status_code == 200 - assert content.success is True - assert len(content.data.products) > 0 # \u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\u5546\u54c1\u5217\u8868 - ${validate_product_list(content.data.products, 5)} # \u6279\u91cf\u6821\u9a8c\u6240\u6709\u5546\u54c1\u7684\u5fc5\u586b\u5b57\u6bb5 - | for product in content.data.products: assert product.get(\"id\") is not None assert product.get(\"name\") is not None assert product.get(\"price\") > 0 assert product.get(\"stock\") >= 0 # ========== Step 3: \u52a0\u5165\u8d2d\u7269\u8f66 ========== - name : \u5c06\u5546\u54c1\u52a0\u5165\u8d2d\u7269\u8f66 request : url : $base_url/api/v1/cart/add method : POST headers : Authorization : \"Bearer $access_token\" json : product_id : $first_product_id quantity : 2 extract : - cart_item_id : content.data.cart_item_id script : - assert status_code == 200 - assert content.success is True - assert content.data.cart_item_id is not None # ========== Step 4: \u521b\u5efa\u8ba2\u5355 ========== - name : \u521b\u5efa\u8ba2\u5355 request : url : $base_url/api/v1/orders/create method : POST headers : Authorization : \"Bearer $access_token\" json : items : - product_id : $first_product_id quantity : 2 price : $first_product_price shipping_address : province : \"\u5e7f\u4e1c\u7701\" city : \"\u6df1\u5733\u5e02\" district : \"\u5357\u5c71\u533a\" detail : \"\u79d1\u6280\u56ed\u5357\u533a\" remark : \"\u8bf7\u5c3d\u5feb\u53d1\u8d27\" extract : - order_id : content.data.order_id - order_no : content.data.order_no - order_amount : content.data.amount script : # \u72b6\u6001\u7801\u6821\u9a8c - assert status_code == 200 - assert content.success is True # \u8ba2\u5355\u57fa\u672c\u4fe1\u606f\u6821\u9a8c - assert content.data.order_id > 0 - assert content.data.order_no is not None - assert len(content.data.order_no) > 0 # \u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\u8ba2\u5355\u6570\u636e - ${validate_order_data(content.data)} # \u8ba2\u5355\u91d1\u989d\u6821\u9a8c - | expected_amount = $first_product_price * 2 actual_amount = content.data.amount assert actual_amount == expected_amount, \\ f\"\u8ba2\u5355\u91d1\u989d\u4e0d\u7b26: \u671f\u671b{expected_amount}, \u5b9e\u9645{actual_amount}\" # ========== Step 5: \u652f\u4ed8\u8ba2\u5355 ========== - name : \u652f\u4ed8\u8ba2\u5355 request : url : $base_url/api/v1/orders/$order_id/pay method : POST headers : Authorization : \"Bearer $access_token\" json : order_id : $order_id payment_method : \"alipay\" amount : $order_amount script : - assert status_code == 200 - assert content.success is True - assert content.data.payment_status == \"success\" - assert content.data.order_status == \"paid\" # ========== Step 6: \u67e5\u8be2\u8ba2\u5355\u72b6\u6001 ========== - name : \u67e5\u8be2\u8ba2\u5355\u72b6\u6001 request : url : $base_url/api/v1/orders/$order_id method : GET headers : Authorization : \"Bearer $access_token\" script : - assert status_code == 200 - assert content.success is True - assert content.data.order_id == $order_id - assert content.data.status in [\"paid\", \"processing\"] - assert content.data.payment_status == \"success\" # \u8ba2\u5355\u5386\u53f2\u8bb0\u5f55\u68c0\u67e5 - | history = content.data.history assert len(history) > 0, \"\u8ba2\u5355\u5386\u53f2\u8bb0\u5f55\u4e0d\u80fd\u4e3a\u7a7a\" # \u68c0\u67e5\u662f\u5426\u5305\u542b\u521b\u5efa\u548c\u652f\u4ed8\u8bb0\u5f55 status_list = [h[\"status\"] for h in history] assert \"pending\" in status_list, \"\u7f3a\u5c11\u8ba2\u5355\u521b\u5efa\u8bb0\u5f55\" assert \"paid\" in status_list, \"\u7f3a\u5c11\u652f\u4ed8\u8bb0\u5f55\" \u793a\u4f8b2\uff1aOAuth2.0 \u8ba4\u8bc1\u6d41\u7a0b\u6d4b\u8bd5 \u00b6 \u5b8c\u6574 OAuth2 \u6388\u6743\u7801\u6a21\u5f0f \u00b6 config : name : \"OAuth2.0 \u6388\u6743\u7801\u6d41\u7a0b\u6d4b\u8bd5\" variables : auth_server : \"https://auth.example.com\" api_server : \"https://api.example.com\" client_id : \"test_client_id\" client_secret : \"test_client_secret\" redirect_uri : \"https://example.com/callback\" teststeps : # Step 1: \u83b7\u53d6\u6388\u6743\u7801 - name : \u83b7\u53d6\u6388\u6743\u7801 request : url : $auth_server/oauth/authorize method : POST json : client_id : $client_id response_type : \"code\" redirect_uri : $redirect_uri scope : \"read write\" state : \"random_state_123\" extract : - auth_code : content.code script : - assert status_code == 200 - assert content.code is not None - assert len(content.code) > 0 # Step 2: \u7528\u6388\u6743\u7801\u6362\u53d6\u8bbf\u95ee\u4ee4\u724c - name : \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c request : url : $auth_server/oauth/token method : POST json : client_id : $client_id client_secret : $client_secret code : $auth_code grant_type : \"authorization_code\" redirect_uri : $redirect_uri extract : - access_token : content.access_token - refresh_token : content.refresh_token - expires_in : content.expires_in script : - assert status_code == 200 - assert content.access_token is not None - assert content.refresh_token is not None - assert content.token_type == \"Bearer\" - assert content.expires_in > 0 - assert isinstance(content.expires_in, int) # Step 3: \u4f7f\u7528\u8bbf\u95ee\u4ee4\u724c\u8bf7\u6c42API - name : \u4f7f\u7528\u8bbf\u95ee\u4ee4\u724c\u83b7\u53d6\u7528\u6237\u4fe1\u606f request : url : $api_server/api/user/profile method : GET headers : Authorization : \"Bearer $access_token\" script : - assert status_code == 200 - assert content.user_id is not None - assert content.username is not None # Step 4: \u5237\u65b0\u4ee4\u724c - name : \u4f7f\u7528\u5237\u65b0\u4ee4\u724c\u83b7\u53d6\u65b0\u7684\u8bbf\u95ee\u4ee4\u724c request : url : $auth_server/oauth/token method : POST json : client_id : $client_id client_secret : $client_secret refresh_token : $refresh_token grant_type : \"refresh_token\" extract : - new_access_token : content.access_token script : - assert status_code == 200 - assert content.access_token is not None - assert content.access_token != \"$access_token\" \u793a\u4f8b3\uff1a\u6279\u91cf\u6570\u636e\u6821\u9a8c\u573a\u666f \u00b6 \u4f7f\u7528 ApiMeter \u7684\u901a\u914d\u7b26\u548c\u81ea\u5b9a\u4e49\u51fd\u6570\u8fdb\u884c\u9ad8\u6548\u7684\u6279\u91cf\u6570\u636e\u6821\u9a8c\u3002 config : name : \"\u6279\u91cf\u6570\u636e\u6821\u9a8c\u793a\u4f8b\" base_url : \"https://api.example.com\" teststeps : - name : \u83b7\u53d6\u5546\u54c1\u6570\u636e\uff08\u5305\u542b\u591a\u5c42\u5d4c\u5957\uff09 request : url : $base_url/api/products/detail method : GET params : id : 12345 script : # \u4f7f\u7528\u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c\u6240\u6709 SKU \u5b57\u6bb5 - ${check(content, data.product.purchasePlan.*.sku.*.id, data.product.purchasePlan.*.sku.*.amount, data.product.purchasePlan.*.sku.*.currency, data.product.purchasePlan.*.sku.*.duration )} # \u6b63\u5219\u548c\u7c7b\u578b\u6821\u9a8c - ${check(content, '_url ~= ^https?://.*', 'data.product @= dict', 'data.product.purchasePlan @= list', 'data.default_currency =* [USD, CNY, EUR]' )} # \u81ea\u5b9a\u4e49\u590d\u6742\u6821\u9a8c - | plans = content.data.product.purchasePlan for plan in plans: assert plan.get(\"plan_id\") is not None assert len(plan.get(\"sku\", [])) > 0 for sku in plan[\"sku\"]: # \u91d1\u989d\u5408\u7406\u6027\u68c0\u67e5 amount = sku.get(\"amount\", 0) origin = sku.get(\"origin_amount\", 0) assert amount > 0, f\"SKU\u91d1\u989d\u5fc5\u987b\u5927\u4e8e0: {amount}\" assert origin >= amount, f\"\u539f\u4ef7\u4e0d\u80fd\u4f4e\u4e8e\u73b0\u4ef7: {origin} < {amount}\" # \u6298\u6263\u8ba1\u7b97 if origin > 0: discount = amount / origin assert 0 < discount <= 1, f\"\u6298\u6263\u7387\u5f02\u5e38: {discount}\" \u793a\u4f8b4\uff1a\u590d\u6742\u7b7e\u540d\u751f\u6210\u4e0e\u6821\u9a8c \u00b6 \u5b9e\u9645\u9879\u76ee\u4e2d\u5e38\u89c1\u7684\u7b7e\u540d\u573a\u666f\u3002 debugtalk.py \u00b6 import hashlib import hmac import time import json def generate_api_signature ( params_dict ): \"\"\" \u751f\u6210API\u7b7e\u540d \u89c4\u5219\uff1a 1. \u6309\u53c2\u6570\u540dASCII\u7801\u6392\u5e8f 2. \u62fc\u63a5\u4e3a key1=value1&key2=value2 \u683c\u5f0f 3. \u9644\u52a0\u5bc6\u94a5 4. MD5\u52a0\u5bc6 \"\"\" secret_key = params_dict . pop ( \"_secret\" , \"default_secret\" ) # \u8fc7\u6ee4\u7a7a\u503c\u548c\u7b7e\u540d\u5b57\u6bb5 filtered = { k : v for k , v in params_dict . items () if v is not None and k != 'sign' } # \u6392\u5e8f sorted_params = sorted ( filtered . items ()) # \u62fc\u63a5 sign_str = '&' . join ([ f \" { k } = { v } \" for k , v in sorted_params ]) sign_str += f \"&key= { secret_key } \" # MD5 return hashlib . md5 ( sign_str . encode ( 'utf-8' )) . hexdigest () . upper () \u6d4b\u8bd5\u7528\u4f8b \u00b6 variables : app_key : \"my_app_key\" app_secret : \"my_app_secret\" timestamp : ${get_timestamp()} teststeps : - name : \u5e26\u7b7e\u540d\u7684API\u8bf7\u6c42 request : url : $base_url/api/secure/data method : POST json : app_key : $app_key timestamp : $timestamp nonce : ${gen_random_string(16)} data : user_id : 12345 action : \"query\" sign : \"${generate_api_signature({ app_key: $app_key, timestamp: $timestamp, nonce: ${gen_random_string(16)}, data: {user_id: 12345, action: 'query'}, _secret: $app_secret })}\" script : - assert status_code == 200 - assert content.success is True \u793a\u4f8b5\uff1a\u6761\u4ef6\u6821\u9a8c\u4e0e\u4e1a\u52a1\u903b\u8f91 \u00b6 \u6839\u636e\u4e0d\u540c\u7684\u4e1a\u52a1\u72b6\u6001\u8fdb\u884c\u4e0d\u540c\u7684\u6821\u9a8c\u3002 script : # \u6839\u636e\u7528\u6237\u7c7b\u578b\u8fdb\u884c\u4e0d\u540c\u6821\u9a8c - | user_type = content.user.type if user_type == \"vip\": # VIP \u7528\u6237\u6821\u9a8c assert content.user.vip_level > 0, \"VIP\u7b49\u7ea7\u5fc5\u987b\u5927\u4e8e0\" assert content.user.vip_expires is not None, \"VIP\u5230\u671f\u65f6\u95f4\u4e0d\u80fd\u4e3a\u7a7a\" assert content.user.discount >= 0.7, f\"VIP\u6298\u6263\u7387\u5f02\u5e38: {content.user.discount}\" assert len(content.user.privileges) > 0, \"VIP\u7279\u6743\u5217\u8868\u4e0d\u80fd\u4e3a\u7a7a\" elif user_type == \"premium\": # \u9ad8\u7ea7\u7528\u6237\u6821\u9a8c assert content.user.premium_features is not None assert len(content.user.premium_features) >= 3, \"\u9ad8\u7ea7\u529f\u80fd\u81f3\u5c113\u9879\" assert content.user.ad_free is True, \"\u9ad8\u7ea7\u7528\u6237\u5e94\u8be5\u65e0\u5e7f\u544a\" elif user_type == \"free\": # \u514d\u8d39\u7528\u6237\u6821\u9a8c assert content.user.ads_enabled is True, \"\u514d\u8d39\u7528\u6237\u5e94\u8be5\u663e\u793a\u5e7f\u544a\" assert content.user.daily_limit is not None, \"\u6bcf\u65e5\u9650\u989d\u5fc5\u987b\u8bbe\u7f6e\" else: raise ValueError(f\"\u672a\u77e5\u7528\u6237\u7c7b\u578b: {user_type}\") # \u6839\u636e\u8ba2\u5355\u72b6\u6001\u8fdb\u884c\u4e0d\u540c\u6821\u9a8c - | order_status = content.order.status if order_status == \"pending\": assert content.order.payment_url is not None, \"\u5f85\u652f\u4ed8\u8ba2\u5355\u5fc5\u987b\u6709\u652f\u4ed8\u94fe\u63a5\" assert content.order.expire_time is not None, \"\u5f85\u652f\u4ed8\u8ba2\u5355\u5fc5\u987b\u6709\u8fc7\u671f\u65f6\u95f4\" elif order_status == \"paid\": assert content.order.payment_time is not None, \"\u5df2\u652f\u4ed8\u8ba2\u5355\u5fc5\u987b\u6709\u652f\u4ed8\u65f6\u95f4\" assert content.order.transaction_id is not None, \"\u5df2\u652f\u4ed8\u8ba2\u5355\u5fc5\u987b\u6709\u4ea4\u6613\u53f7\" elif order_status == \"cancelled\": assert content.order.cancel_reason is not None, \"\u53d6\u6d88\u8ba2\u5355\u5fc5\u987b\u6709\u53d6\u6d88\u539f\u56e0\" assert content.order.refund_status is not None, \"\u53d6\u6d88\u8ba2\u5355\u5fc5\u987b\u6709\u9000\u6b3e\u72b6\u6001\" \u793a\u4f8b6\uff1a\u6027\u80fd\u76d1\u63a7\u4e0e\u544a\u8b66 \u00b6 \u5728\u529f\u80fd\u6d4b\u8bd5\u7684\u540c\u65f6\u76d1\u63a7\u6027\u80fd\u6307\u6807\u3002 script : # \u6027\u80fd\u76d1\u63a7 - | response_time = elapsed.total_seconds api_path = url.split('?')[0] # \u53bb\u9664\u67e5\u8be2\u53c2\u6570 # \u5b9a\u4e49\u4e0d\u540c\u63a5\u53e3\u7684\u6027\u80fd\u6807\u51c6 performance_standards = { \"/api/users\": 0.5, # \u7528\u6237\u63a5\u53e3\uff1a500ms \"/api/products\": 1.0, # \u5546\u54c1\u63a5\u53e3\uff1a1s \"/api/search\": 2.0, # \u641c\u7d22\u63a5\u53e3\uff1a2s \"/api/reports\": 5.0, # \u62a5\u8868\u63a5\u53e3\uff1a5s } # \u67e5\u627e\u5339\u914d\u7684\u6027\u80fd\u6807\u51c6 max_time = 1.0 # \u9ed8\u8ba4\u6807\u51c6 for path, limit in performance_standards.items(): if path in api_path: max_time = limit break # \u6027\u80fd\u544a\u8b66 if response_time > max_time: print(f\"\u26a0\ufe0f \u6027\u80fd\u544a\u8b66: {api_path}\") print(f\" \u54cd\u5e94\u65f6\u95f4: {response_time:.3f}s\") print(f\" \u6027\u80fd\u6807\u51c6: {max_time}s\") print(f\" \u8d85\u51fa: {(response_time - max_time):.3f}s\") # \u4e25\u91cd\u8d85\u65f6\u65ad\u8a00 assert response_time < max_time * 2, \\ f\"\u4e25\u91cd\u8d85\u65f6: {response_time:.3f}s (\u6807\u51c6: {max_time}s)\" # \u6570\u636e\u91cf\u76d1\u63a7 - | if hasattr(content, 'data') and isinstance(content.data, list): data_count = len(content.data) # \u6570\u636e\u91cf\u544a\u8b66 if data_count > 1000: print(f\"\u26a0\ufe0f \u6570\u636e\u91cf\u544a\u8b66: \u8fd4\u56de{data_count}\u6761\u6570\u636e\") print(f\" \u5efa\u8bae\uff1a\u8003\u8651\u5206\u9875\u6216\u9650\u5236\u8fd4\u56de\u6570\u91cf\") # \u6570\u636e\u91cf\u65ad\u8a00 assert data_count <= 5000, f\"\u6570\u636e\u91cf\u8fc7\u5927: {data_count}\u6761\" \u793a\u4f8b7\uff1a\u591a\u73af\u5883\u914d\u7f6e\u7ba1\u7406 \u00b6 .env \u6587\u4ef6\u7ba1\u7406 \u00b6 .env.dev \uff08\u5f00\u53d1\u73af\u5883\uff09: ENV = development BASE_URL = https://dev-api.example.com APP_KEY = dev_app_key APP_SECRET = dev_secret DB_HOST = dev-db.example.com TIMEOUT = 10 .env.test \uff08\u6d4b\u8bd5\u73af\u5883\uff09: ENV = testing BASE_URL = https://test-api.example.com APP_KEY = test_app_key APP_SECRET = test_secret DB_HOST = test-db.example.com TIMEOUT = 30 .env.prod \uff08\u751f\u4ea7\u73af\u5883\uff09: ENV = production BASE_URL = https://api.example.com APP_KEY = prod_app_key APP_SECRET = prod_secret DB_HOST = prod-db.example.com TIMEOUT = 60 \u6d4b\u8bd5\u7528\u4f8b \u00b6 config : name : \"\u591a\u73af\u5883\u6d4b\u8bd5\u7528\u4f8b\" variables : env : ${ENV(ENV)} base_url : ${ENV(BASE_URL)} app_key : ${ENV(APP_KEY)} app_secret : ${ENV(APP_SECRET)} timeout : ${ENV(TIMEOUT)} teststeps : - name : \u73af\u5883\u68c0\u67e5 request : url : $base_url/api/health method : GET script : - assert status_code == 200 - | # \u6839\u636e\u73af\u5883\u8fdb\u884c\u4e0d\u540c\u7684\u6821\u9a8c env = \"$env\" if env == \"development\": # \u5f00\u53d1\u73af\u5883\uff1a\u53ef\u80fd\u8fd4\u56de\u8c03\u8bd5\u4fe1\u606f print(\"\u5f00\u53d1\u73af\u5883\u6d4b\u8bd5\") elif env == \"testing\": # \u6d4b\u8bd5\u73af\u5883\uff1a\u6807\u51c6\u6821\u9a8c assert content.environment == \"testing\" elif env == \"production\": # \u751f\u4ea7\u73af\u5883\uff1a\u4e25\u683c\u6821\u9a8c assert content.environment == \"production\" assert \"debug\" not in content # \u751f\u4ea7\u73af\u5883\u4e0d\u5e94\u6709\u8c03\u8bd5\u4fe1\u606f \u8fd0\u884c\u4e0d\u540c\u73af\u5883 \u00b6 # \u5f00\u53d1\u73af\u5883 export $( cat .env.dev | xargs ) && hrun testcases/ # \u6d4b\u8bd5\u73af\u5883 export $( cat .env.test | xargs ) && hrun testcases/ # \u751f\u4ea7\u73af\u5883 export $( cat .env.prod | xargs ) && hrun testcases/ --skip-success \ud83d\udcdd \u603b\u7ed3 \u00b6 \u8fd9\u4e9b\u793a\u4f8b\u5c55\u793a\u4e86 ApiMeter \u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u7684\u5e94\u7528\uff1a \u573a\u666f \u6838\u5fc3\u7279\u6027 \u4ef7\u503c \u7535\u5546\u6d41\u7a0b script + \u81ea\u5b9a\u4e49\u51fd\u6570 \u5b8c\u6574\u4e1a\u52a1\u6d41\u7a0b\u6d4b\u8bd5 OAuth2 \u53d8\u91cf\u63d0\u53d6 + \u94fe\u5f0f\u8c03\u7528 \u590d\u6742\u8ba4\u8bc1\u6d41\u7a0b \u6279\u91cf\u6821\u9a8c \u901a\u914d\u7b26 + \u6b63\u5219 \u9ad8\u6548\u6570\u636e\u6821\u9a8c \u7b7e\u540d\u6821\u9a8c \u5b57\u5178\u53c2\u6570 + \u51fd\u6570 \u5b89\u5168\u63a5\u53e3\u6d4b\u8bd5 \u6761\u4ef6\u6821\u9a8c \u591a\u884c\u811a\u672c + \u4e1a\u52a1\u903b\u8f91 \u7075\u6d3b\u7684\u6821\u9a8c\u7b56\u7565 \u6027\u80fd\u76d1\u63a7 elapsed + \u6761\u4ef6\u5224\u65ad \u529f\u80fd+\u6027\u80fd\u7ed3\u5408 \u591a\u73af\u5883 \u73af\u5883\u53d8\u91cf + \u914d\u7f6e\u7ba1\u7406 \u73af\u5883\u9694\u79bb \u66f4\u591a\u5b66\u4e60\u8d44\u6e90\uff1a - 10\u5206\u949f\u5feb\u901f\u4e0a\u624b - \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c - \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 - \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 \u6709\u95ee\u9898\uff1f \u67e5\u770b FAQ \u6216 \u63d0\u4ea4 Issue","title":"\u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b"},{"location":"examples/advanced-examples/#_1","text":"\u672c\u6587\u6863\u63d0\u4f9b ApiMeter \u9ad8\u7ea7\u7279\u6027\u7684\u5b8c\u6574\u5b9e\u6218\u6848\u4f8b\uff0c\u6db5\u76d6\u771f\u5b9e\u4e1a\u52a1\u573a\u666f\u4e2d\u7684\u6700\u4f73\u5b9e\u8df5\u3002","title":"\u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b"},{"location":"examples/advanced-examples/#_2","text":"\u7535\u5546 API \u5b8c\u6574\u6d4b\u8bd5\u6d41\u7a0b OAuth2.0 \u8ba4\u8bc1\u6d41\u7a0b\u6d4b\u8bd5 \u6279\u91cf\u6570\u636e\u6821\u9a8c\u573a\u666f \u590d\u6742\u7b7e\u540d\u751f\u6210\u4e0e\u6821\u9a8c \u6761\u4ef6\u6821\u9a8c\u4e0e\u4e1a\u52a1\u903b\u8f91 \u6027\u80fd\u76d1\u63a7\u4e0e\u544a\u8b66 \u591a\u73af\u5883\u914d\u7f6e\u7ba1\u7406","title":"\ud83d\udcda \u793a\u4f8b\u76ee\u5f55"},{"location":"examples/advanced-examples/#1-api","text":"","title":"\u793a\u4f8b1\uff1a\u7535\u5546 API \u5b8c\u6574\u6d4b\u8bd5\u6d41\u7a0b"},{"location":"examples/advanced-examples/#_3","text":"\u6d4b\u8bd5\u4e00\u4e2a\u5b8c\u6574\u7684\u7535\u5546\u4e0b\u5355\u6d41\u7a0b\uff0c\u5305\u62ec\uff1a 1. \u7528\u6237\u767b\u5f55\u83b7\u53d6 token 2. \u67e5\u8be2\u5546\u54c1\u5217\u8868 3. \u5c06\u5546\u54c1\u52a0\u5165\u8d2d\u7269\u8f66 4. \u521b\u5efa\u8ba2\u5355 5. \u652f\u4ed8\u8ba2\u5355 6. \u67e5\u8be2\u8ba2\u5355\u72b6\u6001","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"examples/advanced-examples/#_4","text":"ecommerce_test/ \u251c\u2500\u2500 api/ \u2502 \u251c\u2500\u2500 auth.yml # \u8ba4\u8bc1\u76f8\u5173\u63a5\u53e3 \u2502 \u251c\u2500\u2500 products.yml # \u5546\u54c1\u76f8\u5173\u63a5\u53e3 \u2502 \u251c\u2500\u2500 cart.yml # \u8d2d\u7269\u8f66\u63a5\u53e3 \u2502 \u2514\u2500\u2500 orders.yml # \u8ba2\u5355\u63a5\u53e3 \u251c\u2500\u2500 testcases/ \u2502 \u2514\u2500\u2500 test_order_flow.yml \u251c\u2500\u2500 debugtalk.py \u2514\u2500\u2500 .env","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"examples/advanced-examples/#debugtalkpy","text":"import hashlib import hmac import time from apimeter.logger import log_info SECRET_KEY = \"ecommerce_secret\" def generate_order_sign ( order_data ): \"\"\"\u751f\u6210\u8ba2\u5355\u7b7e\u540d\"\"\" sorted_keys = sorted ( order_data . keys ()) sign_str = '&' . join ([ f \" { k } = { order_data [ k ] } \" for k in sorted_keys ]) return hashlib . md5 ( sign_str . encode ()) . hexdigest () def validate_product_list ( products , min_count = 1 ): \"\"\"\u6821\u9a8c\u5546\u54c1\u5217\u8868\u6570\u636e\"\"\" assert len ( products ) >= min_count , f \"\u5546\u54c1\u6570\u91cf\u4e0d\u8db3: { len ( products ) } \" for product in products : # \u5fc5\u586b\u5b57\u6bb5\u68c0\u67e5 assert product . get ( \"id\" ) is not None , \"\u5546\u54c1ID\u4e0d\u80fd\u4e3a\u7a7a\" assert product . get ( \"name\" ) is not None , \"\u5546\u54c1\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a\" assert product . get ( \"price\" ) is not None , \"\u5546\u54c1\u4ef7\u683c\u4e0d\u80fd\u4e3a\u7a7a\" # \u4ef7\u683c\u5408\u7406\u6027\u68c0\u67e5 price = product . get ( \"price\" , 0 ) assert price > 0 , f \"\u5546\u54c1\u4ef7\u683c\u5fc5\u987b\u5927\u4e8e0: { price } \" assert price < 1000000 , f \"\u5546\u54c1\u4ef7\u683c\u5f02\u5e38\u8fc7\u9ad8: { price } \" # \u5e93\u5b58\u68c0\u67e5 stock = product . get ( \"stock\" , 0 ) assert stock >= 0 , f \"\u5546\u54c1\u5e93\u5b58\u4e0d\u80fd\u4e3a\u8d1f: { stock } \" log_info ( f \"\u2713 \u5546\u54c1\u5217\u8868\u6821\u9a8c\u901a\u8fc7\uff0c\u5171 { len ( products ) } \u4e2a\u5546\u54c1\" ) return True def validate_order_data ( order ): \"\"\"\u6821\u9a8c\u8ba2\u5355\u6570\u636e\u5b8c\u6574\u6027\"\"\" required_fields = [ \"order_id\" , \"user_id\" , \"amount\" , \"status\" , \"items\" ] for field in required_fields : assert field in order , f \"\u8ba2\u5355\u7f3a\u5c11\u5fc5\u586b\u5b57\u6bb5: { field } \" # \u8ba2\u5355\u91d1\u989d\u68c0\u67e5 assert order [ \"amount\" ] > 0 , \"\u8ba2\u5355\u91d1\u989d\u5fc5\u987b\u5927\u4e8e0\" # \u8ba2\u5355\u5546\u54c1\u68c0\u67e5 assert len ( order [ \"items\" ]) > 0 , \"\u8ba2\u5355\u5546\u54c1\u5217\u8868\u4e0d\u80fd\u4e3a\u7a7a\" # \u72b6\u6001\u68c0\u67e5 valid_status = [ \"pending\" , \"paid\" , \"processing\" , \"completed\" , \"cancelled\" ] assert order [ \"status\" ] in valid_status , f \"\u8ba2\u5355\u72b6\u6001\u65e0\u6548: { order [ 'status' ] } \" return True","title":"debugtalk.py"},{"location":"examples/advanced-examples/#testcasestest_order_flowyml","text":"config : name : \"\u7535\u5546\u4e0b\u5355\u5b8c\u6574\u6d41\u7a0b\u6d4b\u8bd5\" variables : base_url : \"https://api.ecommerce.com\" username : \"test_user@example.com\" password : \"Test123456\" teststeps : # ========== Step 1: \u7528\u6237\u767b\u5f55 ========== - name : \u7528\u6237\u767b\u5f55\u83b7\u53d6token request : url : $base_url/api/v1/auth/login method : POST json : username : $username password : $password extract : - access_token : content.data.access_token - user_id : content.data.user_id script : - assert status_code == 200 - assert content.success is True - assert content.data.access_token is not None - assert len(content.data.access_token) > 0 - assert content.data.user_id > 0 - assert elapsed.total_seconds < 2.0, \"\u767b\u5f55\u63a5\u53e3\u54cd\u5e94\u8fc7\u6162\" # ========== Step 2: \u67e5\u8be2\u5546\u54c1\u5217\u8868 ========== - name : \u67e5\u8be2\u5546\u54c1\u5217\u8868 request : url : $base_url/api/v1/products method : GET headers : Authorization : \"Bearer $access_token\" params : category : \"electronics\" page : 1 page_size : 20 extract : - products : content.data.products - first_product_id : content.data.products[0].id - first_product_price : content.data.products[0].price script : # \u57fa\u7840\u6821\u9a8c - assert status_code == 200 - assert content.success is True - assert len(content.data.products) > 0 # \u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\u5546\u54c1\u5217\u8868 - ${validate_product_list(content.data.products, 5)} # \u6279\u91cf\u6821\u9a8c\u6240\u6709\u5546\u54c1\u7684\u5fc5\u586b\u5b57\u6bb5 - | for product in content.data.products: assert product.get(\"id\") is not None assert product.get(\"name\") is not None assert product.get(\"price\") > 0 assert product.get(\"stock\") >= 0 # ========== Step 3: \u52a0\u5165\u8d2d\u7269\u8f66 ========== - name : \u5c06\u5546\u54c1\u52a0\u5165\u8d2d\u7269\u8f66 request : url : $base_url/api/v1/cart/add method : POST headers : Authorization : \"Bearer $access_token\" json : product_id : $first_product_id quantity : 2 extract : - cart_item_id : content.data.cart_item_id script : - assert status_code == 200 - assert content.success is True - assert content.data.cart_item_id is not None # ========== Step 4: \u521b\u5efa\u8ba2\u5355 ========== - name : \u521b\u5efa\u8ba2\u5355 request : url : $base_url/api/v1/orders/create method : POST headers : Authorization : \"Bearer $access_token\" json : items : - product_id : $first_product_id quantity : 2 price : $first_product_price shipping_address : province : \"\u5e7f\u4e1c\u7701\" city : \"\u6df1\u5733\u5e02\" district : \"\u5357\u5c71\u533a\" detail : \"\u79d1\u6280\u56ed\u5357\u533a\" remark : \"\u8bf7\u5c3d\u5feb\u53d1\u8d27\" extract : - order_id : content.data.order_id - order_no : content.data.order_no - order_amount : content.data.amount script : # \u72b6\u6001\u7801\u6821\u9a8c - assert status_code == 200 - assert content.success is True # \u8ba2\u5355\u57fa\u672c\u4fe1\u606f\u6821\u9a8c - assert content.data.order_id > 0 - assert content.data.order_no is not None - assert len(content.data.order_no) > 0 # \u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\u8ba2\u5355\u6570\u636e - ${validate_order_data(content.data)} # \u8ba2\u5355\u91d1\u989d\u6821\u9a8c - | expected_amount = $first_product_price * 2 actual_amount = content.data.amount assert actual_amount == expected_amount, \\ f\"\u8ba2\u5355\u91d1\u989d\u4e0d\u7b26: \u671f\u671b{expected_amount}, \u5b9e\u9645{actual_amount}\" # ========== Step 5: \u652f\u4ed8\u8ba2\u5355 ========== - name : \u652f\u4ed8\u8ba2\u5355 request : url : $base_url/api/v1/orders/$order_id/pay method : POST headers : Authorization : \"Bearer $access_token\" json : order_id : $order_id payment_method : \"alipay\" amount : $order_amount script : - assert status_code == 200 - assert content.success is True - assert content.data.payment_status == \"success\" - assert content.data.order_status == \"paid\" # ========== Step 6: \u67e5\u8be2\u8ba2\u5355\u72b6\u6001 ========== - name : \u67e5\u8be2\u8ba2\u5355\u72b6\u6001 request : url : $base_url/api/v1/orders/$order_id method : GET headers : Authorization : \"Bearer $access_token\" script : - assert status_code == 200 - assert content.success is True - assert content.data.order_id == $order_id - assert content.data.status in [\"paid\", \"processing\"] - assert content.data.payment_status == \"success\" # \u8ba2\u5355\u5386\u53f2\u8bb0\u5f55\u68c0\u67e5 - | history = content.data.history assert len(history) > 0, \"\u8ba2\u5355\u5386\u53f2\u8bb0\u5f55\u4e0d\u80fd\u4e3a\u7a7a\" # \u68c0\u67e5\u662f\u5426\u5305\u542b\u521b\u5efa\u548c\u652f\u4ed8\u8bb0\u5f55 status_list = [h[\"status\"] for h in history] assert \"pending\" in status_list, \"\u7f3a\u5c11\u8ba2\u5355\u521b\u5efa\u8bb0\u5f55\" assert \"paid\" in status_list, \"\u7f3a\u5c11\u652f\u4ed8\u8bb0\u5f55\"","title":"\u6d4b\u8bd5\u7528\u4f8b: testcases/test_order_flow.yml"},{"location":"examples/advanced-examples/#2oauth20","text":"","title":"\u793a\u4f8b2\uff1aOAuth2.0 \u8ba4\u8bc1\u6d41\u7a0b\u6d4b\u8bd5"},{"location":"examples/advanced-examples/#oauth2","text":"config : name : \"OAuth2.0 \u6388\u6743\u7801\u6d41\u7a0b\u6d4b\u8bd5\" variables : auth_server : \"https://auth.example.com\" api_server : \"https://api.example.com\" client_id : \"test_client_id\" client_secret : \"test_client_secret\" redirect_uri : \"https://example.com/callback\" teststeps : # Step 1: \u83b7\u53d6\u6388\u6743\u7801 - name : \u83b7\u53d6\u6388\u6743\u7801 request : url : $auth_server/oauth/authorize method : POST json : client_id : $client_id response_type : \"code\" redirect_uri : $redirect_uri scope : \"read write\" state : \"random_state_123\" extract : - auth_code : content.code script : - assert status_code == 200 - assert content.code is not None - assert len(content.code) > 0 # Step 2: \u7528\u6388\u6743\u7801\u6362\u53d6\u8bbf\u95ee\u4ee4\u724c - name : \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c request : url : $auth_server/oauth/token method : POST json : client_id : $client_id client_secret : $client_secret code : $auth_code grant_type : \"authorization_code\" redirect_uri : $redirect_uri extract : - access_token : content.access_token - refresh_token : content.refresh_token - expires_in : content.expires_in script : - assert status_code == 200 - assert content.access_token is not None - assert content.refresh_token is not None - assert content.token_type == \"Bearer\" - assert content.expires_in > 0 - assert isinstance(content.expires_in, int) # Step 3: \u4f7f\u7528\u8bbf\u95ee\u4ee4\u724c\u8bf7\u6c42API - name : \u4f7f\u7528\u8bbf\u95ee\u4ee4\u724c\u83b7\u53d6\u7528\u6237\u4fe1\u606f request : url : $api_server/api/user/profile method : GET headers : Authorization : \"Bearer $access_token\" script : - assert status_code == 200 - assert content.user_id is not None - assert content.username is not None # Step 4: \u5237\u65b0\u4ee4\u724c - name : \u4f7f\u7528\u5237\u65b0\u4ee4\u724c\u83b7\u53d6\u65b0\u7684\u8bbf\u95ee\u4ee4\u724c request : url : $auth_server/oauth/token method : POST json : client_id : $client_id client_secret : $client_secret refresh_token : $refresh_token grant_type : \"refresh_token\" extract : - new_access_token : content.access_token script : - assert status_code == 200 - assert content.access_token is not None - assert content.access_token != \"$access_token\"","title":"\u5b8c\u6574 OAuth2 \u6388\u6743\u7801\u6a21\u5f0f"},{"location":"examples/advanced-examples/#3","text":"\u4f7f\u7528 ApiMeter \u7684\u901a\u914d\u7b26\u548c\u81ea\u5b9a\u4e49\u51fd\u6570\u8fdb\u884c\u9ad8\u6548\u7684\u6279\u91cf\u6570\u636e\u6821\u9a8c\u3002 config : name : \"\u6279\u91cf\u6570\u636e\u6821\u9a8c\u793a\u4f8b\" base_url : \"https://api.example.com\" teststeps : - name : \u83b7\u53d6\u5546\u54c1\u6570\u636e\uff08\u5305\u542b\u591a\u5c42\u5d4c\u5957\uff09 request : url : $base_url/api/products/detail method : GET params : id : 12345 script : # \u4f7f\u7528\u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c\u6240\u6709 SKU \u5b57\u6bb5 - ${check(content, data.product.purchasePlan.*.sku.*.id, data.product.purchasePlan.*.sku.*.amount, data.product.purchasePlan.*.sku.*.currency, data.product.purchasePlan.*.sku.*.duration )} # \u6b63\u5219\u548c\u7c7b\u578b\u6821\u9a8c - ${check(content, '_url ~= ^https?://.*', 'data.product @= dict', 'data.product.purchasePlan @= list', 'data.default_currency =* [USD, CNY, EUR]' )} # \u81ea\u5b9a\u4e49\u590d\u6742\u6821\u9a8c - | plans = content.data.product.purchasePlan for plan in plans: assert plan.get(\"plan_id\") is not None assert len(plan.get(\"sku\", [])) > 0 for sku in plan[\"sku\"]: # \u91d1\u989d\u5408\u7406\u6027\u68c0\u67e5 amount = sku.get(\"amount\", 0) origin = sku.get(\"origin_amount\", 0) assert amount > 0, f\"SKU\u91d1\u989d\u5fc5\u987b\u5927\u4e8e0: {amount}\" assert origin >= amount, f\"\u539f\u4ef7\u4e0d\u80fd\u4f4e\u4e8e\u73b0\u4ef7: {origin} < {amount}\" # \u6298\u6263\u8ba1\u7b97 if origin > 0: discount = amount / origin assert 0 < discount <= 1, f\"\u6298\u6263\u7387\u5f02\u5e38: {discount}\"","title":"\u793a\u4f8b3\uff1a\u6279\u91cf\u6570\u636e\u6821\u9a8c\u573a\u666f"},{"location":"examples/advanced-examples/#4","text":"\u5b9e\u9645\u9879\u76ee\u4e2d\u5e38\u89c1\u7684\u7b7e\u540d\u573a\u666f\u3002","title":"\u793a\u4f8b4\uff1a\u590d\u6742\u7b7e\u540d\u751f\u6210\u4e0e\u6821\u9a8c"},{"location":"examples/advanced-examples/#debugtalkpy_1","text":"import hashlib import hmac import time import json def generate_api_signature ( params_dict ): \"\"\" \u751f\u6210API\u7b7e\u540d \u89c4\u5219\uff1a 1. \u6309\u53c2\u6570\u540dASCII\u7801\u6392\u5e8f 2. \u62fc\u63a5\u4e3a key1=value1&key2=value2 \u683c\u5f0f 3. \u9644\u52a0\u5bc6\u94a5 4. MD5\u52a0\u5bc6 \"\"\" secret_key = params_dict . pop ( \"_secret\" , \"default_secret\" ) # \u8fc7\u6ee4\u7a7a\u503c\u548c\u7b7e\u540d\u5b57\u6bb5 filtered = { k : v for k , v in params_dict . items () if v is not None and k != 'sign' } # \u6392\u5e8f sorted_params = sorted ( filtered . items ()) # \u62fc\u63a5 sign_str = '&' . join ([ f \" { k } = { v } \" for k , v in sorted_params ]) sign_str += f \"&key= { secret_key } \" # MD5 return hashlib . md5 ( sign_str . encode ( 'utf-8' )) . hexdigest () . upper ()","title":"debugtalk.py"},{"location":"examples/advanced-examples/#_5","text":"variables : app_key : \"my_app_key\" app_secret : \"my_app_secret\" timestamp : ${get_timestamp()} teststeps : - name : \u5e26\u7b7e\u540d\u7684API\u8bf7\u6c42 request : url : $base_url/api/secure/data method : POST json : app_key : $app_key timestamp : $timestamp nonce : ${gen_random_string(16)} data : user_id : 12345 action : \"query\" sign : \"${generate_api_signature({ app_key: $app_key, timestamp: $timestamp, nonce: ${gen_random_string(16)}, data: {user_id: 12345, action: 'query'}, _secret: $app_secret })}\" script : - assert status_code == 200 - assert content.success is True","title":"\u6d4b\u8bd5\u7528\u4f8b"},{"location":"examples/advanced-examples/#5","text":"\u6839\u636e\u4e0d\u540c\u7684\u4e1a\u52a1\u72b6\u6001\u8fdb\u884c\u4e0d\u540c\u7684\u6821\u9a8c\u3002 script : # \u6839\u636e\u7528\u6237\u7c7b\u578b\u8fdb\u884c\u4e0d\u540c\u6821\u9a8c - | user_type = content.user.type if user_type == \"vip\": # VIP \u7528\u6237\u6821\u9a8c assert content.user.vip_level > 0, \"VIP\u7b49\u7ea7\u5fc5\u987b\u5927\u4e8e0\" assert content.user.vip_expires is not None, \"VIP\u5230\u671f\u65f6\u95f4\u4e0d\u80fd\u4e3a\u7a7a\" assert content.user.discount >= 0.7, f\"VIP\u6298\u6263\u7387\u5f02\u5e38: {content.user.discount}\" assert len(content.user.privileges) > 0, \"VIP\u7279\u6743\u5217\u8868\u4e0d\u80fd\u4e3a\u7a7a\" elif user_type == \"premium\": # \u9ad8\u7ea7\u7528\u6237\u6821\u9a8c assert content.user.premium_features is not None assert len(content.user.premium_features) >= 3, \"\u9ad8\u7ea7\u529f\u80fd\u81f3\u5c113\u9879\" assert content.user.ad_free is True, \"\u9ad8\u7ea7\u7528\u6237\u5e94\u8be5\u65e0\u5e7f\u544a\" elif user_type == \"free\": # \u514d\u8d39\u7528\u6237\u6821\u9a8c assert content.user.ads_enabled is True, \"\u514d\u8d39\u7528\u6237\u5e94\u8be5\u663e\u793a\u5e7f\u544a\" assert content.user.daily_limit is not None, \"\u6bcf\u65e5\u9650\u989d\u5fc5\u987b\u8bbe\u7f6e\" else: raise ValueError(f\"\u672a\u77e5\u7528\u6237\u7c7b\u578b: {user_type}\") # \u6839\u636e\u8ba2\u5355\u72b6\u6001\u8fdb\u884c\u4e0d\u540c\u6821\u9a8c - | order_status = content.order.status if order_status == \"pending\": assert content.order.payment_url is not None, \"\u5f85\u652f\u4ed8\u8ba2\u5355\u5fc5\u987b\u6709\u652f\u4ed8\u94fe\u63a5\" assert content.order.expire_time is not None, \"\u5f85\u652f\u4ed8\u8ba2\u5355\u5fc5\u987b\u6709\u8fc7\u671f\u65f6\u95f4\" elif order_status == \"paid\": assert content.order.payment_time is not None, \"\u5df2\u652f\u4ed8\u8ba2\u5355\u5fc5\u987b\u6709\u652f\u4ed8\u65f6\u95f4\" assert content.order.transaction_id is not None, \"\u5df2\u652f\u4ed8\u8ba2\u5355\u5fc5\u987b\u6709\u4ea4\u6613\u53f7\" elif order_status == \"cancelled\": assert content.order.cancel_reason is not None, \"\u53d6\u6d88\u8ba2\u5355\u5fc5\u987b\u6709\u53d6\u6d88\u539f\u56e0\" assert content.order.refund_status is not None, \"\u53d6\u6d88\u8ba2\u5355\u5fc5\u987b\u6709\u9000\u6b3e\u72b6\u6001\"","title":"\u793a\u4f8b5\uff1a\u6761\u4ef6\u6821\u9a8c\u4e0e\u4e1a\u52a1\u903b\u8f91"},{"location":"examples/advanced-examples/#6","text":"\u5728\u529f\u80fd\u6d4b\u8bd5\u7684\u540c\u65f6\u76d1\u63a7\u6027\u80fd\u6307\u6807\u3002 script : # \u6027\u80fd\u76d1\u63a7 - | response_time = elapsed.total_seconds api_path = url.split('?')[0] # \u53bb\u9664\u67e5\u8be2\u53c2\u6570 # \u5b9a\u4e49\u4e0d\u540c\u63a5\u53e3\u7684\u6027\u80fd\u6807\u51c6 performance_standards = { \"/api/users\": 0.5, # \u7528\u6237\u63a5\u53e3\uff1a500ms \"/api/products\": 1.0, # \u5546\u54c1\u63a5\u53e3\uff1a1s \"/api/search\": 2.0, # \u641c\u7d22\u63a5\u53e3\uff1a2s \"/api/reports\": 5.0, # \u62a5\u8868\u63a5\u53e3\uff1a5s } # \u67e5\u627e\u5339\u914d\u7684\u6027\u80fd\u6807\u51c6 max_time = 1.0 # \u9ed8\u8ba4\u6807\u51c6 for path, limit in performance_standards.items(): if path in api_path: max_time = limit break # \u6027\u80fd\u544a\u8b66 if response_time > max_time: print(f\"\u26a0\ufe0f \u6027\u80fd\u544a\u8b66: {api_path}\") print(f\" \u54cd\u5e94\u65f6\u95f4: {response_time:.3f}s\") print(f\" \u6027\u80fd\u6807\u51c6: {max_time}s\") print(f\" \u8d85\u51fa: {(response_time - max_time):.3f}s\") # \u4e25\u91cd\u8d85\u65f6\u65ad\u8a00 assert response_time < max_time * 2, \\ f\"\u4e25\u91cd\u8d85\u65f6: {response_time:.3f}s (\u6807\u51c6: {max_time}s)\" # \u6570\u636e\u91cf\u76d1\u63a7 - | if hasattr(content, 'data') and isinstance(content.data, list): data_count = len(content.data) # \u6570\u636e\u91cf\u544a\u8b66 if data_count > 1000: print(f\"\u26a0\ufe0f \u6570\u636e\u91cf\u544a\u8b66: \u8fd4\u56de{data_count}\u6761\u6570\u636e\") print(f\" \u5efa\u8bae\uff1a\u8003\u8651\u5206\u9875\u6216\u9650\u5236\u8fd4\u56de\u6570\u91cf\") # \u6570\u636e\u91cf\u65ad\u8a00 assert data_count <= 5000, f\"\u6570\u636e\u91cf\u8fc7\u5927: {data_count}\u6761\"","title":"\u793a\u4f8b6\uff1a\u6027\u80fd\u76d1\u63a7\u4e0e\u544a\u8b66"},{"location":"examples/advanced-examples/#7","text":"","title":"\u793a\u4f8b7\uff1a\u591a\u73af\u5883\u914d\u7f6e\u7ba1\u7406"},{"location":"examples/advanced-examples/#env","text":".env.dev \uff08\u5f00\u53d1\u73af\u5883\uff09: ENV = development BASE_URL = https://dev-api.example.com APP_KEY = dev_app_key APP_SECRET = dev_secret DB_HOST = dev-db.example.com TIMEOUT = 10 .env.test \uff08\u6d4b\u8bd5\u73af\u5883\uff09: ENV = testing BASE_URL = https://test-api.example.com APP_KEY = test_app_key APP_SECRET = test_secret DB_HOST = test-db.example.com TIMEOUT = 30 .env.prod \uff08\u751f\u4ea7\u73af\u5883\uff09: ENV = production BASE_URL = https://api.example.com APP_KEY = prod_app_key APP_SECRET = prod_secret DB_HOST = prod-db.example.com TIMEOUT = 60","title":".env \u6587\u4ef6\u7ba1\u7406"},{"location":"examples/advanced-examples/#_6","text":"config : name : \"\u591a\u73af\u5883\u6d4b\u8bd5\u7528\u4f8b\" variables : env : ${ENV(ENV)} base_url : ${ENV(BASE_URL)} app_key : ${ENV(APP_KEY)} app_secret : ${ENV(APP_SECRET)} timeout : ${ENV(TIMEOUT)} teststeps : - name : \u73af\u5883\u68c0\u67e5 request : url : $base_url/api/health method : GET script : - assert status_code == 200 - | # \u6839\u636e\u73af\u5883\u8fdb\u884c\u4e0d\u540c\u7684\u6821\u9a8c env = \"$env\" if env == \"development\": # \u5f00\u53d1\u73af\u5883\uff1a\u53ef\u80fd\u8fd4\u56de\u8c03\u8bd5\u4fe1\u606f print(\"\u5f00\u53d1\u73af\u5883\u6d4b\u8bd5\") elif env == \"testing\": # \u6d4b\u8bd5\u73af\u5883\uff1a\u6807\u51c6\u6821\u9a8c assert content.environment == \"testing\" elif env == \"production\": # \u751f\u4ea7\u73af\u5883\uff1a\u4e25\u683c\u6821\u9a8c assert content.environment == \"production\" assert \"debug\" not in content # \u751f\u4ea7\u73af\u5883\u4e0d\u5e94\u6709\u8c03\u8bd5\u4fe1\u606f","title":"\u6d4b\u8bd5\u7528\u4f8b"},{"location":"examples/advanced-examples/#_7","text":"# \u5f00\u53d1\u73af\u5883 export $( cat .env.dev | xargs ) && hrun testcases/ # \u6d4b\u8bd5\u73af\u5883 export $( cat .env.test | xargs ) && hrun testcases/ # \u751f\u4ea7\u73af\u5883 export $( cat .env.prod | xargs ) && hrun testcases/ --skip-success","title":"\u8fd0\u884c\u4e0d\u540c\u73af\u5883"},{"location":"examples/advanced-examples/#_8","text":"\u8fd9\u4e9b\u793a\u4f8b\u5c55\u793a\u4e86 ApiMeter \u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u7684\u5e94\u7528\uff1a \u573a\u666f \u6838\u5fc3\u7279\u6027 \u4ef7\u503c \u7535\u5546\u6d41\u7a0b script + \u81ea\u5b9a\u4e49\u51fd\u6570 \u5b8c\u6574\u4e1a\u52a1\u6d41\u7a0b\u6d4b\u8bd5 OAuth2 \u53d8\u91cf\u63d0\u53d6 + \u94fe\u5f0f\u8c03\u7528 \u590d\u6742\u8ba4\u8bc1\u6d41\u7a0b \u6279\u91cf\u6821\u9a8c \u901a\u914d\u7b26 + \u6b63\u5219 \u9ad8\u6548\u6570\u636e\u6821\u9a8c \u7b7e\u540d\u6821\u9a8c \u5b57\u5178\u53c2\u6570 + \u51fd\u6570 \u5b89\u5168\u63a5\u53e3\u6d4b\u8bd5 \u6761\u4ef6\u6821\u9a8c \u591a\u884c\u811a\u672c + \u4e1a\u52a1\u903b\u8f91 \u7075\u6d3b\u7684\u6821\u9a8c\u7b56\u7565 \u6027\u80fd\u76d1\u63a7 elapsed + \u6761\u4ef6\u5224\u65ad \u529f\u80fd+\u6027\u80fd\u7ed3\u5408 \u591a\u73af\u5883 \u73af\u5883\u53d8\u91cf + \u914d\u7f6e\u7ba1\u7406 \u73af\u5883\u9694\u79bb \u66f4\u591a\u5b66\u4e60\u8d44\u6e90\uff1a - 10\u5206\u949f\u5feb\u901f\u4e0a\u624b - \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c - \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 - \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 \u6709\u95ee\u9898\uff1f \u67e5\u770b FAQ \u6216 \u63d0\u4ea4 Issue","title":"\ud83d\udcdd \u603b\u7ed3"},{"location":"examples/quickstart-case/","text":"\u5feb\u901f\u4e0a\u624b\u793a\u4f8b \u00b6 \u672c\u6587\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u5c55\u793a HttpRunner \u7684\u6838\u5fc3\u529f\u80fd\u4f7f\u7528\u65b9\u6cd5\u3002 \u793a\u4f8b\u4ecb\u7ecd \u00b6 \u8be5\u6848\u4f8b\u4f5c\u4e3a\u88ab\u6d4b\u670d\u52a1\uff0c\u4e3b\u8981\u6709\u4e24\u7c7b\u63a5\u53e3\uff1a \u6743\u9650\u6821\u9a8c\uff0c\u83b7\u53d6 token \u652f\u6301 CRUD \u64cd\u4f5c\u7684 RESTful APIs\uff0c\u6240\u6709\u63a5\u53e3\u7684\u8bf7\u6c42\u5934\u57df\u4e2d\u90fd\u5fc5\u987b\u5305\u542b\u6709\u6548\u7684 token \u6848\u4f8b\u7684\u5b9e\u73b0\u5f62\u5f0f\u4e3a flask \u5e94\u7528\u670d\u52a1\uff08 api_server.py \uff09\uff0c\u542f\u52a8\u65b9\u5f0f\u5982\u4e0b\uff1a $ export FLASK_APP=docs/data/api_server.py $ export FLASK_ENV=development $ flask run * Serving Flask app \"docs/data/api_server.py\" (lazy loading) * Environment: development * Debug mode: on * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit) * Restarting with stat * Debugger is active! * Debugger PIN: 989-476-348 \u670d\u52a1\u542f\u52a8\u6210\u529f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\u4e86\u3002 \u6d4b\u8bd5\u51c6\u5907 \u00b6 \u6293\u5305\u5206\u6790 \u00b6 \u5728\u5f00\u59cb\u6d4b\u8bd5\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u63a5\u53e3\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u7ec6\u8282\uff0c\u800c\u6700\u4f73\u7684\u65b9\u5f0f\u5c31\u662f\u91c7\u7528 Charles Proxy \u6216\u8005 Fiddler \u8fd9\u7c7b\u7f51\u7edc\u6293\u5305\u5de5\u5177\u8fdb\u884c\u6293\u5305\u5206\u6790\u3002 \u4f8b\u5982\uff0c\u5728\u672c\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u5148\u8fdb\u884c\u6743\u9650\u6821\u9a8c\uff0c\u7136\u540e\u6210\u529f\u521b\u5efa\u4e00\u4e2a\u7528\u6237\uff0c\u5bf9\u5e94\u7684\u7f51\u7edc\u6293\u5305\u5185\u5bb9\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u901a\u8fc7\u6293\u5305\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5177\u4f53\u7684\u63a5\u53e3\u4fe1\u606f\uff0c\u5305\u62ec\u8bf7\u6c42\u7684URL\u3001Method\u3001headers\u3001\u53c2\u6570\u548c\u54cd\u5e94\u5185\u5bb9\u7b49\u5185\u5bb9\uff0c\u57fa\u4e8e\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u4e86\u3002 \u751f\u6210\u6d4b\u8bd5\u7528\u4f8b \u00b6 \u4e3a\u4e86\u7b80\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u7f16\u5199\u5de5\u4f5c\uff0cHttpRunner \u5b9e\u73b0\u4e86\u6d4b\u8bd5\u7528\u4f8b\u751f\u6210\u7684\u529f\u80fd\u3002 \u9996\u5148\uff0c\u9700\u8981\u5c06\u6293\u53d6\u5f97\u5230\u7684\u6570\u636e\u5305\u5bfc\u51fa\u4e3a HAR \u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u5047\u8bbe\u5bfc\u51fa\u7684\u6587\u4ef6\u540d\u79f0\u4e3a demo-quickstart.har \u3002 \u7136\u540e\uff0c\u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u4e2d\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u5373\u53ef\u5c06 demo-quickstart.har \u8f6c\u6362\u4e3a HttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 $ har2case docs/data/demo-quickstart.har -2y INFO:root:Start to generate testcase. INFO:root:dump testcase to YAML format. INFO:root:Generate YAML testcase successfully: docs/data/demo-quickstart.yml \u4f7f\u7528 har2case \u8f6c\u6362\u811a\u672c\u65f6\u9ed8\u8ba4\u8f6c\u6362\u4e3a JSON \u683c\u5f0f\uff0c\u52a0\u4e0a -2y \u53c2\u6570\u540e\u8f6c\u6362\u4e3a YAML \u683c\u5f0f\u3002\u4e24\u79cd\u683c\u5f0f\u5b8c\u5168\u7b49\u4ef7\uff0cYAML \u683c\u5f0f\u66f4\u7b80\u6d01\uff0cJSON \u683c\u5f0f\u652f\u6301\u7684\u5de5\u5177\u66f4\u4e30\u5bcc\uff0c\u5927\u5bb6\u53ef\u6839\u636e\u4e2a\u4eba\u559c\u597d\u8fdb\u884c\u9009\u62e9\u3002\u5173\u4e8e har2case \u7684\u8be6\u7ec6\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b \u300a\u5f55\u5236\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u300b \u3002 \u7ecf\u8fc7\u8f6c\u6362\uff0c\u5728\u6e90 demo-quickstart.har \u6587\u4ef6\u7684\u540c\u7ea7\u76ee\u5f55\u4e0b\u751f\u6210\u4e86\u76f8\u540c\u6587\u4ef6\u540d\u79f0\u7684 YAML \u683c\u5f0f\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6 demo-quickstart.yml \uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a - config : name : testcase description variables : {} - test : name : /api/get-token request : headers : Content-Type : application/json User-Agent : python-requests/2.18.4 app_version : 2.8.6 device_sn : FwgRiO7CNA50DSU os_platform : ios json : sign : 9c0c7e51c91ae963c833a4ccbab8d683c4a90c98 method : POST url : http://127.0.0.1:5000/api/get-token validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , application/json ] - eq : [ content.success , true ] - eq : [ content.token , baNLX1zhFYP11Seb ] - test : name : /api/users/1000 request : headers : Content-Type : application/json User-Agent : python-requests/2.18.4 device_sn : FwgRiO7CNA50DSU token : baNLX1zhFYP11Seb json : name : user1 password : '123456' method : POST url : http://127.0.0.1:5000/api/users/1000 validate : - eq : [ status_code , 201 ] - eq : [ headers.Content-Type , application/json ] - eq : [ content.success , true ] - eq : [ content.msg , user created successfully. ] \u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5982\u4e0b\u51e0\u70b9\uff1a \u6bcf\u4e2a YAML/JSON \u6587\u4ef6\u5bf9\u5e94\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09 \u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e3a\u4e00\u4e2a list of dict \u7ed3\u6784\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u5168\u5c40\u914d\u7f6e\u9879\uff08config\uff09\u548c\u82e5\u5e72\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09 config \u4e3a\u5168\u5c40\u914d\u7f6e\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b test \u5bf9\u5e94\u5355\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff0c\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u672c\u8eab \u5982\u4e0a\u4fbf\u662f HttpRunner \u6d4b\u8bd5\u7528\u4f8b\u7684\u57fa\u672c\u7ed3\u6784\u3002 \u5173\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u7684\u66f4\u591a\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b \u300a\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u63cf\u8ff0\u300b \u3002 \u9996\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b \u00b6 \u6d4b\u8bd5\u7528\u4f8b\u5c31\u7eea\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u8c03\u8bd5\u8fd0\u884c\u4e86\u3002 \u4e3a\u4e86\u6f14\u793a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8fed\u4ee3\u4f18\u5316\u8fc7\u7a0b\uff0c\u6211\u4eec\u5148\u5c06 demo-quickstart.json \u91cd\u547d\u540d\u4e3a demo-quickstart-0.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-0.yml \uff09\u3002 \u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u7684\u547d\u4ee4\u4e3a hrun \uff0c\u540e\u9762\u76f4\u63a5\u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8def\u5f84\u5373\u53ef\u3002 $ hrun docs/data/demo-quickstart-0.yml INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 9.26 ms, response_length: 46 bytes ERROR validate: content.token equals baNLX1zhFYP11Seb(str) ==> fail tXGuSQgOCVXcltkz(str) equals baNLX1zhFYP11Seb(str) ERROR ******************************** DETAILED REQUEST & RESPONSE ******************************** ====== request details ====== url: http://127.0.0.1:5000/api/get-token method: POST headers: {'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.18.4', 'app_version': '2.8.6', 'device_sn': 'FwgRiO7CNA50DSU', 'os_platform': 'ios'} json: {'sign': '9c0c7e51c91ae963c833a4ccbab8d683c4a90c98'} verify: True ====== response details ====== status_code: 200 headers: {'Content-Type': 'application/json', 'Content-Length': '46', 'Server': 'Werkzeug/0.14.1 Python/3.7.0', 'Date': 'Sat, 26 Jan 2019 14:43:55 GMT'} body: '{\"success\": true, \"token\": \"tXGuSQgOCVXcltkz\"}' F /api/users/1000 INFO POST http://127.0.0.1:5000/api/users/1000 ERROR 403 Client Error: FORBIDDEN for url: http://127.0.0.1:5000/api/users/1000 ERROR validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) ERROR validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) ERROR validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) ERROR ******************************** DETAILED REQUEST & RESPONSE ******************************** ====== request details ====== url: http://127.0.0.1:5000/api/users/1000 method: POST headers: {'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.18.4', 'device_sn': 'FwgRiO7CNA50DSU', 'token': 'baNLX1zhFYP11Seb'} json: {'name': 'user1', 'password': '123456'} verify: True ====== response details ====== status_code: 403 headers: {'Content-Type': 'application/json', 'Content-Length': '50', 'Server': 'Werkzeug/0.14.1 Python/3.7.0', 'Date': 'Sat, 26 Jan 2019 14:43:55 GMT'} body: '{\"success\": false, \"msg\": \"Authorization failed!\"}' F ====================================================================== FAIL: test_0000_000 (httprunner.api.TestSequense) /api/get-token ---------------------------------------------------------------------- Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 54, in test test_runner.run_test(test_dict) httprunner.exceptions.ValidationFailure: validate: content.token equals baNLX1zhFYP11Seb(str) ==> fail tXGuSQgOCVXcltkz(str) equals baNLX1zhFYP11Seb(str) During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 56, in test self.fail(str(ex)) AssertionError: validate: content.token equals baNLX1zhFYP11Seb(str) ==> fail tXGuSQgOCVXcltkz(str) equals baNLX1zhFYP11Seb(str) ====================================================================== FAIL: test_0001_000 (httprunner.api.TestSequense) /api/users/1000 ---------------------------------------------------------------------- Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 54, in test test_runner.run_test(test_dict) httprunner.exceptions.ValidationFailure: validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 56, in test self.fail(str(ex)) AssertionError: validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) ---------------------------------------------------------------------- Ran 2 tests in 0.026s FAILED (failures=2) INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548513835.html \u975e\u5e38\u4e0d\u5e78\uff0c\u4e24\u4e2a\u63a5\u53e3\u7684\u6d4b\u8bd5\u7528\u4f8b\u5747\u8fd0\u884c\u5931\u8d25\u4e86\u3002 \u4f18\u5316\u6d4b\u8bd5\u7528\u4f8b \u00b6 \u4ece\u4e24\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u62a5\u9519\u4fe1\u606f\u548c\u5806\u6808\u4fe1\u606f\uff08Traceback\uff09\u53ef\u4ee5\u770b\u51fa\uff0c\u7b2c\u4e00\u4e2a\u6b65\u9aa4\u5931\u8d25\u7684\u539f\u56e0\u662f\u83b7\u53d6\u7684 token \u4e0e\u9884\u671f\u503c\u4e0d\u4e00\u81f4\uff0c\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u5931\u8d25\u7684\u539f\u56e0\u662f\u8bf7\u6c42\u6743\u9650\u6821\u9a8c\u5931\u8d25\uff08403\uff09\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u9010\u6b65\u8fdb\u884c\u8fdb\u884c\u4f18\u5316\u3002 \u8c03\u6574\u6821\u9a8c\u5668 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c har2case \u751f\u6210\u7528\u4f8b\u65f6\uff0c\u82e5 HTTP \u8bf7\u6c42\u7684\u54cd\u5e94\u5185\u5bb9\u4e3a JSON \u683c\u5f0f\uff0c\u5219\u4f1a\u5c06\u7b2c\u4e00\u5c42\u7ea7\u4e2d\u7684\u6240\u6709 key-value \u8f6c\u6362\u4e3a validator\u3002 \u4f8b\u5982\u4e0a\u9762\u7684\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff0c\u751f\u6210\u7684 validator \u4e3a\uff1a \"validate\" : [ { \"eq\" : [ \"status_code\" , 200 ]}, { \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]}, { \"eq\" : [ \"content.success\" , true ]}, { \"eq\" : [ \"content.token\" , \"baNLX1zhFYP11Seb\" ]} ] \u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u5c31\u4f1a\u5bf9\u4e0a\u9762\u7684\u5404\u4e2a\u9879\u8fdb\u884c\u6821\u9a8c\u3002 \u95ee\u9898\u5728\u4e8e\uff0c\u8bf7\u6c42 /api/get-token \u63a5\u53e3\u65f6\uff0c\u6bcf\u6b21\u751f\u6210\u7684 token \u90fd\u4f1a\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\u5c06\u751f\u6210\u7684 token \u4f5c\u4e3a\u6821\u9a8c\u9879\u7684\u8bdd\uff0c\u6821\u9a8c\u81ea\u7136\u5c31\u65e0\u6cd5\u901a\u8fc7\u4e86\u3002 \u6b63\u786e\u7684\u505a\u6cd5\u662f\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u7684 validate \u4e2d\u5e94\u8be5\u53bb\u6389\u8fd9\u7c7b\u52a8\u6001\u53d8\u5316\u7684\u503c\u3002 \u53bb\u9664\u8be5\u9879\u540e\uff0c\u5c06\u7528\u4f8b\u53e6\u5b58\u4e3a demo-quickstart-1.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-1.yml \uff09\u3002 \u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ hrun docs/data/demo-quickstart-1.yml INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 6.61 ms, response_length: 46 bytes . /api/users/1000 INFO POST http://127.0.0.1:5000/api/users/1000 ERROR 403 Client Error: FORBIDDEN for url: http://127.0.0.1:5000/api/users/1000 ERROR validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) ERROR validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) ERROR validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) ERROR ******************************** DETAILED REQUEST & RESPONSE ******************************** ====== request details ====== url: http://127.0.0.1:5000/api/users/1000 method: POST headers: {'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.18.4', 'device_sn': 'FwgRiO7CNA50DSU', 'token': 'baNLX1zhFYP11Seb'} json: {'name': 'user1', 'password': '123456'} verify: True ====== response details ====== status_code: 403 headers: {'Content-Type': 'application/json', 'Content-Length': '50', 'Server': 'Werkzeug/0.14.1 Python/3.7.0', 'Date': 'Sat, 26 Jan 2019 14:45:34 GMT'} body: '{\"success\": false, \"msg\": \"Authorization failed!\"}' F ====================================================================== FAIL: test_0001_000 (httprunner.api.TestSequense) /api/users/1000 ---------------------------------------------------------------------- Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 54, in test test_runner.run_test(test_dict) httprunner.exceptions.ValidationFailure: validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 56, in test self.fail(str(ex)) AssertionError: validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) ---------------------------------------------------------------------- Ran 2 tests in 0.018s FAILED (failures=1) INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548513934.html \u7ecf\u8fc7\u4fee\u6539\uff0c\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5df2\u7ecf\u8fd0\u884c\u6210\u529f\u4e86\uff0c\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u4ecd\u7136\u8fd0\u884c\u5931\u8d25\uff08403\uff09\uff0c\u8fd8\u662f\u56e0\u4e3a\u6743\u9650\u6821\u9a8c\u7684\u539f\u56e0\u3002 \u53c2\u6570\u5173\u8054 \u00b6 \u6211\u4eec\u7ee7\u7eed\u67e5\u770b demo-quickstart-1.json \uff0c\u4f1a\u53d1\u73b0\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u8bf7\u6c42 headers \u4e2d\u7684 token \u4ecd\u7136\u662f\u786c\u7f16\u7801\u7684\uff0c\u5373\u6293\u5305\u65f6\u83b7\u53d6\u5230\u7684\u503c\u3002\u5728\u6211\u4eec\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u8fd9\u4e2a token \u5df2\u7ecf\u5931\u6548\u4e86\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0 403 \u6743\u9650\u6821\u9a8c\u5931\u8d25\u7684\u95ee\u9898\u3002 \u6b63\u786e\u7684\u505a\u6cd5\u662f\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u6bcf\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u7684\u65f6\u5019\uff0c\u5148\u52a8\u6001\u83b7\u53d6\u5230\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684 token\uff0c\u7136\u540e\u5728\u540e\u7eed\u6d4b\u8bd5\u6b65\u9aa4\u7684\u8bf7\u6c42\u4e2d\u4f7f\u7528\u524d\u9762\u83b7\u53d6\u5230\u7684 token\u3002 \u5728 HttpRunner \u4e2d\uff0c\u652f\u6301\u53c2\u6570\u63d0\u53d6\uff08 extract \uff09\u548c\u53c2\u6570\u5f15\u7528\u7684\u529f\u80fd\uff08 $var \uff09\u3002 \u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09\u4e2d\uff0c\u82e5\u9700\u8981\u4ece\u54cd\u5e94\u7ed3\u679c\u4e2d\u63d0\u53d6\u53c2\u6570\uff0c\u5219\u53ef\u4f7f\u7528 extract \u5173\u952e\u5b57\u3002extract \u7684\u5217\u8868\u4e2d\u53ef\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u9700\u8981\u63d0\u53d6\u7684\u53c2\u6570\u3002 \u5728\u63d0\u53d6\u53c2\u6570\u65f6\uff0c\u5f53 HTTP \u7684\u8bf7\u6c42\u54cd\u5e94\u7ed3\u679c\u4e3a JSON \u683c\u5f0f\uff0c\u5219\u53ef\u4ee5\u91c7\u7528 . \u8fd0\u7b97\u7b26\u7684\u65b9\u5f0f\uff0c\u9010\u7ea7\u5f80\u4e0b\u83b7\u53d6\u5230\u53c2\u6570\u503c\uff1b\u54cd\u5e94\u7ed3\u679c\u7684\u6574\u4f53\u5185\u5bb9\u5f15\u7528\u65b9\u5f0f\u4e3a content \u6216\u8005 body\u3002 \u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u63a5\u53e3 /api/get-token \u7684\u54cd\u5e94\u7ed3\u679c\u4e3a\uff1a { \"success\" : true , \"token\" : \"ZQkYhbaQ6q8UFFNE\" } \u90a3\u4e48\u8981\u83b7\u53d6\u5230 token \u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 content.token \u7684\u65b9\u5f0f\uff1b\u5177\u4f53\u7684\u5199\u6cd5\u5982\u4e0b\uff1a \"extract\" : [ { \"token\" : \"content.token\" } ] \u5176\u4e2d\uff0ctoken \u4f5c\u4e3a\u63d0\u53d6\u540e\u7684\u53c2\u6570\u540d\u79f0\uff0c\u53ef\u4ee5\u5728\u540e\u7eed\u4f7f\u7528 $token \u8fdb\u884c\u5f15\u7528\u3002 \"headers\" : { \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"token\" : \"$token\" , \"Content-Type\" : \"application/json\" } \u4fee\u6539\u540e\u7684\u6d4b\u8bd5\u7528\u4f8b\u53e6\u5b58\u4e3a demo-quickstart-2.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-2.yml \uff09\u3002 \u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ hrun docs/data/demo-quickstart-2.yml INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 8.32 ms, response_length: 46 bytes . /api/users/1000 INFO POST http://127.0.0.1:5000/api/users/1000 INFO status_code: 201, response_time(ms): 3.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.019s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548514191.html \u7ecf\u8fc7\u4fee\u6539\uff0c\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e5f\u8fd0\u884c\u6210\u529f\u4e86\u3002 base_url \u00b6 \u867d\u7136\u6d4b\u8bd5\u6b65\u9aa4\u8fd0\u884c\u90fd\u6210\u529f\u4e86\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u7ee7\u7eed\u4f18\u5316\u7684\u5730\u65b9\u3002 \u7ee7\u7eed\u67e5\u770b demo-quickstart-2.json \uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684 URL \u4e2d\uff0c\u90fd\u91c7\u7528\u7684\u662f\u5b8c\u6574\u7684\u63cf\u8ff0\uff08host+path\uff09\uff0c\u4f46\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u540c\u4e00\u4e2a\u7528\u4f8b\u4e2d\u7684 host \u90fd\u662f\u76f8\u540c\u7684\uff0c\u533a\u522b\u4ec5\u5728\u4e8e path \u90e8\u5206\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09 URL \u7684 base_url \u62bd\u53d6\u51fa\u6765\uff0c\u653e\u5230\u5168\u5c40\u914d\u7f6e\u6a21\u5757\uff08config\uff09\u4e2d\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684 URL \u53ea\u4fdd\u7559 PATH \u90e8\u5206\u3002 - config : name : testcase description base_url : http://127.0.0.1:5000 - test : name : get token request : url : /api/get-token \u8c03\u6574\u540e\u7684\u6d4b\u8bd5\u7528\u4f8b\u53e6\u5b58\u4e3a demo-quickstart-3.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-3.yml \uff09\u3002 \u91cd\u542f flask \u5e94\u7528\u670d\u52a1\u540e\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u6709\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4ecd\u7136\u8fd0\u884c\u6210\u529f\u3002 \u53d8\u91cf\u7684\u7533\u660e\u548c\u5f15\u7528 \u00b6 \u7ee7\u7eed\u67e5\u770b demo-quickstart-3.json \uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b58\u5728\u8f83\u591a\u786c\u7f16\u7801\u7684\u53c2\u6570\uff0c\u4f8b\u5982 app_version\u3001device_sn\u3001os_platform\u3001user_id \u7b49\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539\u8fd9\u4e9b\u786c\u7f16\u7801\u7684\u53c2\u6570\uff0c\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u80fd\u6b63\u5e38\u8fd0\u884c\u3002\u4f46\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u7ef4\u62a4\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f8b\u5982\u540c\u4e00\u4e2a\u53c2\u6570\u503c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u51fa\u73b0\u591a\u6b21\uff0c\u90a3\u4e48\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\uff0c\u5c06\u8fd9\u4e9b\u53c2\u6570\u5b9a\u4e49\u4e3a\u53d8\u91cf\uff0c\u7136\u540e\u5728\u9700\u8981\u53c2\u6570\u7684\u5730\u65b9\u8fdb\u884c\u5f15\u7528\u3002 \u5728 HttpRunner \u4e2d\uff0c\u652f\u6301\u53d8\u91cf\u7533\u660e\uff08 variables \uff09\u548c\u5f15\u7528\uff08 $var \uff09\u7684\u673a\u5236\u3002\u5728 config \u548c test \u4e2d\u5747\u53ef\u4ee5\u901a\u8fc7 variables \u5173\u952e\u5b57\u5b9a\u4e49\u53d8\u91cf\uff0c\u7136\u540e\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u53ef\u4ee5\u901a\u8fc7 $ + \u53d8\u91cf\u540d\u79f0 \u7684\u65b9\u5f0f\u5f15\u7528\u53d8\u91cf\u3002\u533a\u522b\u5728\u4e8e\uff0c\u5728 config \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4e3a\u5168\u5c40\u7684\uff0c\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u7684\u6240\u6709\u5730\u65b9\u5747\u53ef\u4ee5\u5f15\u7528\uff1b\u5728 test \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4f5c\u7528\u57df\u4ec5\u5c40\u9650\u4e8e\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u3002 \u5bf9\u4e0a\u8ff0\u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u786c\u7f16\u7801\u7684\u53c2\u6570\u8fdb\u884c\u53d8\u91cf\u7533\u660e\u548c\u5f15\u7528\u8c03\u6574\u540e\uff0c\u65b0\u7684\u6d4b\u8bd5\u7528\u4f8b\u53e6\u5b58\u4e3a demo-quickstart-4.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-4.yml \uff09\u3002 \u91cd\u542f flask \u5e94\u7528\u670d\u52a1\u540e\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u6709\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4ecd\u7136\u8fd0\u884c\u6210\u529f\u3002 \u62bd\u53d6\u516c\u5171\u53d8\u91cf \u00b6 \u67e5\u770b demo-quickstart-4.json \u53ef\u4ee5\u770b\u51fa\uff0c\u4e24\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u90fd\u5b9a\u4e49\u4e86 device_sn\u3002\u9488\u5bf9\u8fd9\u7c7b\u516c\u5171\u7684\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7edf\u4e00\u5b9a\u4e49\u5728 config \u7684 variables \u4e2d\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5c31\u4e0d\u7528\u518d\u91cd\u590d\u5b9a\u4e49\u3002 - config : name : testcase description base_url : http://127.0.0.1:5000 variables : device_sn : FwgRiO7CNA50DSU \u8c03\u6574\u540e\u7684\u6d4b\u8bd5\u7528\u4f8b\u89c1 demo-quickstart-5.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-5.yml \uff09\u3002 \u5b9e\u73b0\u52a8\u6001\u8fd0\u7b97\u903b\u8f91 \u00b6 \u5728 demo-quickstart-5.yml \u4e2d\uff0c\u53c2\u6570 device_sn \u4ee3\u8868\u7684\u662f\u8bbe\u5907\u7684 SN \u7f16\u7801\uff0c\u867d\u7136\u91c7\u7528\u786c\u7f16\u7801\u7684\u65b9\u5f0f\u6682\u65f6\u4e0d\u5f71\u54cd\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\uff0c\u4f46\u8fd9\u4e0e\u771f\u5b9e\u7684\u7528\u6237\u573a\u666f\u4e0d\u5927\u76f8\u7b26\u3002 \u5047\u8bbe device_sn \u7684\u683c\u5f0f\u4e3a 15 \u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6bcf\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u7684\u65f6\u5019\uff0c\u9488\u5bf9 device_sn \u751f\u6210\u4e00\u4e2a 15 \u4f4d\u957f\u5ea6\u7684\u968f\u673a\u5b57\u7b26\u4e32\u3002\b\u4e0e\u6b64\u540c\u65f6\uff0csign \u5b57\u6bb5\u662f\u6839\u636e headers \u4e2d\u7684\u5404\u4e2a\u5b57\u6bb5\u62fc\u63a5\u540e\u751f\u6210\u5f97\u5230\u7684 MD5 \u503c\uff0c\u56e0\u6b64\u5728 device_sn \u53d8\u52a8\u540e\uff0csign \u4e5f\u5e94\u8be5\u91cd\u65b0\u8fdb\u884c\u8ba1\u7b97\uff0c\u5426\u5219\u5c31\u4f1a\u518d\u6b21\u51fa\u73b0\u7b7e\u540d\u6821\u9a8c\u5931\u8d25\u7684\u95ee\u9898\u3002 \u7136\u800c\uff0cHttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u90fd\u662f\u91c7\u7528 YAML/JSON \u683c\u5f0f\u8fdb\u884c\u63cf\u8ff0\u7684\uff0c\u5728\u6587\u672c\u683c\u5f0f\u4e2d\u5982\u4f55\u6267\u884c\u4ee3\u7801\u8fd0\u7b97\u5462\uff1f HttpRunner \u7684\u5b9e\u73b0\u65b9\u5f0f\u4e3a\uff0c\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u63d2\u4ef6\u673a\u5236\uff08 debugtalk.py \uff09\uff0c\u53ef\u4ee5\u5728 YAML/JSON \u4e2d\u8c03\u7528 Python \u51fd\u6570\u3002 \u5177\u4f53\u5730\u505a\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u540c\u7ea7\u6216\u5176\u7236\u7ea7\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a debugtalk.py \u6587\u4ef6\uff0c\u7136\u540e\u5728\u5176\u4e2d\u5b9a\u4e49\u76f8\u5173\u7684\u51fd\u6570\u548c\u53d8\u91cf\u3002 \u4f8b\u5982\uff0c\u9488\u5bf9 device_sn \u7684\u968f\u673a\u5b57\u7b26\u4e32\u751f\u6210\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a gen_random_string \u51fd\u6570\uff1b\u9488\u5bf9 sign \u7684\u7b7e\u540d\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a get_sign \u51fd\u6570\u3002 import hashlib import hmac import random import string SECRET_KEY = \"DebugTalk\" def gen_random_string ( str_len ): random_char_list = [] for _ in range ( str_len ): random_char = random . choice ( string . ascii_letters + string . digits ) random_char_list . append ( random_char ) random_string = '' . join ( random_char_list ) return random_string def get_sign ( * args ): content = '' . join ( args ) . encode ( 'ascii' ) sign_key = SECRET_KEY . encode ( 'ascii' ) sign = hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () return sign \u7136\u540e\uff0c\u6211\u4eec\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u5bf9\u5b9a\u4e49\u7684\u51fd\u6570\u8fdb\u884c\u8c03\u7528\uff0c\u5bf9\u5b9a\u4e49\u7684\u53d8\u91cf\u8fdb\u884c\u5f15\u7528\u4e86\u3002\u5f15\u7528\u53d8\u91cf\u7684\u65b9\u5f0f\u4ecd\u7136\u4e0e\u524d\u9762\u8bb2\u7684\u4e00\u6837\uff0c\u91c7\u7528 $ + \u53d8\u91cf\u540d\u79f0 \u7684\u65b9\u5f0f\uff1b\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f\u4e3a ${func($var)} \u3002 \u4f8b\u5982\uff0c\u751f\u6210 15 \u4f4d\u957f\u5ea6\u7684\u968f\u673a\u5b57\u7b26\u4e32\u5e76\u8d4b\u503c\u7ed9 device_sn \u7684\u4ee3\u7801\u4e3a\uff1a \"variables\" : [ { \"device_sn\" : \"${gen_random_string(15)}\" } ] \u4f7f\u7528 $user_agent\u3001$device_sn\u3001$os_platform\u3001$app_version \u6839\u636e\u7b7e\u540d\u7b97\u6cd5\u751f\u6210 sign \u503c\u7684\u4ee3\u7801\u4e3a\uff1a \"json\" : { \"sign\" : \"${get_sign($user_agent, $device_sn, $os_platform, $app_version)}\" } \u5bf9\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u4e0a\u8ff0\u8c03\u6574\u540e\uff0c\u53e6\u5b58\u4e3a demo-quickstart-6.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-6.yml \uff09\u3002 \u91cd\u542f flask \u5e94\u7528\u670d\u52a1\u540e\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u6709\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4ecd\u7136\u8fd0\u884c\u6210\u529f\u3002 \u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8 \u00b6 \u8bf7\u786e\u4fdd\u4f60\u4f7f\u7528\u7684 HttpRunner \u7248\u672c\u53f7\u4e0d\u4f4e\u4e8e 2.0.0 \u5728 demo-quickstart-6.yml \u4e2d\uff0cuser_id \u4ecd\u7136\u662f\u5199\u6b7b\u7684\u503c\uff0c\u5047\u5982\u6211\u4eec\u9700\u8981\u521b\u5efa user_id \u4e3a 1001\uff5e1004 \u7684\u7528\u6237\uff0c\u90a3\u6211\u4eec\u53ea\u80fd\u4e0d\u65ad\u5730\u53bb\u4fee\u6539 user_id\uff0c\u7136\u540e\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u91cd\u590d\u64cd\u4f5c 4 \u6b21\uff1f\u6216\u8005\u6211\u4eec\u5728\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u5c06\u521b\u5efa\u7528\u6237\u7684 test \u590d\u5236 4 \u4efd\uff0c\u7136\u540e\u5728\u6bcf\u4e00\u4efd\u91cc\u9762\u5206\u522b\u4f7f\u7528\u4e0d\u540c\u7684 user_id \uff1f \u5f88\u663e\u7136\uff0c\u4e0d\u7ba1\u662f\u91c7\u7528\u4e0a\u8ff0\u54ea\u79cd\u65b9\u5f0f\uff0c\u90fd\u4f1a\u5f88\u7e41\u7410\uff0c\u5e76\u4e14\u4e5f\u65e0\u6cd5\u5e94\u5bf9\u7075\u6d3b\u591a\u53d8\u7684\u6d4b\u8bd5\u9700\u6c42\u3002 \u9488\u5bf9\u8fd9\u7c7b\u9700\u6c42\uff0cHttpRunner \u652f\u6301\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u7684\u529f\u80fd\u3002 \u5728 HttpRunner \u4e2d\uff0c\u82e5\u8981\u91c7\u7528\u6570\u636e\u9a71\u52a8\u7684\u65b9\u5f0f\u6765\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u5f15\u7528\uff0c\u5e76\u4f7f\u7528 parameters \u5173\u952e\u5b57\u5b9a\u4e49\u53c2\u6570\u5e76\u6307\u5b9a\u6570\u636e\u6e90\u53d6\u503c\u65b9\u5f0f\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u9700\u8981\u5728\u521b\u5efa\u7528\u6237\u7684\u63a5\u53e3\u4e2d\u5bf9 user_id \u8fdb\u884c\u53c2\u6570\u5316\uff0c\u53c2\u6570\u5316\u5217\u8868\u4e3a 1001\uff5e1004\uff0c\u5e76\u4e14\u53d6\u503c\u65b9\u5f0f\u4e3a\u987a\u5e8f\u53d6\u503c\uff0c\u90a3\u4e48\u6700\u7b80\u5355\u7684\u63cf\u8ff0\u65b9\u5f0f\u5c31\u662f\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868\u3002\u5177\u4f53\u7684\u7f16\u5199\u65b9\u5f0f\u4e3a\uff0c\u65b0\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u573a\u666f\u6587\u4ef6 demo-quickstart-7.yml \uff08\u5bf9\u5e94\u7684 JSON \u683c\u5f0f\uff1a demo-quickstart-7.json \uff09\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a config : name : testcase description testcases : create user : testcase : demo-quickstart-6.yml parameters : user_id : [ 1001 , 1002 , 1003 , 1004 ] \u4ec5\u9700\u5982\u4e0a\u914d\u7f6e\uff0c\u9488\u5bf9 user_id \u7684\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u5c31\u5b8c\u6210\u4e86\u3002 \u91cd\u542f flask \u5e94\u7528\u670d\u52a1\u540e\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u60c5\u51b5\u5982\u4e0b\u6240\u793a\uff1a \u70b9\u51fb\u67e5\u770b\u8fd0\u884c\u65e5\u5fd7 $ hrun docs/data/demo-quickstart-7.json INFO Start to run testcase: create user 1001 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 8.95 ms, response_length: 46 bytes . /api/users/1001 INFO POST http://127.0.0.1:5000/api/users/1001 INFO status_code: 201, response_time(ms): 3.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.021s OK INFO Start to run testcase: create user 1002 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 2.78 ms, response_length: 46 bytes . /api/users/1002 INFO POST http://127.0.0.1:5000/api/users/1002 INFO status_code: 201, response_time(ms): 2.84 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.007s OK INFO Start to run testcase: create user 1003 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 2.92 ms, response_length: 46 bytes . /api/users/1003 INFO POST http://127.0.0.1:5000/api/users/1003 INFO status_code: 201, response_time(ms): 5.56 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.011s OK INFO Start to run testcase: create user 1004 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 5.25 ms, response_length: 46 bytes . /api/users/1004 INFO POST http://127.0.0.1:5000/api/users/1004 INFO status_code: 201, response_time(ms): 7.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.016s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548518757.html \u53ef\u4ee5\u770b\u51fa\uff0c\u6d4b\u8bd5\u7528\u4f8b\u603b\u5171\u8fd0\u884c\u4e86 4 \u6b21\uff0c\u5e76\u4e14\u6bcf\u6b21\u8fd0\u884c\u65f6\u90fd\u662f\u91c7\u7528\u7684\u4e0d\u540c user_id\u3002 \u5173\u4e8e\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u8fd9\u91cc\u53ea\u63cf\u8ff0\u4e86\u6700\u7b80\u5355\u7684\u573a\u666f\u548c\u4f7f\u7528\u65b9\u5f0f\uff0c\u5982\u9700\u4e86\u89e3\u66f4\u591a\uff0c\u8bf7\u8fdb\u4e00\u6b65\u9605\u8bfb \u300a\u6570\u636e\u9a71\u52a8\u4f7f\u7528\u624b\u518c\u300b \u3002 \u67e5\u770b\u6d4b\u8bd5\u62a5\u544a \u00b6 \u5728\u6bcf\u6b21\u4f7f\u7528 hrun \u547d\u4ee4\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u540e\uff0c\u5747\u4f1a\u751f\u6210\u4e00\u4efd HTML \u683c\u5f0f\u7684\u6d4b\u8bd5\u62a5\u544a\u3002\u62a5\u544a\u6587\u4ef6\u4f4d\u4e8e reports \u76ee\u5f55\u4e0b\uff0c\u6587\u4ef6\u540d\u79f0\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5f00\u59cb\u8fd0\u884c\u65f6\u95f4\u3002 \u4f8b\u5982\uff0c\u5728\u8fd0\u884c\u5b8c demo-quickstart-1.json \u540e\uff0c\u5c06\u751f\u6210\u5982\u4e0b\u5f62\u5f0f\u7684\u6d4b\u8bd5\u62a5\u544a\uff1a \u5173\u4e8e\u6d4b\u8bd5\u62a5\u544a\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b \u300a\u6d4b\u8bd5\u62a5\u544a\u300b \u90e8\u5206\u3002 \u603b\u7ed3 \u00b6 \u5230\u6b64\u4e3a\u6b62\uff0cHttpRunner \u7684\u6838\u5fc3\u529f\u80fd\u5c31\u4ecb\u7ecd\u5b8c\u4e86\uff0c\u638c\u63e1\u672c\u6587\u4e2d\u7684\u529f\u80fd\u7279\u6027\uff0c\u8db3\u4ee5\u5e2e\u52a9\u4f60\u5e94\u5bf9\u65e5\u5e38\u9879\u76ee\u5de5\u4f5c\u4e2d\u81f3\u5c11 80% \u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u9700\u6c42\u3002 \u5f53\u7136\uff0cHttpRunner \u4e0d\u6b62\u4e8e\u6b64\uff0c\u5982\u9700\u6316\u6398 HttpRunner \u7684\u66f4\u591a\u7279\u6027\uff0c\u5b9e\u73b0\u66f4\u590d\u6742\u573a\u666f\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u9700\u6c42\uff0c\u53ef\u7ee7\u7eed\u9605\u8bfb\u540e\u7eed\u6587\u6863\u3002","title":"\u5feb\u901f\u4e0a\u624b\u6848\u4f8b"},{"location":"examples/quickstart-case/#_1","text":"\u672c\u6587\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u5c55\u793a HttpRunner \u7684\u6838\u5fc3\u529f\u80fd\u4f7f\u7528\u65b9\u6cd5\u3002","title":"\u5feb\u901f\u4e0a\u624b\u793a\u4f8b"},{"location":"examples/quickstart-case/#_2","text":"\u8be5\u6848\u4f8b\u4f5c\u4e3a\u88ab\u6d4b\u670d\u52a1\uff0c\u4e3b\u8981\u6709\u4e24\u7c7b\u63a5\u53e3\uff1a \u6743\u9650\u6821\u9a8c\uff0c\u83b7\u53d6 token \u652f\u6301 CRUD \u64cd\u4f5c\u7684 RESTful APIs\uff0c\u6240\u6709\u63a5\u53e3\u7684\u8bf7\u6c42\u5934\u57df\u4e2d\u90fd\u5fc5\u987b\u5305\u542b\u6709\u6548\u7684 token \u6848\u4f8b\u7684\u5b9e\u73b0\u5f62\u5f0f\u4e3a flask \u5e94\u7528\u670d\u52a1\uff08 api_server.py \uff09\uff0c\u542f\u52a8\u65b9\u5f0f\u5982\u4e0b\uff1a $ export FLASK_APP=docs/data/api_server.py $ export FLASK_ENV=development $ flask run * Serving Flask app \"docs/data/api_server.py\" (lazy loading) * Environment: development * Debug mode: on * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit) * Restarting with stat * Debugger is active! * Debugger PIN: 989-476-348 \u670d\u52a1\u542f\u52a8\u6210\u529f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\u4e86\u3002","title":"\u793a\u4f8b\u4ecb\u7ecd"},{"location":"examples/quickstart-case/#_3","text":"","title":"\u6d4b\u8bd5\u51c6\u5907"},{"location":"examples/quickstart-case/#_4","text":"\u5728\u5f00\u59cb\u6d4b\u8bd5\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u63a5\u53e3\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u7ec6\u8282\uff0c\u800c\u6700\u4f73\u7684\u65b9\u5f0f\u5c31\u662f\u91c7\u7528 Charles Proxy \u6216\u8005 Fiddler \u8fd9\u7c7b\u7f51\u7edc\u6293\u5305\u5de5\u5177\u8fdb\u884c\u6293\u5305\u5206\u6790\u3002 \u4f8b\u5982\uff0c\u5728\u672c\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u5148\u8fdb\u884c\u6743\u9650\u6821\u9a8c\uff0c\u7136\u540e\u6210\u529f\u521b\u5efa\u4e00\u4e2a\u7528\u6237\uff0c\u5bf9\u5e94\u7684\u7f51\u7edc\u6293\u5305\u5185\u5bb9\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u901a\u8fc7\u6293\u5305\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5177\u4f53\u7684\u63a5\u53e3\u4fe1\u606f\uff0c\u5305\u62ec\u8bf7\u6c42\u7684URL\u3001Method\u3001headers\u3001\u53c2\u6570\u548c\u54cd\u5e94\u5185\u5bb9\u7b49\u5185\u5bb9\uff0c\u57fa\u4e8e\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u4e86\u3002","title":"\u6293\u5305\u5206\u6790"},{"location":"examples/quickstart-case/#_5","text":"\u4e3a\u4e86\u7b80\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u7f16\u5199\u5de5\u4f5c\uff0cHttpRunner \u5b9e\u73b0\u4e86\u6d4b\u8bd5\u7528\u4f8b\u751f\u6210\u7684\u529f\u80fd\u3002 \u9996\u5148\uff0c\u9700\u8981\u5c06\u6293\u53d6\u5f97\u5230\u7684\u6570\u636e\u5305\u5bfc\u51fa\u4e3a HAR \u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u5047\u8bbe\u5bfc\u51fa\u7684\u6587\u4ef6\u540d\u79f0\u4e3a demo-quickstart.har \u3002 \u7136\u540e\uff0c\u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u4e2d\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u5373\u53ef\u5c06 demo-quickstart.har \u8f6c\u6362\u4e3a HttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 $ har2case docs/data/demo-quickstart.har -2y INFO:root:Start to generate testcase. INFO:root:dump testcase to YAML format. INFO:root:Generate YAML testcase successfully: docs/data/demo-quickstart.yml \u4f7f\u7528 har2case \u8f6c\u6362\u811a\u672c\u65f6\u9ed8\u8ba4\u8f6c\u6362\u4e3a JSON \u683c\u5f0f\uff0c\u52a0\u4e0a -2y \u53c2\u6570\u540e\u8f6c\u6362\u4e3a YAML \u683c\u5f0f\u3002\u4e24\u79cd\u683c\u5f0f\u5b8c\u5168\u7b49\u4ef7\uff0cYAML \u683c\u5f0f\u66f4\u7b80\u6d01\uff0cJSON \u683c\u5f0f\u652f\u6301\u7684\u5de5\u5177\u66f4\u4e30\u5bcc\uff0c\u5927\u5bb6\u53ef\u6839\u636e\u4e2a\u4eba\u559c\u597d\u8fdb\u884c\u9009\u62e9\u3002\u5173\u4e8e har2case \u7684\u8be6\u7ec6\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b \u300a\u5f55\u5236\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u300b \u3002 \u7ecf\u8fc7\u8f6c\u6362\uff0c\u5728\u6e90 demo-quickstart.har \u6587\u4ef6\u7684\u540c\u7ea7\u76ee\u5f55\u4e0b\u751f\u6210\u4e86\u76f8\u540c\u6587\u4ef6\u540d\u79f0\u7684 YAML \u683c\u5f0f\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6 demo-quickstart.yml \uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a - config : name : testcase description variables : {} - test : name : /api/get-token request : headers : Content-Type : application/json User-Agent : python-requests/2.18.4 app_version : 2.8.6 device_sn : FwgRiO7CNA50DSU os_platform : ios json : sign : 9c0c7e51c91ae963c833a4ccbab8d683c4a90c98 method : POST url : http://127.0.0.1:5000/api/get-token validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , application/json ] - eq : [ content.success , true ] - eq : [ content.token , baNLX1zhFYP11Seb ] - test : name : /api/users/1000 request : headers : Content-Type : application/json User-Agent : python-requests/2.18.4 device_sn : FwgRiO7CNA50DSU token : baNLX1zhFYP11Seb json : name : user1 password : '123456' method : POST url : http://127.0.0.1:5000/api/users/1000 validate : - eq : [ status_code , 201 ] - eq : [ headers.Content-Type , application/json ] - eq : [ content.success , true ] - eq : [ content.msg , user created successfully. ] \u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5982\u4e0b\u51e0\u70b9\uff1a \u6bcf\u4e2a YAML/JSON \u6587\u4ef6\u5bf9\u5e94\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09 \u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e3a\u4e00\u4e2a list of dict \u7ed3\u6784\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u5168\u5c40\u914d\u7f6e\u9879\uff08config\uff09\u548c\u82e5\u5e72\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09 config \u4e3a\u5168\u5c40\u914d\u7f6e\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b test \u5bf9\u5e94\u5355\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff0c\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u672c\u8eab \u5982\u4e0a\u4fbf\u662f HttpRunner \u6d4b\u8bd5\u7528\u4f8b\u7684\u57fa\u672c\u7ed3\u6784\u3002 \u5173\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u7684\u66f4\u591a\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b \u300a\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784\u63cf\u8ff0\u300b \u3002","title":"\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b"},{"location":"examples/quickstart-case/#_6","text":"\u6d4b\u8bd5\u7528\u4f8b\u5c31\u7eea\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u8c03\u8bd5\u8fd0\u884c\u4e86\u3002 \u4e3a\u4e86\u6f14\u793a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8fed\u4ee3\u4f18\u5316\u8fc7\u7a0b\uff0c\u6211\u4eec\u5148\u5c06 demo-quickstart.json \u91cd\u547d\u540d\u4e3a demo-quickstart-0.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-0.yml \uff09\u3002 \u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u7684\u547d\u4ee4\u4e3a hrun \uff0c\u540e\u9762\u76f4\u63a5\u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8def\u5f84\u5373\u53ef\u3002 $ hrun docs/data/demo-quickstart-0.yml INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 9.26 ms, response_length: 46 bytes ERROR validate: content.token equals baNLX1zhFYP11Seb(str) ==> fail tXGuSQgOCVXcltkz(str) equals baNLX1zhFYP11Seb(str) ERROR ******************************** DETAILED REQUEST & RESPONSE ******************************** ====== request details ====== url: http://127.0.0.1:5000/api/get-token method: POST headers: {'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.18.4', 'app_version': '2.8.6', 'device_sn': 'FwgRiO7CNA50DSU', 'os_platform': 'ios'} json: {'sign': '9c0c7e51c91ae963c833a4ccbab8d683c4a90c98'} verify: True ====== response details ====== status_code: 200 headers: {'Content-Type': 'application/json', 'Content-Length': '46', 'Server': 'Werkzeug/0.14.1 Python/3.7.0', 'Date': 'Sat, 26 Jan 2019 14:43:55 GMT'} body: '{\"success\": true, \"token\": \"tXGuSQgOCVXcltkz\"}' F /api/users/1000 INFO POST http://127.0.0.1:5000/api/users/1000 ERROR 403 Client Error: FORBIDDEN for url: http://127.0.0.1:5000/api/users/1000 ERROR validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) ERROR validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) ERROR validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) ERROR ******************************** DETAILED REQUEST & RESPONSE ******************************** ====== request details ====== url: http://127.0.0.1:5000/api/users/1000 method: POST headers: {'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.18.4', 'device_sn': 'FwgRiO7CNA50DSU', 'token': 'baNLX1zhFYP11Seb'} json: {'name': 'user1', 'password': '123456'} verify: True ====== response details ====== status_code: 403 headers: {'Content-Type': 'application/json', 'Content-Length': '50', 'Server': 'Werkzeug/0.14.1 Python/3.7.0', 'Date': 'Sat, 26 Jan 2019 14:43:55 GMT'} body: '{\"success\": false, \"msg\": \"Authorization failed!\"}' F ====================================================================== FAIL: test_0000_000 (httprunner.api.TestSequense) /api/get-token ---------------------------------------------------------------------- Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 54, in test test_runner.run_test(test_dict) httprunner.exceptions.ValidationFailure: validate: content.token equals baNLX1zhFYP11Seb(str) ==> fail tXGuSQgOCVXcltkz(str) equals baNLX1zhFYP11Seb(str) During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 56, in test self.fail(str(ex)) AssertionError: validate: content.token equals baNLX1zhFYP11Seb(str) ==> fail tXGuSQgOCVXcltkz(str) equals baNLX1zhFYP11Seb(str) ====================================================================== FAIL: test_0001_000 (httprunner.api.TestSequense) /api/users/1000 ---------------------------------------------------------------------- Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 54, in test test_runner.run_test(test_dict) httprunner.exceptions.ValidationFailure: validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 56, in test self.fail(str(ex)) AssertionError: validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) ---------------------------------------------------------------------- Ran 2 tests in 0.026s FAILED (failures=2) INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548513835.html \u975e\u5e38\u4e0d\u5e78\uff0c\u4e24\u4e2a\u63a5\u53e3\u7684\u6d4b\u8bd5\u7528\u4f8b\u5747\u8fd0\u884c\u5931\u8d25\u4e86\u3002","title":"\u9996\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b"},{"location":"examples/quickstart-case/#_7","text":"\u4ece\u4e24\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u62a5\u9519\u4fe1\u606f\u548c\u5806\u6808\u4fe1\u606f\uff08Traceback\uff09\u53ef\u4ee5\u770b\u51fa\uff0c\u7b2c\u4e00\u4e2a\u6b65\u9aa4\u5931\u8d25\u7684\u539f\u56e0\u662f\u83b7\u53d6\u7684 token \u4e0e\u9884\u671f\u503c\u4e0d\u4e00\u81f4\uff0c\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u5931\u8d25\u7684\u539f\u56e0\u662f\u8bf7\u6c42\u6743\u9650\u6821\u9a8c\u5931\u8d25\uff08403\uff09\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u9010\u6b65\u8fdb\u884c\u8fdb\u884c\u4f18\u5316\u3002","title":"\u4f18\u5316\u6d4b\u8bd5\u7528\u4f8b"},{"location":"examples/quickstart-case/#_8","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c har2case \u751f\u6210\u7528\u4f8b\u65f6\uff0c\u82e5 HTTP \u8bf7\u6c42\u7684\u54cd\u5e94\u5185\u5bb9\u4e3a JSON \u683c\u5f0f\uff0c\u5219\u4f1a\u5c06\u7b2c\u4e00\u5c42\u7ea7\u4e2d\u7684\u6240\u6709 key-value \u8f6c\u6362\u4e3a validator\u3002 \u4f8b\u5982\u4e0a\u9762\u7684\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff0c\u751f\u6210\u7684 validator \u4e3a\uff1a \"validate\" : [ { \"eq\" : [ \"status_code\" , 200 ]}, { \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]}, { \"eq\" : [ \"content.success\" , true ]}, { \"eq\" : [ \"content.token\" , \"baNLX1zhFYP11Seb\" ]} ] \u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u5c31\u4f1a\u5bf9\u4e0a\u9762\u7684\u5404\u4e2a\u9879\u8fdb\u884c\u6821\u9a8c\u3002 \u95ee\u9898\u5728\u4e8e\uff0c\u8bf7\u6c42 /api/get-token \u63a5\u53e3\u65f6\uff0c\u6bcf\u6b21\u751f\u6210\u7684 token \u90fd\u4f1a\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\u5c06\u751f\u6210\u7684 token \u4f5c\u4e3a\u6821\u9a8c\u9879\u7684\u8bdd\uff0c\u6821\u9a8c\u81ea\u7136\u5c31\u65e0\u6cd5\u901a\u8fc7\u4e86\u3002 \u6b63\u786e\u7684\u505a\u6cd5\u662f\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u7684 validate \u4e2d\u5e94\u8be5\u53bb\u6389\u8fd9\u7c7b\u52a8\u6001\u53d8\u5316\u7684\u503c\u3002 \u53bb\u9664\u8be5\u9879\u540e\uff0c\u5c06\u7528\u4f8b\u53e6\u5b58\u4e3a demo-quickstart-1.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-1.yml \uff09\u3002 \u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ hrun docs/data/demo-quickstart-1.yml INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 6.61 ms, response_length: 46 bytes . /api/users/1000 INFO POST http://127.0.0.1:5000/api/users/1000 ERROR 403 Client Error: FORBIDDEN for url: http://127.0.0.1:5000/api/users/1000 ERROR validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) ERROR validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) ERROR validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) ERROR ******************************** DETAILED REQUEST & RESPONSE ******************************** ====== request details ====== url: http://127.0.0.1:5000/api/users/1000 method: POST headers: {'Content-Type': 'application/json', 'User-Agent': 'python-requests/2.18.4', 'device_sn': 'FwgRiO7CNA50DSU', 'token': 'baNLX1zhFYP11Seb'} json: {'name': 'user1', 'password': '123456'} verify: True ====== response details ====== status_code: 403 headers: {'Content-Type': 'application/json', 'Content-Length': '50', 'Server': 'Werkzeug/0.14.1 Python/3.7.0', 'Date': 'Sat, 26 Jan 2019 14:45:34 GMT'} body: '{\"success\": false, \"msg\": \"Authorization failed!\"}' F ====================================================================== FAIL: test_0001_000 (httprunner.api.TestSequense) /api/users/1000 ---------------------------------------------------------------------- Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 54, in test test_runner.run_test(test_dict) httprunner.exceptions.ValidationFailure: validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"/Users/debugtalk/.pyenv/versions/3.6-dev/lib/python3.6/site-packages/httprunner/api.py\", line 56, in test self.fail(str(ex)) AssertionError: validate: status_code equals 201(int) ==> fail 403(int) equals 201(int) validate: content.success equals True(bool) ==> fail False(bool) equals True(bool) validate: content.msg equals user created successfully.(str) ==> fail Authorization failed!(str) equals user created successfully.(str) ---------------------------------------------------------------------- Ran 2 tests in 0.018s FAILED (failures=1) INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548513934.html \u7ecf\u8fc7\u4fee\u6539\uff0c\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5df2\u7ecf\u8fd0\u884c\u6210\u529f\u4e86\uff0c\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u4ecd\u7136\u8fd0\u884c\u5931\u8d25\uff08403\uff09\uff0c\u8fd8\u662f\u56e0\u4e3a\u6743\u9650\u6821\u9a8c\u7684\u539f\u56e0\u3002","title":"\u8c03\u6574\u6821\u9a8c\u5668"},{"location":"examples/quickstart-case/#_9","text":"\u6211\u4eec\u7ee7\u7eed\u67e5\u770b demo-quickstart-1.json \uff0c\u4f1a\u53d1\u73b0\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u8bf7\u6c42 headers \u4e2d\u7684 token \u4ecd\u7136\u662f\u786c\u7f16\u7801\u7684\uff0c\u5373\u6293\u5305\u65f6\u83b7\u53d6\u5230\u7684\u503c\u3002\u5728\u6211\u4eec\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u8fd9\u4e2a token \u5df2\u7ecf\u5931\u6548\u4e86\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0 403 \u6743\u9650\u6821\u9a8c\u5931\u8d25\u7684\u95ee\u9898\u3002 \u6b63\u786e\u7684\u505a\u6cd5\u662f\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u6bcf\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u7684\u65f6\u5019\uff0c\u5148\u52a8\u6001\u83b7\u53d6\u5230\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684 token\uff0c\u7136\u540e\u5728\u540e\u7eed\u6d4b\u8bd5\u6b65\u9aa4\u7684\u8bf7\u6c42\u4e2d\u4f7f\u7528\u524d\u9762\u83b7\u53d6\u5230\u7684 token\u3002 \u5728 HttpRunner \u4e2d\uff0c\u652f\u6301\u53c2\u6570\u63d0\u53d6\uff08 extract \uff09\u548c\u53c2\u6570\u5f15\u7528\u7684\u529f\u80fd\uff08 $var \uff09\u3002 \u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09\u4e2d\uff0c\u82e5\u9700\u8981\u4ece\u54cd\u5e94\u7ed3\u679c\u4e2d\u63d0\u53d6\u53c2\u6570\uff0c\u5219\u53ef\u4f7f\u7528 extract \u5173\u952e\u5b57\u3002extract \u7684\u5217\u8868\u4e2d\u53ef\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u9700\u8981\u63d0\u53d6\u7684\u53c2\u6570\u3002 \u5728\u63d0\u53d6\u53c2\u6570\u65f6\uff0c\u5f53 HTTP \u7684\u8bf7\u6c42\u54cd\u5e94\u7ed3\u679c\u4e3a JSON \u683c\u5f0f\uff0c\u5219\u53ef\u4ee5\u91c7\u7528 . \u8fd0\u7b97\u7b26\u7684\u65b9\u5f0f\uff0c\u9010\u7ea7\u5f80\u4e0b\u83b7\u53d6\u5230\u53c2\u6570\u503c\uff1b\u54cd\u5e94\u7ed3\u679c\u7684\u6574\u4f53\u5185\u5bb9\u5f15\u7528\u65b9\u5f0f\u4e3a content \u6216\u8005 body\u3002 \u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u63a5\u53e3 /api/get-token \u7684\u54cd\u5e94\u7ed3\u679c\u4e3a\uff1a { \"success\" : true , \"token\" : \"ZQkYhbaQ6q8UFFNE\" } \u90a3\u4e48\u8981\u83b7\u53d6\u5230 token \u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 content.token \u7684\u65b9\u5f0f\uff1b\u5177\u4f53\u7684\u5199\u6cd5\u5982\u4e0b\uff1a \"extract\" : [ { \"token\" : \"content.token\" } ] \u5176\u4e2d\uff0ctoken \u4f5c\u4e3a\u63d0\u53d6\u540e\u7684\u53c2\u6570\u540d\u79f0\uff0c\u53ef\u4ee5\u5728\u540e\u7eed\u4f7f\u7528 $token \u8fdb\u884c\u5f15\u7528\u3002 \"headers\" : { \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"token\" : \"$token\" , \"Content-Type\" : \"application/json\" } \u4fee\u6539\u540e\u7684\u6d4b\u8bd5\u7528\u4f8b\u53e6\u5b58\u4e3a demo-quickstart-2.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-2.yml \uff09\u3002 \u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ hrun docs/data/demo-quickstart-2.yml INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 8.32 ms, response_length: 46 bytes . /api/users/1000 INFO POST http://127.0.0.1:5000/api/users/1000 INFO status_code: 201, response_time(ms): 3.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.019s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548514191.html \u7ecf\u8fc7\u4fee\u6539\uff0c\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e5f\u8fd0\u884c\u6210\u529f\u4e86\u3002","title":"\u53c2\u6570\u5173\u8054"},{"location":"examples/quickstart-case/#base_url","text":"\u867d\u7136\u6d4b\u8bd5\u6b65\u9aa4\u8fd0\u884c\u90fd\u6210\u529f\u4e86\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u7ee7\u7eed\u4f18\u5316\u7684\u5730\u65b9\u3002 \u7ee7\u7eed\u67e5\u770b demo-quickstart-2.json \uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684 URL \u4e2d\uff0c\u90fd\u91c7\u7528\u7684\u662f\u5b8c\u6574\u7684\u63cf\u8ff0\uff08host+path\uff09\uff0c\u4f46\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u540c\u4e00\u4e2a\u7528\u4f8b\u4e2d\u7684 host \u90fd\u662f\u76f8\u540c\u7684\uff0c\u533a\u522b\u4ec5\u5728\u4e8e path \u90e8\u5206\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09 URL \u7684 base_url \u62bd\u53d6\u51fa\u6765\uff0c\u653e\u5230\u5168\u5c40\u914d\u7f6e\u6a21\u5757\uff08config\uff09\u4e2d\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684 URL \u53ea\u4fdd\u7559 PATH \u90e8\u5206\u3002 - config : name : testcase description base_url : http://127.0.0.1:5000 - test : name : get token request : url : /api/get-token \u8c03\u6574\u540e\u7684\u6d4b\u8bd5\u7528\u4f8b\u53e6\u5b58\u4e3a demo-quickstart-3.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-3.yml \uff09\u3002 \u91cd\u542f flask \u5e94\u7528\u670d\u52a1\u540e\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u6709\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4ecd\u7136\u8fd0\u884c\u6210\u529f\u3002","title":"base_url"},{"location":"examples/quickstart-case/#_10","text":"\u7ee7\u7eed\u67e5\u770b demo-quickstart-3.json \uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b58\u5728\u8f83\u591a\u786c\u7f16\u7801\u7684\u53c2\u6570\uff0c\u4f8b\u5982 app_version\u3001device_sn\u3001os_platform\u3001user_id \u7b49\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539\u8fd9\u4e9b\u786c\u7f16\u7801\u7684\u53c2\u6570\uff0c\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u80fd\u6b63\u5e38\u8fd0\u884c\u3002\u4f46\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u7ef4\u62a4\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f8b\u5982\u540c\u4e00\u4e2a\u53c2\u6570\u503c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u51fa\u73b0\u591a\u6b21\uff0c\u90a3\u4e48\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\uff0c\u5c06\u8fd9\u4e9b\u53c2\u6570\u5b9a\u4e49\u4e3a\u53d8\u91cf\uff0c\u7136\u540e\u5728\u9700\u8981\u53c2\u6570\u7684\u5730\u65b9\u8fdb\u884c\u5f15\u7528\u3002 \u5728 HttpRunner \u4e2d\uff0c\u652f\u6301\u53d8\u91cf\u7533\u660e\uff08 variables \uff09\u548c\u5f15\u7528\uff08 $var \uff09\u7684\u673a\u5236\u3002\u5728 config \u548c test \u4e2d\u5747\u53ef\u4ee5\u901a\u8fc7 variables \u5173\u952e\u5b57\u5b9a\u4e49\u53d8\u91cf\uff0c\u7136\u540e\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u53ef\u4ee5\u901a\u8fc7 $ + \u53d8\u91cf\u540d\u79f0 \u7684\u65b9\u5f0f\u5f15\u7528\u53d8\u91cf\u3002\u533a\u522b\u5728\u4e8e\uff0c\u5728 config \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4e3a\u5168\u5c40\u7684\uff0c\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u7684\u6240\u6709\u5730\u65b9\u5747\u53ef\u4ee5\u5f15\u7528\uff1b\u5728 test \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4f5c\u7528\u57df\u4ec5\u5c40\u9650\u4e8e\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u3002 \u5bf9\u4e0a\u8ff0\u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u786c\u7f16\u7801\u7684\u53c2\u6570\u8fdb\u884c\u53d8\u91cf\u7533\u660e\u548c\u5f15\u7528\u8c03\u6574\u540e\uff0c\u65b0\u7684\u6d4b\u8bd5\u7528\u4f8b\u53e6\u5b58\u4e3a demo-quickstart-4.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-4.yml \uff09\u3002 \u91cd\u542f flask \u5e94\u7528\u670d\u52a1\u540e\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u6709\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4ecd\u7136\u8fd0\u884c\u6210\u529f\u3002","title":"\u53d8\u91cf\u7684\u7533\u660e\u548c\u5f15\u7528"},{"location":"examples/quickstart-case/#_11","text":"\u67e5\u770b demo-quickstart-4.json \u53ef\u4ee5\u770b\u51fa\uff0c\u4e24\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u90fd\u5b9a\u4e49\u4e86 device_sn\u3002\u9488\u5bf9\u8fd9\u7c7b\u516c\u5171\u7684\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7edf\u4e00\u5b9a\u4e49\u5728 config \u7684 variables \u4e2d\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5c31\u4e0d\u7528\u518d\u91cd\u590d\u5b9a\u4e49\u3002 - config : name : testcase description base_url : http://127.0.0.1:5000 variables : device_sn : FwgRiO7CNA50DSU \u8c03\u6574\u540e\u7684\u6d4b\u8bd5\u7528\u4f8b\u89c1 demo-quickstart-5.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-5.yml \uff09\u3002","title":"\u62bd\u53d6\u516c\u5171\u53d8\u91cf"},{"location":"examples/quickstart-case/#_12","text":"\u5728 demo-quickstart-5.yml \u4e2d\uff0c\u53c2\u6570 device_sn \u4ee3\u8868\u7684\u662f\u8bbe\u5907\u7684 SN \u7f16\u7801\uff0c\u867d\u7136\u91c7\u7528\u786c\u7f16\u7801\u7684\u65b9\u5f0f\u6682\u65f6\u4e0d\u5f71\u54cd\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\uff0c\u4f46\u8fd9\u4e0e\u771f\u5b9e\u7684\u7528\u6237\u573a\u666f\u4e0d\u5927\u76f8\u7b26\u3002 \u5047\u8bbe device_sn \u7684\u683c\u5f0f\u4e3a 15 \u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6bcf\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u7684\u65f6\u5019\uff0c\u9488\u5bf9 device_sn \u751f\u6210\u4e00\u4e2a 15 \u4f4d\u957f\u5ea6\u7684\u968f\u673a\u5b57\u7b26\u4e32\u3002\b\u4e0e\u6b64\u540c\u65f6\uff0csign \u5b57\u6bb5\u662f\u6839\u636e headers \u4e2d\u7684\u5404\u4e2a\u5b57\u6bb5\u62fc\u63a5\u540e\u751f\u6210\u5f97\u5230\u7684 MD5 \u503c\uff0c\u56e0\u6b64\u5728 device_sn \u53d8\u52a8\u540e\uff0csign \u4e5f\u5e94\u8be5\u91cd\u65b0\u8fdb\u884c\u8ba1\u7b97\uff0c\u5426\u5219\u5c31\u4f1a\u518d\u6b21\u51fa\u73b0\u7b7e\u540d\u6821\u9a8c\u5931\u8d25\u7684\u95ee\u9898\u3002 \u7136\u800c\uff0cHttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u90fd\u662f\u91c7\u7528 YAML/JSON \u683c\u5f0f\u8fdb\u884c\u63cf\u8ff0\u7684\uff0c\u5728\u6587\u672c\u683c\u5f0f\u4e2d\u5982\u4f55\u6267\u884c\u4ee3\u7801\u8fd0\u7b97\u5462\uff1f HttpRunner \u7684\u5b9e\u73b0\u65b9\u5f0f\u4e3a\uff0c\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u63d2\u4ef6\u673a\u5236\uff08 debugtalk.py \uff09\uff0c\u53ef\u4ee5\u5728 YAML/JSON \u4e2d\u8c03\u7528 Python \u51fd\u6570\u3002 \u5177\u4f53\u5730\u505a\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u540c\u7ea7\u6216\u5176\u7236\u7ea7\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a debugtalk.py \u6587\u4ef6\uff0c\u7136\u540e\u5728\u5176\u4e2d\u5b9a\u4e49\u76f8\u5173\u7684\u51fd\u6570\u548c\u53d8\u91cf\u3002 \u4f8b\u5982\uff0c\u9488\u5bf9 device_sn \u7684\u968f\u673a\u5b57\u7b26\u4e32\u751f\u6210\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a gen_random_string \u51fd\u6570\uff1b\u9488\u5bf9 sign \u7684\u7b7e\u540d\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a get_sign \u51fd\u6570\u3002 import hashlib import hmac import random import string SECRET_KEY = \"DebugTalk\" def gen_random_string ( str_len ): random_char_list = [] for _ in range ( str_len ): random_char = random . choice ( string . ascii_letters + string . digits ) random_char_list . append ( random_char ) random_string = '' . join ( random_char_list ) return random_string def get_sign ( * args ): content = '' . join ( args ) . encode ( 'ascii' ) sign_key = SECRET_KEY . encode ( 'ascii' ) sign = hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () return sign \u7136\u540e\uff0c\u6211\u4eec\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u5bf9\u5b9a\u4e49\u7684\u51fd\u6570\u8fdb\u884c\u8c03\u7528\uff0c\u5bf9\u5b9a\u4e49\u7684\u53d8\u91cf\u8fdb\u884c\u5f15\u7528\u4e86\u3002\u5f15\u7528\u53d8\u91cf\u7684\u65b9\u5f0f\u4ecd\u7136\u4e0e\u524d\u9762\u8bb2\u7684\u4e00\u6837\uff0c\u91c7\u7528 $ + \u53d8\u91cf\u540d\u79f0 \u7684\u65b9\u5f0f\uff1b\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f\u4e3a ${func($var)} \u3002 \u4f8b\u5982\uff0c\u751f\u6210 15 \u4f4d\u957f\u5ea6\u7684\u968f\u673a\u5b57\u7b26\u4e32\u5e76\u8d4b\u503c\u7ed9 device_sn \u7684\u4ee3\u7801\u4e3a\uff1a \"variables\" : [ { \"device_sn\" : \"${gen_random_string(15)}\" } ] \u4f7f\u7528 $user_agent\u3001$device_sn\u3001$os_platform\u3001$app_version \u6839\u636e\u7b7e\u540d\u7b97\u6cd5\u751f\u6210 sign \u503c\u7684\u4ee3\u7801\u4e3a\uff1a \"json\" : { \"sign\" : \"${get_sign($user_agent, $device_sn, $os_platform, $app_version)}\" } \u5bf9\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u4e0a\u8ff0\u8c03\u6574\u540e\uff0c\u53e6\u5b58\u4e3a demo-quickstart-6.json \uff08\u5bf9\u5e94\u7684 YAML \u683c\u5f0f\uff1a demo-quickstart-6.yml \uff09\u3002 \u91cd\u542f flask \u5e94\u7528\u670d\u52a1\u540e\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u6709\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4ecd\u7136\u8fd0\u884c\u6210\u529f\u3002","title":"\u5b9e\u73b0\u52a8\u6001\u8fd0\u7b97\u903b\u8f91"},{"location":"examples/quickstart-case/#_13","text":"\u8bf7\u786e\u4fdd\u4f60\u4f7f\u7528\u7684 HttpRunner \u7248\u672c\u53f7\u4e0d\u4f4e\u4e8e 2.0.0 \u5728 demo-quickstart-6.yml \u4e2d\uff0cuser_id \u4ecd\u7136\u662f\u5199\u6b7b\u7684\u503c\uff0c\u5047\u5982\u6211\u4eec\u9700\u8981\u521b\u5efa user_id \u4e3a 1001\uff5e1004 \u7684\u7528\u6237\uff0c\u90a3\u6211\u4eec\u53ea\u80fd\u4e0d\u65ad\u5730\u53bb\u4fee\u6539 user_id\uff0c\u7136\u540e\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u91cd\u590d\u64cd\u4f5c 4 \u6b21\uff1f\u6216\u8005\u6211\u4eec\u5728\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u5c06\u521b\u5efa\u7528\u6237\u7684 test \u590d\u5236 4 \u4efd\uff0c\u7136\u540e\u5728\u6bcf\u4e00\u4efd\u91cc\u9762\u5206\u522b\u4f7f\u7528\u4e0d\u540c\u7684 user_id \uff1f \u5f88\u663e\u7136\uff0c\u4e0d\u7ba1\u662f\u91c7\u7528\u4e0a\u8ff0\u54ea\u79cd\u65b9\u5f0f\uff0c\u90fd\u4f1a\u5f88\u7e41\u7410\uff0c\u5e76\u4e14\u4e5f\u65e0\u6cd5\u5e94\u5bf9\u7075\u6d3b\u591a\u53d8\u7684\u6d4b\u8bd5\u9700\u6c42\u3002 \u9488\u5bf9\u8fd9\u7c7b\u9700\u6c42\uff0cHttpRunner \u652f\u6301\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u7684\u529f\u80fd\u3002 \u5728 HttpRunner \u4e2d\uff0c\u82e5\u8981\u91c7\u7528\u6570\u636e\u9a71\u52a8\u7684\u65b9\u5f0f\u6765\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u5f15\u7528\uff0c\u5e76\u4f7f\u7528 parameters \u5173\u952e\u5b57\u5b9a\u4e49\u53c2\u6570\u5e76\u6307\u5b9a\u6570\u636e\u6e90\u53d6\u503c\u65b9\u5f0f\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u9700\u8981\u5728\u521b\u5efa\u7528\u6237\u7684\u63a5\u53e3\u4e2d\u5bf9 user_id \u8fdb\u884c\u53c2\u6570\u5316\uff0c\u53c2\u6570\u5316\u5217\u8868\u4e3a 1001\uff5e1004\uff0c\u5e76\u4e14\u53d6\u503c\u65b9\u5f0f\u4e3a\u987a\u5e8f\u53d6\u503c\uff0c\u90a3\u4e48\u6700\u7b80\u5355\u7684\u63cf\u8ff0\u65b9\u5f0f\u5c31\u662f\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868\u3002\u5177\u4f53\u7684\u7f16\u5199\u65b9\u5f0f\u4e3a\uff0c\u65b0\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u573a\u666f\u6587\u4ef6 demo-quickstart-7.yml \uff08\u5bf9\u5e94\u7684 JSON \u683c\u5f0f\uff1a demo-quickstart-7.json \uff09\uff0c\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a config : name : testcase description testcases : create user : testcase : demo-quickstart-6.yml parameters : user_id : [ 1001 , 1002 , 1003 , 1004 ] \u4ec5\u9700\u5982\u4e0a\u914d\u7f6e\uff0c\u9488\u5bf9 user_id \u7684\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u5c31\u5b8c\u6210\u4e86\u3002 \u91cd\u542f flask \u5e94\u7528\u670d\u52a1\u540e\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u60c5\u51b5\u5982\u4e0b\u6240\u793a\uff1a \u70b9\u51fb\u67e5\u770b\u8fd0\u884c\u65e5\u5fd7 $ hrun docs/data/demo-quickstart-7.json INFO Start to run testcase: create user 1001 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 8.95 ms, response_length: 46 bytes . /api/users/1001 INFO POST http://127.0.0.1:5000/api/users/1001 INFO status_code: 201, response_time(ms): 3.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.021s OK INFO Start to run testcase: create user 1002 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 2.78 ms, response_length: 46 bytes . /api/users/1002 INFO POST http://127.0.0.1:5000/api/users/1002 INFO status_code: 201, response_time(ms): 2.84 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.007s OK INFO Start to run testcase: create user 1003 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 2.92 ms, response_length: 46 bytes . /api/users/1003 INFO POST http://127.0.0.1:5000/api/users/1003 INFO status_code: 201, response_time(ms): 5.56 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.011s OK INFO Start to run testcase: create user 1004 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 5.25 ms, response_length: 46 bytes . /api/users/1004 INFO POST http://127.0.0.1:5000/api/users/1004 INFO status_code: 201, response_time(ms): 7.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.016s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548518757.html \u53ef\u4ee5\u770b\u51fa\uff0c\u6d4b\u8bd5\u7528\u4f8b\u603b\u5171\u8fd0\u884c\u4e86 4 \u6b21\uff0c\u5e76\u4e14\u6bcf\u6b21\u8fd0\u884c\u65f6\u90fd\u662f\u91c7\u7528\u7684\u4e0d\u540c user_id\u3002 \u5173\u4e8e\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u8fd9\u91cc\u53ea\u63cf\u8ff0\u4e86\u6700\u7b80\u5355\u7684\u573a\u666f\u548c\u4f7f\u7528\u65b9\u5f0f\uff0c\u5982\u9700\u4e86\u89e3\u66f4\u591a\uff0c\u8bf7\u8fdb\u4e00\u6b65\u9605\u8bfb \u300a\u6570\u636e\u9a71\u52a8\u4f7f\u7528\u624b\u518c\u300b \u3002","title":"\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8"},{"location":"examples/quickstart-case/#_14","text":"\u5728\u6bcf\u6b21\u4f7f\u7528 hrun \u547d\u4ee4\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u540e\uff0c\u5747\u4f1a\u751f\u6210\u4e00\u4efd HTML \u683c\u5f0f\u7684\u6d4b\u8bd5\u62a5\u544a\u3002\u62a5\u544a\u6587\u4ef6\u4f4d\u4e8e reports \u76ee\u5f55\u4e0b\uff0c\u6587\u4ef6\u540d\u79f0\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5f00\u59cb\u8fd0\u884c\u65f6\u95f4\u3002 \u4f8b\u5982\uff0c\u5728\u8fd0\u884c\u5b8c demo-quickstart-1.json \u540e\uff0c\u5c06\u751f\u6210\u5982\u4e0b\u5f62\u5f0f\u7684\u6d4b\u8bd5\u62a5\u544a\uff1a \u5173\u4e8e\u6d4b\u8bd5\u62a5\u544a\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b \u300a\u6d4b\u8bd5\u62a5\u544a\u300b \u90e8\u5206\u3002","title":"\u67e5\u770b\u6d4b\u8bd5\u62a5\u544a"},{"location":"examples/quickstart-case/#_15","text":"\u5230\u6b64\u4e3a\u6b62\uff0cHttpRunner \u7684\u6838\u5fc3\u529f\u80fd\u5c31\u4ecb\u7ecd\u5b8c\u4e86\uff0c\u638c\u63e1\u672c\u6587\u4e2d\u7684\u529f\u80fd\u7279\u6027\uff0c\u8db3\u4ee5\u5e2e\u52a9\u4f60\u5e94\u5bf9\u65e5\u5e38\u9879\u76ee\u5de5\u4f5c\u4e2d\u81f3\u5c11 80% \u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u9700\u6c42\u3002 \u5f53\u7136\uff0cHttpRunner \u4e0d\u6b62\u4e8e\u6b64\uff0c\u5982\u9700\u6316\u6398 HttpRunner \u7684\u66f4\u591a\u7279\u6027\uff0c\u5b9e\u73b0\u66f4\u590d\u6742\u573a\u666f\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u9700\u6c42\uff0c\u53ef\u7ee7\u7eed\u9605\u8bfb\u540e\u7eed\u6587\u6863\u3002","title":"\u603b\u7ed3"},{"location":"examples/testerhome-login/","text":"TesterHome \u767b\u5f55 \u00b6 \u6848\u4f8b\u4ecb\u7ecd \u00b6 \u901a\u8fc7\u63a5\u53e3\u81ea\u52a8\u5316\u5b9e\u73b0 TesterHome \u7684\u767b\u5f55\u9000\u51fa\u529f\u80fd\u3002 \u529f\u80fd\u63cf\u8ff0\uff1a \u8fdb\u5165 \u767b\u5f55\u9875\u9762 \u8f93\u5165\u8d26\u53f7\u548c\u5bc6\u7801 \u70b9\u51fb\u3010Sign In\u3011\u8fdb\u884c\u767b\u5f55 \u51c6\u5907\u5de5\u4f5c \u00b6 \u6293\u5305\u751f\u6210 HAR \u6587\u4ef6 \u00b6 \u5728\u6d4f\u89c8\u5668\u4e2d\u4eba\u5de5\u8fdb\u884c\u767b\u5f55\u64cd\u4f5c\uff0c\u540c\u65f6\u4f7f\u7528\u6293\u5305\u5de5\u5177\u8fdb\u884c\u6293\u5305\u3002\u6293\u5305\u65f6\u5efa\u8bae\u4f7f\u7528\u8fc7\u6ee4\u5668\uff08Filter\uff09\uff0c\u5e38\u7528\u7684\u505a\u6cd5\u662f\u91c7\u7528\u88ab\u6d4b\u7cfb\u7edf\u7684 host\uff0c\u5c06\u65e0\u5173\u8bf7\u6c42\u8fc7\u6ee4\u6389\u3002 \u9009\u62e9\u9700\u8981\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bf7\u6c42\uff0c\u5bfc\u51fa\u4e3a HTTP Archive (.har) \u683c\u5f0f\u7684\u6587\u4ef6\u3002 \u8f6c\u6362\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b \u00b6 \u6210\u529f\u5b89\u88c5 HttpRunner \u540e\uff0c\u7cfb\u7edf\u4e2d\u4f1a\u65b0\u589e har2case \u547d\u4ee4\uff0c\u4f7f\u7528\u8be5\u547d\u4ee4\u53ef\u5c06 HAR \u6570\u636e\u5305\u8f6c\u6362\u4e3a HttpRunner \u652f\u6301\u7684 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 $ har2case docs/data/testerhome-login.har -2y INFO:root:Start to generate testcase. INFO:root:dump testcase to YAML format. INFO:root:Generate YAML testcase successfully: docs/data/testerhome-login.yml \u751f\u6210\u7684\u6d4b\u8bd5\u7528\u4f8b\u5185\u5bb9\u5982\u4e0b\uff1a \u70b9\u51fb\u67e5\u770b - config : name : testcase description variables : {} - test : name : /account/sign_in request : headers : If-None-Match : W/\"bc9ae267fdcbd89bf1dfaea10dea2b0e\" User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 method : GET url : https://testerhome.com/account/sign_in validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ] - test : name : /assets/big_logo-cd32144f74c18746f3dce33e1040e7dfe4c07c8e611e37f3868b1c16b5095da3.png request : headers : User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 method : GET url : https://testerhome.com/assets/big_logo-cd32144f74c18746f3dce33e1040e7dfe4c07c8e611e37f3868b1c16b5095da3.png validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , image/png ] - test : name : /account/sign_in request : data : commit : Sign In user[login] : debugtalk user[password] : XXXXXXXX user[remember_me] : '1' utf8 : \u2713 headers : Content-Type : application/x-www-form-urlencoded; charset=UTF-8 User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 X-CSRF-Token : 0zAKFDDPnNI2+Vwq/iwDPR9vo7KWobfNLAye4EaGBTlsSxMzTNf39lLF9z35f5mcROM7JgOP+azBCuDe84G+XA== X-Requested-With : XMLHttpRequest method : POST url : https://testerhome.com/account/sign_in validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/javascript; charset=utf-8 ] - test : name : / request : headers : If-None-Match : W/\"bad62c68dac27b01151516aad5c7f0be\" Turbolinks-Referrer : https://testerhome.com/account/sign_in User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 method : GET url : https://testerhome.com/ validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ] \u9996\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b \u00b6 \u6210\u529f\u5b89\u88c5 HttpRunner \u540e\uff0c\u7cfb\u7edf\u4e2d\u4f1a\u65b0\u589e hrun \u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u662f HttpRunner \u7684\u6838\u5fc3\u547d\u4ee4\uff0c\u7528\u4e8e\u8fd0\u884c HttpRunner \u652f\u6301\u7684 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 \u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c1d\u8bd5\u8fd0\u884c\u4e00\u6b21\uff0c\u5927\u591a\u6570\u60c5\u51b5\uff0c\u5982\u679c\u88ab\u6d4b\u573a\u666f\u4e2d\u4e0d\u5b58\u5728\u5173\u8054\u7684\u60c5\u51b5\uff0c\u662f\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u6210\u529f\u7684\u3002 $ hrun docs/data/testerhome-login.yml --failfast --log-level info INFO Start to run testcase: testcase description /account/sign_in INFO GET https://testerhome.com/account/sign_in INFO status_code: 200 , response_time ( ms ) : 189 .66 ms, response_length: 12584 bytes . /assets/big_logo-cd32144f74c18746f3dce33e1040e7dfe4c07c8e611e37f3868b1c16b5095da3.png INFO GET https://testerhome.com/assets/big_logo-cd32144f74c18746f3dce33e1040e7dfe4c07c8e611e37f3868b1c16b5095da3.png INFO status_code: 200 , response_time ( ms ) : 83 .98 ms, response_length: 15229 bytes . /account/sign_in INFO POST https://testerhome.com/account/sign_in INFO status_code: 200 , response_time ( ms ) : 172 .8 ms, response_length: 89 bytes . / INFO GET https://testerhome.com/ INFO status_code: 200 , response_time ( ms ) : 257 .41 ms, response_length: 52463 bytes . ---------------------------------------------------------------------- Ran 4 tests in 0 .722s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1555662601.html \u6bd4\u8f83\u5e78\u8fd0\uff0c\u811a\u672c\u5728\u6ca1\u6709\u505a\u4efb\u4f55\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u6210\u529f\u4e86\u3002 \u8c03\u8bd5 & \u4f18\u5316\u6d4b\u8bd5\u7528\u4f8b \u00b6 \u867d\u7136\u811a\u672c\u8fd0\u884c\u6210\u529f\u4e86\uff0c\u4f46\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u7ba1\u7406\u548c\u7ef4\u62a4\u811a\u672c\uff0c\u9700\u8981\u5bf9\u811a\u672c\u8fdb\u884c\u4f18\u5316\u8c03\u6574\u3002 \u5173\u8054\u5904\u7406 \u00b6 \u67e5\u770b\u5f55\u5236\u751f\u6210\u7684\u811a\u672c\uff0c\u53ef\u4ee5\u770b\u5230\u5728\u53d1\u8d77\u767b\u5f55\u8bf7\u6c42\u65f6\u5305\u542b\u4e86 X-CSRF-Token \uff0c\u5982\u679c\u719f\u6089\u7f51\u7edc\u4fe1\u606f\u5b89\u5168\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5c31\u4f1a\u8054\u60f3\u5230\u8be5\u5b57\u6bb5\u662f\u52a8\u6001\u53d8\u5316\u7684\uff0c\u6bcf\u6b21\u90fd\u662f\u5148\u4ece\u670d\u52a1\u5668\u7aef\u8fd4\u56de\u81f3\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u5728\u540e\u7eed\u53d1\u8d77\u8bf7\u6c42\u65f6\u9700\u8981\u643a\u5e26\u8be5\u5b57\u6bb5\u3002 - test : name : /account/sign_in request : data : commit : Sign In user[login] : debugtalk user[password] : XXXXXXXX user[remember_me] : '1' utf8 : \u2713 headers : Content-Type : application/x-www-form-urlencoded; charset=UTF-8 User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 X-CSRF-Token : 0zAKFDDPnNI2+Vwq/iwDPR9vo7KWobfNLAye4EaGBTlsSxMzTNf39lLF9z35f5mcROM7JgOP+azBCuDe84G+XA== X-Requested-With : XMLHttpRequest method : POST url : https://testerhome.com/account/sign_in validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ] \u867d\u7136\u5f53\u524d\u76f4\u63a5\u8fd0\u884c\u5f55\u5236\u751f\u6210\u7684\u811a\u672c\u4e5f\u662f\u6210\u529f\u7684\uff0c\u4f46\u5f88\u6709\u53ef\u80fd\u5728\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c X-CSRF-Token \u5931\u6548\uff0c\u811a\u672c\u4e5f\u5c31\u65e0\u6cd5\u518d\u6210\u529f\u8fd0\u884c\u4e86\u3002\u56e0\u6b64\u5728\u6d4b\u8bd5\u811a\u672c\u4e2d\uff0c\u8be5\u5b57\u6bb5\u4e0d\u80fd\u5199\u6b7b\u4e3a\u6293\u5305\u65f6\u83b7\u53d6\u7684\u503c\uff0c\u800c\u662f\u8981\u6bcf\u6b21\u52a8\u6001\u5730\u4ece\u524d\u9762\u7684\u63a5\u53e3\u54cd\u5e94\u4e2d\u83b7\u53d6\u3002 \u90a3\u8981\u600e\u4e48\u786e\u5b9a\u8be5\u5b57\u6bb5\u662f\u5728\u4e4b\u524d\u7684\u54ea\u4e2a\u63a5\u53e3\u4e2d\u8fd4\u56de\u7684\u5462\uff1f \u64cd\u4f5c\u65b9\u5f0f\u4e5f\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u5728\u6293\u5305\u5de5\u5177\u4e2d\u5bf9\u8be5\u5b57\u6bb5\u8fdb\u884c\u641c\u7d22\uff0c\u7279\u522b\u5730\uff0c\u641c\u7d22\u8303\u56f4\u9650\u5b9a\u4e3a\u54cd\u5e94\u5185\u5bb9\uff08Response Header\u3001Response Body\uff09\u3002 \u5373\u53ef\u641c\u7d22\u5f97\u5230\u8be5\u5b57\u6bb5\u662f\u5728\u54ea\u4e2a\u63a5\u53e3\u4e2d\u4ece\u670d\u52a1\u5668\u7aef\u8fd4\u56de\u503c\u5ba2\u6237\u7aef\u7684\u3002 \u6709\u65f6\u5019\u53ef\u80fd\u641c\u7d22\u4f1a\u5f97\u5230\u591a\u4e2a\u7ed3\u679c\uff0c\u90a3\u4e48\u5728\u786e\u5b9a\u662f\u4f7f\u7528\u54ea\u4e2a\u63a5\u53e3\u54cd\u5e94\u7684\u65f6\u5019\uff0c\u9075\u5faa\u4e24\u4e2a\u539f\u5219\u5373\u53ef\uff1a \u54cd\u5e94\u4e00\u5b9a\u662f\u51fa\u73b0\u5728\u5f53\u524d\u63a5\u53e3\u4e4b\u524d \u5982\u679c\u5728\u5f53\u524d\u63a5\u53e3\u4e4b\u524d\u5b58\u5728\u591a\u4e2a\u63a5\u53e3\u5747\u6709\u6b64\u8fd4\u56de\uff0c\u90a3\u4e48\u53d6\u6700\u9760\u8fd1\u5f53\u524d\u63a5\u53e3\u7684\u5373\u53ef \u901a\u8fc7\u524d\u9762\u7684\u641c\u7d22\u53ef\u77e5\uff0c X-CSRF-Token \u7684\u503c\u662f\u5728\u7b2c\u4e00\u4e2a\u63a5\u53e3\u4e2d\u54cd\u5e94\u8fd4\u56de\u7684\u3002 \u786e\u5b9a\u51fa\u5177\u4f53\u7684\u63a5\u53e3\u540e\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u6d4b\u8bd5\u811a\u672c\u4e2d\u4ece\u8be5\u63a5\u53e3\u4f7f\u7528 extract \u63d0\u53d6\u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u7136\u540e\u5728\u540e\u7eed\u63a5\u53e3\u4e2d\u5f15\u7528\u63d0\u53d6\u51fa\u7684\u5b57\u6bb5\u3002 \u5728\u5f53\u524d\u6848\u4f8b\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u63a5\u53e3\u7684\u54cd\u5e94\u5185\u5bb9\u4e3a HTML \u9875\u9762\uff0c\u8981\u63d0\u53d6\u5b57\u6bb5\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u5339\u914d\u7684\u65b9\u5f0f\u3002\u5177\u4f53\u7684\u505a\u6cd5\u5c31\u662f\u6307\u5b9a\u76ee\u6807\u5b57\u6bb5\u7684\u5de6\u53f3\u8fb9\u754c\uff0c\u76ee\u6807\u5b57\u6bb5\u4f7f\u7528 (.*) \u5339\u914d\u83b7\u53d6\u3002 - test : name : /account/sign_in request : headers : If-None-Match : W/\"bc9ae267fdcbd89bf1dfaea10dea2b0e\" User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 method : GET url : https://testerhome.com/account/sign_in extract : X_CSRF_Token : <meta name=\"csrf-token\" content=\"(.*)\" /> validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ] \u7136\u540e\uff0c\u5728\u540e\u7eed\u4f7f\u7528\u5230\u8be5\u5b57\u6bb5\u7684\u63a5\u53e3\u4e2d\uff0c\u5f15\u7528\u63d0\u53d6\u51fa\u7684\u5b57\u6bb5\u5373\u53ef\u3002 - test : name : /account/sign_in request : data : commit : Sign In user[login] : debugtalk user[password] : XXXXXXXX user[remember_me] : '1' utf8 : \u2713 headers : Content-Type : application/x-www-form-urlencoded; charset=UTF-8 User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 X-CSRF-Token : $X_CSRF_Token X-Requested-With : XMLHttpRequest method : POST url : https://testerhome.com/account/sign_in validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ]","title":"TesterHome \u767b\u5f55"},{"location":"examples/testerhome-login/#testerhome","text":"","title":"TesterHome \u767b\u5f55"},{"location":"examples/testerhome-login/#_1","text":"\u901a\u8fc7\u63a5\u53e3\u81ea\u52a8\u5316\u5b9e\u73b0 TesterHome \u7684\u767b\u5f55\u9000\u51fa\u529f\u80fd\u3002 \u529f\u80fd\u63cf\u8ff0\uff1a \u8fdb\u5165 \u767b\u5f55\u9875\u9762 \u8f93\u5165\u8d26\u53f7\u548c\u5bc6\u7801 \u70b9\u51fb\u3010Sign In\u3011\u8fdb\u884c\u767b\u5f55","title":"\u6848\u4f8b\u4ecb\u7ecd"},{"location":"examples/testerhome-login/#_2","text":"","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"examples/testerhome-login/#har","text":"\u5728\u6d4f\u89c8\u5668\u4e2d\u4eba\u5de5\u8fdb\u884c\u767b\u5f55\u64cd\u4f5c\uff0c\u540c\u65f6\u4f7f\u7528\u6293\u5305\u5de5\u5177\u8fdb\u884c\u6293\u5305\u3002\u6293\u5305\u65f6\u5efa\u8bae\u4f7f\u7528\u8fc7\u6ee4\u5668\uff08Filter\uff09\uff0c\u5e38\u7528\u7684\u505a\u6cd5\u662f\u91c7\u7528\u88ab\u6d4b\u7cfb\u7edf\u7684 host\uff0c\u5c06\u65e0\u5173\u8bf7\u6c42\u8fc7\u6ee4\u6389\u3002 \u9009\u62e9\u9700\u8981\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u7684\u8bf7\u6c42\uff0c\u5bfc\u51fa\u4e3a HTTP Archive (.har) \u683c\u5f0f\u7684\u6587\u4ef6\u3002","title":"\u6293\u5305\u751f\u6210 HAR \u6587\u4ef6"},{"location":"examples/testerhome-login/#_3","text":"\u6210\u529f\u5b89\u88c5 HttpRunner \u540e\uff0c\u7cfb\u7edf\u4e2d\u4f1a\u65b0\u589e har2case \u547d\u4ee4\uff0c\u4f7f\u7528\u8be5\u547d\u4ee4\u53ef\u5c06 HAR \u6570\u636e\u5305\u8f6c\u6362\u4e3a HttpRunner \u652f\u6301\u7684 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 $ har2case docs/data/testerhome-login.har -2y INFO:root:Start to generate testcase. INFO:root:dump testcase to YAML format. INFO:root:Generate YAML testcase successfully: docs/data/testerhome-login.yml \u751f\u6210\u7684\u6d4b\u8bd5\u7528\u4f8b\u5185\u5bb9\u5982\u4e0b\uff1a \u70b9\u51fb\u67e5\u770b - config : name : testcase description variables : {} - test : name : /account/sign_in request : headers : If-None-Match : W/\"bc9ae267fdcbd89bf1dfaea10dea2b0e\" User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 method : GET url : https://testerhome.com/account/sign_in validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ] - test : name : /assets/big_logo-cd32144f74c18746f3dce33e1040e7dfe4c07c8e611e37f3868b1c16b5095da3.png request : headers : User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 method : GET url : https://testerhome.com/assets/big_logo-cd32144f74c18746f3dce33e1040e7dfe4c07c8e611e37f3868b1c16b5095da3.png validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , image/png ] - test : name : /account/sign_in request : data : commit : Sign In user[login] : debugtalk user[password] : XXXXXXXX user[remember_me] : '1' utf8 : \u2713 headers : Content-Type : application/x-www-form-urlencoded; charset=UTF-8 User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 X-CSRF-Token : 0zAKFDDPnNI2+Vwq/iwDPR9vo7KWobfNLAye4EaGBTlsSxMzTNf39lLF9z35f5mcROM7JgOP+azBCuDe84G+XA== X-Requested-With : XMLHttpRequest method : POST url : https://testerhome.com/account/sign_in validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/javascript; charset=utf-8 ] - test : name : / request : headers : If-None-Match : W/\"bad62c68dac27b01151516aad5c7f0be\" Turbolinks-Referrer : https://testerhome.com/account/sign_in User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 method : GET url : https://testerhome.com/ validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ]","title":"\u8f6c\u6362\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b"},{"location":"examples/testerhome-login/#_4","text":"\u6210\u529f\u5b89\u88c5 HttpRunner \u540e\uff0c\u7cfb\u7edf\u4e2d\u4f1a\u65b0\u589e hrun \u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u662f HttpRunner \u7684\u6838\u5fc3\u547d\u4ee4\uff0c\u7528\u4e8e\u8fd0\u884c HttpRunner \u652f\u6301\u7684 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 \u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c1d\u8bd5\u8fd0\u884c\u4e00\u6b21\uff0c\u5927\u591a\u6570\u60c5\u51b5\uff0c\u5982\u679c\u88ab\u6d4b\u573a\u666f\u4e2d\u4e0d\u5b58\u5728\u5173\u8054\u7684\u60c5\u51b5\uff0c\u662f\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u6210\u529f\u7684\u3002 $ hrun docs/data/testerhome-login.yml --failfast --log-level info INFO Start to run testcase: testcase description /account/sign_in INFO GET https://testerhome.com/account/sign_in INFO status_code: 200 , response_time ( ms ) : 189 .66 ms, response_length: 12584 bytes . /assets/big_logo-cd32144f74c18746f3dce33e1040e7dfe4c07c8e611e37f3868b1c16b5095da3.png INFO GET https://testerhome.com/assets/big_logo-cd32144f74c18746f3dce33e1040e7dfe4c07c8e611e37f3868b1c16b5095da3.png INFO status_code: 200 , response_time ( ms ) : 83 .98 ms, response_length: 15229 bytes . /account/sign_in INFO POST https://testerhome.com/account/sign_in INFO status_code: 200 , response_time ( ms ) : 172 .8 ms, response_length: 89 bytes . / INFO GET https://testerhome.com/ INFO status_code: 200 , response_time ( ms ) : 257 .41 ms, response_length: 52463 bytes . ---------------------------------------------------------------------- Ran 4 tests in 0 .722s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1555662601.html \u6bd4\u8f83\u5e78\u8fd0\uff0c\u811a\u672c\u5728\u6ca1\u6709\u505a\u4efb\u4f55\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u6210\u529f\u4e86\u3002","title":"\u9996\u6b21\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b"},{"location":"examples/testerhome-login/#_5","text":"\u867d\u7136\u811a\u672c\u8fd0\u884c\u6210\u529f\u4e86\uff0c\u4f46\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u7ba1\u7406\u548c\u7ef4\u62a4\u811a\u672c\uff0c\u9700\u8981\u5bf9\u811a\u672c\u8fdb\u884c\u4f18\u5316\u8c03\u6574\u3002","title":"\u8c03\u8bd5 &amp; \u4f18\u5316\u6d4b\u8bd5\u7528\u4f8b"},{"location":"examples/testerhome-login/#_6","text":"\u67e5\u770b\u5f55\u5236\u751f\u6210\u7684\u811a\u672c\uff0c\u53ef\u4ee5\u770b\u5230\u5728\u53d1\u8d77\u767b\u5f55\u8bf7\u6c42\u65f6\u5305\u542b\u4e86 X-CSRF-Token \uff0c\u5982\u679c\u719f\u6089\u7f51\u7edc\u4fe1\u606f\u5b89\u5168\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5c31\u4f1a\u8054\u60f3\u5230\u8be5\u5b57\u6bb5\u662f\u52a8\u6001\u53d8\u5316\u7684\uff0c\u6bcf\u6b21\u90fd\u662f\u5148\u4ece\u670d\u52a1\u5668\u7aef\u8fd4\u56de\u81f3\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u5728\u540e\u7eed\u53d1\u8d77\u8bf7\u6c42\u65f6\u9700\u8981\u643a\u5e26\u8be5\u5b57\u6bb5\u3002 - test : name : /account/sign_in request : data : commit : Sign In user[login] : debugtalk user[password] : XXXXXXXX user[remember_me] : '1' utf8 : \u2713 headers : Content-Type : application/x-www-form-urlencoded; charset=UTF-8 User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 X-CSRF-Token : 0zAKFDDPnNI2+Vwq/iwDPR9vo7KWobfNLAye4EaGBTlsSxMzTNf39lLF9z35f5mcROM7JgOP+azBCuDe84G+XA== X-Requested-With : XMLHttpRequest method : POST url : https://testerhome.com/account/sign_in validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ] \u867d\u7136\u5f53\u524d\u76f4\u63a5\u8fd0\u884c\u5f55\u5236\u751f\u6210\u7684\u811a\u672c\u4e5f\u662f\u6210\u529f\u7684\uff0c\u4f46\u5f88\u6709\u53ef\u80fd\u5728\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c X-CSRF-Token \u5931\u6548\uff0c\u811a\u672c\u4e5f\u5c31\u65e0\u6cd5\u518d\u6210\u529f\u8fd0\u884c\u4e86\u3002\u56e0\u6b64\u5728\u6d4b\u8bd5\u811a\u672c\u4e2d\uff0c\u8be5\u5b57\u6bb5\u4e0d\u80fd\u5199\u6b7b\u4e3a\u6293\u5305\u65f6\u83b7\u53d6\u7684\u503c\uff0c\u800c\u662f\u8981\u6bcf\u6b21\u52a8\u6001\u5730\u4ece\u524d\u9762\u7684\u63a5\u53e3\u54cd\u5e94\u4e2d\u83b7\u53d6\u3002 \u90a3\u8981\u600e\u4e48\u786e\u5b9a\u8be5\u5b57\u6bb5\u662f\u5728\u4e4b\u524d\u7684\u54ea\u4e2a\u63a5\u53e3\u4e2d\u8fd4\u56de\u7684\u5462\uff1f \u64cd\u4f5c\u65b9\u5f0f\u4e5f\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u5728\u6293\u5305\u5de5\u5177\u4e2d\u5bf9\u8be5\u5b57\u6bb5\u8fdb\u884c\u641c\u7d22\uff0c\u7279\u522b\u5730\uff0c\u641c\u7d22\u8303\u56f4\u9650\u5b9a\u4e3a\u54cd\u5e94\u5185\u5bb9\uff08Response Header\u3001Response Body\uff09\u3002 \u5373\u53ef\u641c\u7d22\u5f97\u5230\u8be5\u5b57\u6bb5\u662f\u5728\u54ea\u4e2a\u63a5\u53e3\u4e2d\u4ece\u670d\u52a1\u5668\u7aef\u8fd4\u56de\u503c\u5ba2\u6237\u7aef\u7684\u3002 \u6709\u65f6\u5019\u53ef\u80fd\u641c\u7d22\u4f1a\u5f97\u5230\u591a\u4e2a\u7ed3\u679c\uff0c\u90a3\u4e48\u5728\u786e\u5b9a\u662f\u4f7f\u7528\u54ea\u4e2a\u63a5\u53e3\u54cd\u5e94\u7684\u65f6\u5019\uff0c\u9075\u5faa\u4e24\u4e2a\u539f\u5219\u5373\u53ef\uff1a \u54cd\u5e94\u4e00\u5b9a\u662f\u51fa\u73b0\u5728\u5f53\u524d\u63a5\u53e3\u4e4b\u524d \u5982\u679c\u5728\u5f53\u524d\u63a5\u53e3\u4e4b\u524d\u5b58\u5728\u591a\u4e2a\u63a5\u53e3\u5747\u6709\u6b64\u8fd4\u56de\uff0c\u90a3\u4e48\u53d6\u6700\u9760\u8fd1\u5f53\u524d\u63a5\u53e3\u7684\u5373\u53ef \u901a\u8fc7\u524d\u9762\u7684\u641c\u7d22\u53ef\u77e5\uff0c X-CSRF-Token \u7684\u503c\u662f\u5728\u7b2c\u4e00\u4e2a\u63a5\u53e3\u4e2d\u54cd\u5e94\u8fd4\u56de\u7684\u3002 \u786e\u5b9a\u51fa\u5177\u4f53\u7684\u63a5\u53e3\u540e\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u6d4b\u8bd5\u811a\u672c\u4e2d\u4ece\u8be5\u63a5\u53e3\u4f7f\u7528 extract \u63d0\u53d6\u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u7136\u540e\u5728\u540e\u7eed\u63a5\u53e3\u4e2d\u5f15\u7528\u63d0\u53d6\u51fa\u7684\u5b57\u6bb5\u3002 \u5728\u5f53\u524d\u6848\u4f8b\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u63a5\u53e3\u7684\u54cd\u5e94\u5185\u5bb9\u4e3a HTML \u9875\u9762\uff0c\u8981\u63d0\u53d6\u5b57\u6bb5\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u5339\u914d\u7684\u65b9\u5f0f\u3002\u5177\u4f53\u7684\u505a\u6cd5\u5c31\u662f\u6307\u5b9a\u76ee\u6807\u5b57\u6bb5\u7684\u5de6\u53f3\u8fb9\u754c\uff0c\u76ee\u6807\u5b57\u6bb5\u4f7f\u7528 (.*) \u5339\u914d\u83b7\u53d6\u3002 - test : name : /account/sign_in request : headers : If-None-Match : W/\"bc9ae267fdcbd89bf1dfaea10dea2b0e\" User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 method : GET url : https://testerhome.com/account/sign_in extract : X_CSRF_Token : <meta name=\"csrf-token\" content=\"(.*)\" /> validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ] \u7136\u540e\uff0c\u5728\u540e\u7eed\u4f7f\u7528\u5230\u8be5\u5b57\u6bb5\u7684\u63a5\u53e3\u4e2d\uff0c\u5f15\u7528\u63d0\u53d6\u51fa\u7684\u5b57\u6bb5\u5373\u53ef\u3002 - test : name : /account/sign_in request : data : commit : Sign In user[login] : debugtalk user[password] : XXXXXXXX user[remember_me] : '1' utf8 : \u2713 headers : Content-Type : application/x-www-form-urlencoded; charset=UTF-8 User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 X-CSRF-Token : $X_CSRF_Token X-Requested-With : XMLHttpRequest method : POST url : https://testerhome.com/account/sign_in validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , text/html; charset=utf-8 ]","title":"\u5173\u8054\u5904\u7406"},{"location":"examples/demo-klook/","text":"klook \u00b6 \u6848\u4f8b\u4ecb\u7ecd \u00b6 \u88ab\u6d4b\u6848\u4f8b\uff1a klook \u6848\u4f8b\u4f5c\u8005\uff1a readyou \u6211\u4eec\u56e2\u961f\u9009\u62e9\u4e86 HttpRunner \u4f5c\u4e3a\u63a5\u53e3\u6d4b\u8bd5\u6846\u67b6\uff0c\u5e76\u6574\u7406\u4e86\u4e00\u4efd\u6848\u4f8b\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002 \u6ce8\u610f\u4e8b\u9879 \u00b6 \u672c\u4f8b\u5b50\u4e2d\u6709\u4e9b\u5730\u65b9\u7528\u5230\u4e86 localhost:8085 \u4f5c\u4e3abase_url\uff0c\u8fd9\u4e9b\u63a5\u53e3\u662f\u4e0d\u80fd\u8bbf\u95ee\u7684\uff0c\u4ec5\u4f5c\u4e3a\u793a\u4f8b\u5b66\u4e60\u600e\u6837\u7ec4\u7ec7\u6d4b\u8bd5\u7528\u4f8b\u3002 https://maps.googleapis.com \u662f\u53ef\u4ee5\u7528\u7684\uff0c\u81ea\u5df1\u7533\u8bf7\u4e00\u4e2akey\uff0c\u66ff\u6362\u6389\u6587\u4ef6\u4e2d\u7684 your_google_map_key \u5373\u53ef\u3002 \u76f8\u5173\u6587\u4ef6\u8bf4\u660e \u00b6 \u6a21\u5757 \u6587\u4ef6 \u7528\u9014 \u5907\u6ce8 google map \u63a5\u53e3\u6d4b\u8bd5 api/find_place_api.yml google map\u6839\u636e\u540d\u79f0\u641c\u7d22\u5730\u5740\u7684api \u6bd4\u8f83\u5168\u9762\u5730\u4f7f\u7528\u4e86api\b\u53ef\u4ee5\u4f7f\u7528\u7684\u5173\u952e\u5b57\uff1aname, base_url, request, variables, validate, extract google map \u63a5\u53e3\u6d4b\u8bd5 testcases/find_place_testcase.yml google map\u6839\u636e\u540d\u79f0\u641c\u7d22\u5730\u5740\u7684testcase \u4f7f\u7528\u4e86testcase\u6807\u51c6\u7684\u5199\u6cd5\uff1atestcase\u7531teststep\u7ec4\u6210\uff0cteststep\u4e2d\u5f15\u7528api(just_request_testcase.yml\u4e2d\u6f14\u793a\u4e86\u76f4\u63a5\u4f7f\u7528request\u800c\u4e0d\u662f\u5f15\u7528api\u7684\u65b9\u5f0f)\u3002teststep\u4e2d\u8fd8\u4f7f\u7528\u4e86variables\u3002 google map \u63a5\u53e3\u6d4b\u8bd5 testcases/place_detail_testcase.yml google map\u83b7\u53d6\u5730\u5740\u8be6\u60c5\u7684testcase config\u4e2d\u4f7f\u7528variables google map \u63a5\u53e3\u6d4b\u8bd5 testsuites/place_detail_testsuite.yml google map\u63a5\u53e3\u6d4b\u8bd5\u7684testsuite\u5305\u542b\u4e0a\u9762\u4e24\u4e2atestcase \u4f7f\u7528\u4e86\u591a\u79cd\u65b9\u5f0f\u6765\u505a\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5 klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/search_area_by_name_api.yml \u6839\u636e\u540d\u5b57\u67e5\u8be2\u533a\u57df\uff08\u652f\u6301\u591a\u8bed\u8a00\uff09\u2014\u2014api klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/search_area_by_name_testcase.yml \u6839\u636e\u540d\u5b57\u67e5\u8be2\u533a\u57df\uff08\u652f\u6301\u591a\u8bed\u8a00\uff09\u2014\u2014testcase klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/get_area_groups_api.yml \u67e5\u8be2\u5730\u7406\u4f4d\u7f6e\u4e0b\u9762\u7684\u7ec4\u2014\u2014api klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/get_area_groups_testcase.yml \u67e5\u8be2\u5730\u7406\u4f4d\u7f6e\u4e0b\u9762\u7684\u7ec4\u2014\u2014testcase klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/area_manage_testsuite.yml \u533a\u57df\u7ba1\u7406\u2014\u2014testsuite baidu\u9996\u9875demo testcases/just_request_testcase.yml \u63d0\u53d6\u767e\u5ea6\u9996\u9875title\u7684demo \u6f14\u793a\u4e86\u76f4\u63a5\u4f7f\u7528request\u800c\u4e0d\u662f\u5f15\u7528api\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u4e86teardown_hooks\u7684\u4f7f\u7528 \u5b8c\u6574\u7684\u6848\u4f8b\u8bbf\u95ee \u5730\u5740 \u3002","title":"klook"},{"location":"examples/demo-klook/#klook","text":"","title":"klook"},{"location":"examples/demo-klook/#_1","text":"\u88ab\u6d4b\u6848\u4f8b\uff1a klook \u6848\u4f8b\u4f5c\u8005\uff1a readyou \u6211\u4eec\u56e2\u961f\u9009\u62e9\u4e86 HttpRunner \u4f5c\u4e3a\u63a5\u53e3\u6d4b\u8bd5\u6846\u67b6\uff0c\u5e76\u6574\u7406\u4e86\u4e00\u4efd\u6848\u4f8b\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002","title":"\u6848\u4f8b\u4ecb\u7ecd"},{"location":"examples/demo-klook/#_2","text":"\u672c\u4f8b\u5b50\u4e2d\u6709\u4e9b\u5730\u65b9\u7528\u5230\u4e86 localhost:8085 \u4f5c\u4e3abase_url\uff0c\u8fd9\u4e9b\u63a5\u53e3\u662f\u4e0d\u80fd\u8bbf\u95ee\u7684\uff0c\u4ec5\u4f5c\u4e3a\u793a\u4f8b\u5b66\u4e60\u600e\u6837\u7ec4\u7ec7\u6d4b\u8bd5\u7528\u4f8b\u3002 https://maps.googleapis.com \u662f\u53ef\u4ee5\u7528\u7684\uff0c\u81ea\u5df1\u7533\u8bf7\u4e00\u4e2akey\uff0c\u66ff\u6362\u6389\u6587\u4ef6\u4e2d\u7684 your_google_map_key \u5373\u53ef\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"examples/demo-klook/#_3","text":"\u6a21\u5757 \u6587\u4ef6 \u7528\u9014 \u5907\u6ce8 google map \u63a5\u53e3\u6d4b\u8bd5 api/find_place_api.yml google map\u6839\u636e\u540d\u79f0\u641c\u7d22\u5730\u5740\u7684api \u6bd4\u8f83\u5168\u9762\u5730\u4f7f\u7528\u4e86api\b\u53ef\u4ee5\u4f7f\u7528\u7684\u5173\u952e\u5b57\uff1aname, base_url, request, variables, validate, extract google map \u63a5\u53e3\u6d4b\u8bd5 testcases/find_place_testcase.yml google map\u6839\u636e\u540d\u79f0\u641c\u7d22\u5730\u5740\u7684testcase \u4f7f\u7528\u4e86testcase\u6807\u51c6\u7684\u5199\u6cd5\uff1atestcase\u7531teststep\u7ec4\u6210\uff0cteststep\u4e2d\u5f15\u7528api(just_request_testcase.yml\u4e2d\u6f14\u793a\u4e86\u76f4\u63a5\u4f7f\u7528request\u800c\u4e0d\u662f\u5f15\u7528api\u7684\u65b9\u5f0f)\u3002teststep\u4e2d\u8fd8\u4f7f\u7528\u4e86variables\u3002 google map \u63a5\u53e3\u6d4b\u8bd5 testcases/place_detail_testcase.yml google map\u83b7\u53d6\u5730\u5740\u8be6\u60c5\u7684testcase config\u4e2d\u4f7f\u7528variables google map \u63a5\u53e3\u6d4b\u8bd5 testsuites/place_detail_testsuite.yml google map\u63a5\u53e3\u6d4b\u8bd5\u7684testsuite\u5305\u542b\u4e0a\u9762\u4e24\u4e2atestcase \u4f7f\u7528\u4e86\u591a\u79cd\u65b9\u5f0f\u6765\u505a\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5 klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/search_area_by_name_api.yml \u6839\u636e\u540d\u5b57\u67e5\u8be2\u533a\u57df\uff08\u652f\u6301\u591a\u8bed\u8a00\uff09\u2014\u2014api klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/search_area_by_name_testcase.yml \u6839\u636e\u540d\u5b57\u67e5\u8be2\u533a\u57df\uff08\u652f\u6301\u591a\u8bed\u8a00\uff09\u2014\u2014testcase klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/get_area_groups_api.yml \u67e5\u8be2\u5730\u7406\u4f4d\u7f6e\u4e0b\u9762\u7684\u7ec4\u2014\u2014api klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/get_area_groups_testcase.yml \u67e5\u8be2\u5730\u7406\u4f4d\u7f6e\u4e0b\u9762\u7684\u7ec4\u2014\u2014testcase klook\u5730\u7406\u4f4d\u7f6e\u641c\u7d22\u63a5\u53e3\u6d4b\u8bd5 api/area_manage_testsuite.yml \u533a\u57df\u7ba1\u7406\u2014\u2014testsuite baidu\u9996\u9875demo testcases/just_request_testcase.yml \u63d0\u53d6\u767e\u5ea6\u9996\u9875title\u7684demo \u6f14\u793a\u4e86\u76f4\u63a5\u4f7f\u7528request\u800c\u4e0d\u662f\u5f15\u7528api\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u4e86teardown_hooks\u7684\u4f7f\u7528 \u5b8c\u6574\u7684\u6848\u4f8b\u8bbf\u95ee \u5730\u5740 \u3002","title":"\u76f8\u5173\u6587\u4ef6\u8bf4\u660e"},{"location":"features/advanced-functions/","text":"\u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 \u00b6 \u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd ApiMeter \u4e2d\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u9ad8\u7ea7\u53c2\u6570\u4f20\u9012\u529f\u80fd\uff0c\u5305\u62ec\u5217\u8868\u53c2\u6570\u3001\u5b57\u5178\u53c2\u6570\u3001\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570\u4ee5\u53ca\u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c\u7b49\u5f3a\u5927\u7279\u6027\u3002 \ud83d\udcda \u76ee\u5f55 \u00b6 \u4e3a\u4ec0\u4e48\u9700\u8981\u9ad8\u7ea7\u53c2\u6570\u89e3\u6790\uff1f 1. \u57fa\u7840\u56de\u987e 2. \u94fe\u5f0f\u53d6\u503c 3. \u5217\u8868\u53c2\u6570\u89e3\u6790 4. \u5b57\u5178\u5bf9\u8c61\u53c2\u6570\u89e3\u6790 5. \u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570 6. \u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c 7. \u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c 8. \u7c7b\u578b\u6821\u9a8c 9. \u7efc\u5408\u5b9e\u6218\u6848\u4f8b 10. \u6700\u4f73\u5b9e\u8df5 \u4e3a\u4ec0\u4e48\u9700\u8981\u9ad8\u7ea7\u53c2\u6570\u89e3\u6790\uff1f \u00b6 \u5b9e\u9645\u573a\u666f\u7684\u590d\u6742\u6027 \u00b6 \u5728\u5b9e\u9645 API \u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u9047\u5230\u4ee5\u4e0b\u590d\u6742\u573a\u666f\uff1a \u573a\u666f 1\uff1a\u7b7e\u540d\u751f\u6210 # \u9700\u8981\u5c06\u591a\u4e2a\u53c2\u6570\u7ec4\u5408\u751f\u6210\u7b7e\u540d sign = md5 ( device_sn + os_platform + app_version + timestamp ) \u573a\u666f 2\uff1a\u6279\u91cf\u6570\u636e\u6821\u9a8c { \"products\" : [ { \"id\" : 1 , \"sku\" : [{ \"id\" : \"A\" , \"price\" : 100 }, { \"id\" : \"B\" , \"price\" : 200 }]}, { \"id\" : 2 , \"sku\" : [{ \"id\" : \"C\" , \"price\" : 150 }, { \"id\" : \"D\" , \"price\" : 250 }]} ] } \u9700\u8981\u6821\u9a8c\u6240\u6709 sku \u4e2d\u7684 id \u548c price \u5b57\u6bb5\u3002 \u573a\u666f 3\uff1a\u590d\u6742\u914d\u7f6e\u4f20\u9012 # \u9700\u8981\u4f20\u9012\u590d\u6742\u7684\u914d\u7f6e\u5bf9\u8c61 validate_data ( response , { \"list_path\" : \"products\" , \"nested_field\" : \"sku\" , \"check_fields\" : [ \"id\" , \"price\" , \"currency\" ] }) \u4f20\u7edf\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u65e0\u6cd5\u4f18\u96c5\u5730\u5904\u7406\u8fd9\u4e9b\u573a\u666f\uff0cApiMeter \u7684\u9ad8\u7ea7\u53c2\u6570\u89e3\u6790\u529f\u80fd\u5b8c\u7f8e\u89e3\u51b3\u4e86\u8fd9\u4e9b\u95ee\u9898\u3002 1. \u57fa\u7840\u56de\u987e \u00b6 1.1 \u7b80\u5355\u53c2\u6570\u4f20\u9012 \u00b6 \u6700\u57fa\u7840\u7684\u7528\u6cd5\uff0c\u4f20\u9012\u5355\u4e2a\u53c2\u6570\uff1a # debugtalk.py def validate_token(token) : assert len(token) == 16, f\"Token length should be 16, got {len(token)}\" return True # \u6d4b\u8bd5\u7528\u4f8b script : - ${validate_token(content.token)} 1.2 \u591a\u4e2a\u53c2\u6570\u4f20\u9012 \u00b6 \u4f20\u9012\u591a\u4e2a\u72ec\u7acb\u53c2\u6570\uff1a # debugtalk.py def get_sign(device_sn, os_platform, app_version) : content = f\"{device_sn}{os_platform}{app_version}\" return hashlib.md5(content.encode()).hexdigest() # \u6d4b\u8bd5\u7528\u4f8b request : json : sign : ${get_sign($device_sn, $os_platform, $app_version)} 2. \u94fe\u5f0f\u53d6\u503c \u00b6 2.1 \u5168\u5c40\u53d8\u91cf\u94fe\u5f0f\u53d6\u503c \u00b6 \u76f4\u63a5\u8bbf\u95ee\u54cd\u5e94\u6570\u636e\u7684\u6df1\u5c42\u5b57\u6bb5\uff1a # debugtalk.py def validate_user_name(name) : assert len(name) > 0, \"User name cannot be empty\" return True # \u6d4b\u8bd5\u7528\u4f8b - \u94fe\u5f0f\u8bbf\u95ee script : # \u8bbf\u95ee content.data.user.profile.name - ${validate_user_name(content.data.user.profile.name)} \u54cd\u5e94\u6570\u636e\u793a\u4f8b\uff1a { \"data\" : { \"user\" : { \"profile\" : { \"name\" : \"Alice\" , \"age\" : 25 } } } } 2.2 \u81ea\u5b9a\u4e49\u53d8\u91cf\u94fe\u5f0f\u53d6\u503c \u00b6 \u63d0\u53d6\u53d8\u91cf\u540e\u652f\u6301\u94fe\u5f0f\u8bbf\u95ee\uff1a extract : - user_info : content.data.user script : # \u4f7f\u7528\u63d0\u53d6\u7684\u53d8\u91cf\u8fdb\u884c\u94fe\u5f0f\u8bbf\u95ee - ${validate_user_name($user_info.profile.name)} 2.3 \u6570\u7ec4\u7d22\u5f15\u8bbf\u95ee \u00b6 script : # \u8bbf\u95ee\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5b57\u6bb5 - ${validate_price(content.products[0].price)} # \u8bbf\u95ee\u5d4c\u5957\u6570\u7ec4 - ${validate_sku_id(content.products[0].sku[0].id)} 3. \u5217\u8868\u53c2\u6570\u89e3\u6790 \u00b6 3.1 \u57fa\u672c\u8bed\u6cd5 \u00b6 \u4f7f\u7528\u4e2d\u62ec\u53f7 [] \u4f20\u9012\u5217\u8868\u53c2\u6570\uff1a ${function_name([$param1, $param2, $param3])} 3.2 \u4f7f\u7528\u573a\u666f\uff1a\u7b7e\u540d\u751f\u6210 \u00b6 \u573a\u666f\u63cf\u8ff0 \uff1a API \u9700\u8981\u5c06\u591a\u4e2a\u53c2\u6570\u7ec4\u5408\u540e\u751f\u6210\u7b7e\u540d\uff0c\u4f20\u7edf\u65b9\u5f0f\u9700\u8981\u9010\u4e2a\u4f20\u9012\u53c2\u6570\uff0c\u4f7f\u7528\u5217\u8868\u53c2\u6570\u53ef\u4ee5\u66f4\u7b80\u6d01\u3002 debugtalk.py \uff1a import hashlib import hmac SECRET_KEY = \"DebugTalk\" def get_sign_v2 ( args_list ): \"\"\" \u4f7f\u7528\u5217\u8868\u53c2\u6570\u751f\u6210\u7b7e\u540d Args: args_list: \u53c2\u6570\u5217\u8868\uff0c\u5982 [\"device_001\", \"ios\", \"2.8.6\"] Returns: \u7b7e\u540d\u5b57\u7b26\u4e32 \"\"\" content = \"\" . join ( args_list ) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) sign = hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () return sign \u6d4b\u8bd5\u7528\u4f8b \uff1a config : variables : device_sn : \"TEST_DEVICE_001\" os_platform : \"ios\" app_version : \"2.8.6\" teststeps : - name : \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c request : url : /api/get-token method : POST json : # \u4f7f\u7528\u5217\u8868\u53c2\u6570\u4f20\u9012 sign : ${get_sign_v2([$device_sn, $os_platform, $app_version])} script : - assert status_code == 200 3.3 \u4f7f\u7528\u573a\u666f\uff1a\u6279\u91cf\u6821\u9a8c \u00b6 \u573a\u666f\u63cf\u8ff0 \uff1a \u9700\u8981\u540c\u65f6\u6821\u9a8c\u591a\u4e2a\u5b57\u6bb5\u662f\u5426\u5b58\u5728\u3002 debugtalk.py \uff1a def check_fields_exist ( data , fields_list ): \"\"\" \u6279\u91cf\u68c0\u67e5\u5b57\u6bb5\u662f\u5426\u5b58\u5728 Args: data: \u6570\u636e\u5bf9\u8c61 fields_list: \u5b57\u6bb5\u5217\u8868\uff0c\u5982 [\"id\", \"name\", \"email\"] Returns: True if all fields exist \"\"\" for field in fields_list : assert field in data , f \"Missing required field: { field } \" return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u6279\u91cf\u68c0\u67e5\u7528\u6237\u5fc5\u586b\u5b57\u6bb5 - ${check_fields_exist(content.user, [id, name, email, phone])} # \u6279\u91cf\u68c0\u67e5\u4ea7\u54c1\u5fc5\u586b\u5b57\u6bb5 - ${check_fields_exist(content.product, [id, title, price, stock])} 3.4 \u5217\u8868\u53c2\u6570 + \u53d8\u91cf\u5f15\u7528 \u00b6 variables : required_user_fields : [ \"id\" , \"name\" , \"email\" ] required_product_fields : [ \"id\" , \"title\" , \"price\" ] script : # \u5f15\u7528\u53d8\u91cf\u5217\u8868 - ${check_fields_exist(content.user, $required_user_fields)} - ${check_fields_exist(content.product, $required_product_fields)} 4. \u5b57\u5178\u5bf9\u8c61\u53c2\u6570\u89e3\u6790 \u00b6 4.1 \u57fa\u672c\u8bed\u6cd5 \u00b6 \u4f7f\u7528\u82b1\u62ec\u53f7 {} \u4f20\u9012\u5b57\u5178\u53c2\u6570\uff1a ${function_name({key1 : value1, key2 : value2})} \u6ce8\u610f \uff1a\u5b57\u5178\u53c2\u6570\u901a\u5e38\u9700\u8981\u7528\u5f15\u53f7\u5305\u88f9\uff1a \"${function_name({key1: value1, key2: value2})}\" 4.2 \u4f7f\u7528\u573a\u666f\uff1a\u590d\u6742\u7b7e\u540d\u914d\u7f6e \u00b6 \u573a\u666f\u63cf\u8ff0 \uff1a \u7b7e\u540d\u7b97\u6cd5\u9700\u8981\u591a\u4e2a\u53c2\u6570\uff0c\u4f7f\u7528\u5b57\u5178\u53ef\u4ee5\u8ba9\u53c2\u6570\u66f4\u6709\u8bed\u4e49\u3002 debugtalk.py \uff1a import hashlib import hmac SECRET_KEY = \"DebugTalk\" def get_sign_v3 ( args_dict ): \"\"\" \u4f7f\u7528\u5b57\u5178\u53c2\u6570\u751f\u6210\u7b7e\u540d Args: args_dict: \u53c2\u6570\u5b57\u5178\uff0c\u5982 { \"device_sn\": \"xxx\", \"os_platform\": \"ios\", \"app_version\": \"2.8.6\" } Returns: \u7b7e\u540d\u5b57\u7b26\u4e32 \"\"\" content = \"\" . join ([ args_dict [ \"device_sn\" ], args_dict [ \"os_platform\" ], args_dict [ \"app_version\" ] ]) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) sign = hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () return sign \u6d4b\u8bd5\u7528\u4f8b \uff1a request : json : # \u4f7f\u7528\u5b57\u5178\u53c2\u6570\uff08\u6ce8\u610f\u5916\u5c42\u5f15\u53f7\uff09 sign : \"${get_sign_v3({ device_sn: $device_sn, os_platform: $os_platform, app_version: $app_version })}\" 4.3 \u4f7f\u7528\u573a\u666f\uff1a\u914d\u7f6e\u5bf9\u8c61\u4f20\u9012 \u00b6 \u573a\u666f\u63cf\u8ff0 \uff1a \u6570\u636e\u6821\u9a8c\u9700\u8981\u590d\u6742\u7684\u914d\u7f6e\u4fe1\u606f\u3002 debugtalk.py \uff1a def validate_with_config ( data , config ): \"\"\" \u6839\u636e\u914d\u7f6e\u6821\u9a8c\u6570\u636e Args: data: \u5f85\u6821\u9a8c\u6570\u636e config: \u914d\u7f6e\u5bf9\u8c61\uff0c\u5982 { \"min_length\": 10, \"max_length\": 100, \"allow_empty\": false } Returns: True if validation passes \"\"\" min_len = config . get ( \"min_length\" , 0 ) max_len = config . get ( \"max_length\" , float ( 'inf' )) allow_empty = config . get ( \"allow_empty\" , False ) if not allow_empty : assert len ( data ) > 0 , \"Data cannot be empty\" assert min_len <= len ( data ) <= max_len , \\ f \"Data length { len ( data ) } not in range [ { min_len } , { max_len } ]\" return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u4f20\u9012\u914d\u7f6e\u5bf9\u8c61 - \"${validate_with_config(content.description, { min_length: 10, max_length: 500, allow_empty: false })}\" 5. \u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570 \u00b6 5.1 \u4f7f\u7528\u573a\u666f\uff1a\u5d4c\u5957\u5217\u8868\u6279\u91cf\u6821\u9a8c \u00b6 \u573a\u666f\u63cf\u8ff0 \uff1a \u54cd\u5e94\u6570\u636e\u5305\u542b\u591a\u5c42\u5d4c\u5957\u7ed3\u6784\uff0c\u9700\u8981\u6279\u91cf\u6821\u9a8c\u6240\u6709\u5d4c\u5957\u6570\u636e\u7684\u7279\u5b9a\u5b57\u6bb5\u3002 \u54cd\u5e94\u6570\u636e\u7ed3\u6784 \uff1a { \"productList\" : [ { \"id\" : 1 , \"name\" : \"Product 1\" , \"sku\" : [ { \"id\" : \"A\" , \"amount\" : 100 , \"currency\" : \"USD\" }, { \"id\" : \"B\" , \"amount\" : 200 , \"currency\" : \"USD\" } ] }, { \"id\" : 2 , \"name\" : \"Product 2\" , \"sku\" : [ { \"id\" : \"C\" , \"amount\" : 150 , \"currency\" : \"EUR\" }, { \"id\" : \"D\" , \"amount\" : 250 , \"currency\" : \"EUR\" } ] } ] } debugtalk.py \uff1a def check_nested_list_fields ( data , config ): \"\"\" \u68c0\u67e5\u5d4c\u5957\u5217\u8868\u4e2d\u7684\u5b57\u6bb5 Args: data: \u54cd\u5e94\u6570\u636e config: \u914d\u7f6e\u5bf9\u8c61 { \"list_path\": \"productList\", # \u5916\u5c42\u5217\u8868\u8def\u5f84 \"nested_field\": \"sku\", # \u5185\u5c42\u5217\u8868\u5b57\u6bb5\u540d \"check_fields\": [\"id\", \"amount\"] # \u9700\u8981\u68c0\u67e5\u7684\u5b57\u6bb5 } Returns: True if all validations pass \"\"\" list_path = config [ \"list_path\" ] nested_field = config [ \"nested_field\" ] check_fields = config [ \"check_fields\" ] # \u83b7\u53d6\u5916\u5c42\u5217\u8868 items = data . get ( list_path , []) assert len ( items ) > 0 , f \"List ' { list_path } ' is empty\" # \u904d\u5386\u5916\u5c42\u5217\u8868 for item in items : # \u83b7\u53d6\u5185\u5c42\u5217\u8868 nested_items = item . get ( nested_field , []) assert len ( nested_items ) > 0 , \\ f \"Nested field ' { nested_field } ' is empty in item { item . get ( 'id' ) } \" # \u904d\u5386\u5185\u5c42\u5217\u8868\uff0c\u68c0\u67e5\u5b57\u6bb5 for nested_item in nested_items : for field in check_fields : assert field in nested_item , \\ f \"Field ' { field } ' not found in nested item\" assert nested_item [ field ] is not None , \\ f \"Field ' { field } ' is None\" return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u68c0\u67e5\u5d4c\u5957\u5217\u8868\u4e2d\u7684\u5b57\u6bb5 - \"${check_nested_list_fields(content, { list_path: productList, nested_field: sku, check_fields: [id, amount, currency] })}\" 5.2 \u4f7f\u7528\u573a\u666f\uff1a\u591a\u7ea7\u914d\u7f6e\u5bf9\u8c61 \u00b6 debugtalk.py \uff1a def validate_complex_data ( data , validation_rules ): \"\"\" \u4f7f\u7528\u590d\u6742\u89c4\u5219\u9a8c\u8bc1\u6570\u636e Args: data: \u5f85\u9a8c\u8bc1\u6570\u636e validation_rules: \u9a8c\u8bc1\u89c4\u5219 { \"user\": { \"required_fields\": [\"id\", \"name\"], \"name_min_length\": 2 }, \"product\": { \"required_fields\": [\"id\", \"price\"], \"price_min\": 0 } } \"\"\" # \u9a8c\u8bc1 user \u6570\u636e if \"user\" in validation_rules : user_rules = validation_rules [ \"user\" ] user_data = data . get ( \"user\" , {}) # \u68c0\u67e5\u5fc5\u586b\u5b57\u6bb5 for field in user_rules . get ( \"required_fields\" , []): assert field in user_data , f \"User missing field: { field } \" # \u68c0\u67e5\u540d\u79f0\u957f\u5ea6 if \"name_min_length\" in user_rules : min_len = user_rules [ \"name_min_length\" ] assert len ( user_data . get ( \"name\" , \"\" )) >= min_len # \u9a8c\u8bc1 product \u6570\u636e if \"product\" in validation_rules : product_rules = validation_rules [ \"product\" ] product_data = data . get ( \"product\" , {}) # \u68c0\u67e5\u5fc5\u586b\u5b57\u6bb5 for field in product_rules . get ( \"required_fields\" , []): assert field in product_data , f \"Product missing field: { field } \" # \u68c0\u67e5\u4ef7\u683c if \"price_min\" in product_rules : price_min = product_rules [ \"price_min\" ] assert product_data . get ( \"price\" , - 1 ) >= price_min return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u4f20\u9012\u591a\u7ea7\u914d\u7f6e\u5bf9\u8c61 - \"${validate_complex_data(content, { user: { required_fields: [id, name, email], name_min_length: 2 }, product: { required_fields: [id, price, stock], price_min: 0 } })}\" 6. \u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c \u00b6 6.1 \u901a\u914d\u7b26 * \u8bed\u6cd5 \u00b6 \u4f7f\u7528 * \u901a\u914d\u7b26\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u5c42\u7ea7\u7684\u6570\u636e\uff0c\u5b9e\u73b0\u6279\u91cf\u6821\u9a8c\u3002 \u8bed\u6cd5 \uff1a path.to.*.field path.to.*.nested.*.field 6.2 \u5355\u5c42\u901a\u914d\u7b26 \u00b6 \u573a\u666f \uff1a\u6821\u9a8c\u6240\u6709\u4ea7\u54c1\u7684 ID \u548c\u4ef7\u683c\u3002 \u54cd\u5e94\u6570\u636e \uff1a { \"products\" : [ { \"id\" : 1 , \"price\" : 100 }, { \"id\" : 2 , \"price\" : 200 }, { \"id\" : 3 , \"price\" : 300 } ] } debugtalk.py \uff1a def check ( data , * field_paths ): \"\"\" \u901a\u7528\u5b57\u6bb5\u68c0\u67e5\u51fd\u6570 \u652f\u6301\u901a\u914d\u7b26\u8def\u5f84 Args: data: \u54cd\u5e94\u6570\u636e *field_paths: \u5b57\u6bb5\u8def\u5f84\u5217\u8868\uff0c\u652f\u6301\u901a\u914d\u7b26 \u5982: \"products.*.id\", \"products.*.price\" \"\"\" for path in field_paths : _check_field_path ( data , path ) return True def _check_field_path ( data , path ): \"\"\"\u68c0\u67e5\u5355\u4e2a\u5b57\u6bb5\u8def\u5f84\"\"\" parts = path . split ( '.' ) _recursive_check ( data , parts ) def _recursive_check ( data , parts ): \"\"\"\u9012\u5f52\u68c0\u67e5\u5b57\u6bb5\"\"\" if not parts : # \u8def\u5f84\u68c0\u67e5\u5b8c\u6bd5\uff0c\u786e\u4fdd\u6570\u636e\u4e0d\u4e3a None assert data is not None , \"Field value is None\" return part = parts [ 0 ] remaining = parts [ 1 :] if part == '*' : # \u901a\u914d\u7b26\uff1a\u904d\u5386\u5217\u8868\u6216\u5b57\u5178 if isinstance ( data , list ): for item in data : _recursive_check ( item , remaining ) elif isinstance ( data , dict ): for value in data . values (): _recursive_check ( value , remaining ) else : # \u666e\u901a\u5b57\u6bb5 if isinstance ( data , dict ): assert part in data , f \"Field ' { part } ' not found\" _recursive_check ( data [ part ], remaining ) else : raise ValueError ( f \"Cannot access field ' { part } ' on non-dict data\" ) \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u68c0\u67e5\u6240\u6709\u4ea7\u54c1\u7684 id \u548c price - ${check(content, products.*.id, products.*.price)} 6.3 \u591a\u5c42\u901a\u914d\u7b26 \u00b6 \u573a\u666f \uff1a\u6821\u9a8c\u6240\u6709\u4ea7\u54c1\u7684\u6240\u6709 SKU \u7684\u5b57\u6bb5\u3002 \u54cd\u5e94\u6570\u636e \uff1a { \"products\" : [ { \"id\" : 1 , \"sku\" : [ { \"id\" : \"A\" , \"amount\" : 100 , \"currency\" : \"USD\" }, { \"id\" : \"B\" , \"amount\" : 200 , \"currency\" : \"USD\" } ] }, { \"id\" : 2 , \"sku\" : [ { \"id\" : \"C\" , \"amount\" : 150 , \"currency\" : \"EUR\" } ] } ] } \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u68c0\u67e5\u6240\u6709\u4ea7\u54c1\u7684\u6240\u6709 SKU \u7684\u5b57\u6bb5 - ${check(content, products.*.id, products.*.sku.*.id, products.*.sku.*.amount, products.*.sku.*.currency )} 6.4 \u901a\u914d\u7b26 + \u94fe\u5f0f\u53d6\u503c \u00b6 script : # \u68c0\u67e5\u5d4c\u5957\u6df1\u5c42\u6570\u636e - ${check(content, data.product.purchasePlan.*.sku.*.id, data.product.purchasePlan.*.sku.*.amount, data.product.purchasePlan.*.sku.*.origin_amount, data.product.purchasePlan.*.sku.*.currency, data.product.purchasePlan.*.sku.*.duration )} 7. \u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c \u00b6 7.1 \u6b63\u5219\u8868\u8fbe\u5f0f\u8bed\u6cd5 ~= \u00b6 \u4f7f\u7528 ~= \u64cd\u4f5c\u7b26\u8fdb\u884c\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 \u8bed\u6cd5 \uff1a 'field_name ~= regex_pattern' 7.2 \u4f7f\u7528\u573a\u666f\uff1aURL \u683c\u5f0f\u6821\u9a8c \u00b6 debugtalk.py \uff08\u6269\u5c55 check \u51fd\u6570\uff09\uff1a import re def check ( data , * rules ): \"\"\" \u901a\u7528\u68c0\u67e5\u51fd\u6570 \u652f\u6301\uff1a - \u901a\u914d\u7b26\u8def\u5f84: \"products.*.id\" - \u6b63\u5219\u8868\u8fbe\u5f0f: \"_url ~= ^https?://.*\" - \u5305\u542b\u6821\u9a8c: \"status =* [active, pending]\" - \u7c7b\u578b\u6821\u9a8c: \"user @= dict\" \"\"\" for rule in rules : if isinstance ( rule , str ) and ' ~= ' in rule : # \u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c field , pattern = rule . split ( ' ~= ' ) field = field . strip () pattern = pattern . strip () _check_regex ( data , field , pattern ) else : # \u666e\u901a\u5b57\u6bb5\u8def\u5f84\u6821\u9a8c _check_field_path ( data , rule ) return True def _check_regex ( data , field , pattern ): \"\"\"\u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c\"\"\" value = _get_field_value ( data , field ) assert re . match ( pattern , str ( value )), \\ f \"Field ' { field } ' value ' { value } ' does not match pattern ' { pattern } '\" \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # URL \u683c\u5f0f\u6821\u9a8c - ${check(content, '_url ~= ^https?://[^\\s/$.?#].[^\\s]*$' )} # \u90ae\u7bb1\u683c\u5f0f\u6821\u9a8c - ${check(content, 'user.email ~= ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$' )} # \u7535\u8bdd\u53f7\u7801\u683c\u5f0f\u6821\u9a8c - ${check(content, 'user.phone ~= ^1[3-9]\\d{9}$' )} 8. \u7c7b\u578b\u6821\u9a8c \u00b6 8.1 \u7c7b\u578b\u6821\u9a8c\u8bed\u6cd5 @= \u00b6 \u4f7f\u7528 @= \u64cd\u4f5c\u7b26\u8fdb\u884c\u7c7b\u578b\u6821\u9a8c\u3002 \u8bed\u6cd5 \uff1a 'field_name @= type_name' \u652f\u6301\u7684\u7c7b\u578b \uff1a - dict - \u5b57\u5178\u7c7b\u578b - list - \u5217\u8868\u7c7b\u578b - str - \u5b57\u7b26\u4e32\u7c7b\u578b - int - \u6574\u6570\u7c7b\u578b - float - \u6d6e\u70b9\u6570\u7c7b\u578b - bool - \u5e03\u5c14\u7c7b\u578b 8.2 \u4f7f\u7528\u573a\u666f\uff1a\u6570\u636e\u7ed3\u6784\u6821\u9a8c \u00b6 debugtalk.py \uff08\u7ee7\u7eed\u6269\u5c55 check \u51fd\u6570\uff09\uff1a def check ( data , * rules ): \"\"\"\u901a\u7528\u68c0\u67e5\u51fd\u6570\"\"\" for rule in rules : if isinstance ( rule , str ): if ' ~= ' in rule : # \u6b63\u5219\u8868\u8fbe\u5f0f field , pattern = rule . split ( ' ~= ' ) _check_regex ( data , field . strip (), pattern . strip ()) elif ' =* ' in rule : # \u5305\u542b\u6821\u9a8c field , values = rule . split ( ' =* ' ) _check_contains ( data , field . strip (), values . strip ()) elif ' @= ' in rule : # \u7c7b\u578b\u6821\u9a8c field , type_name = rule . split ( ' @= ' ) _check_type ( data , field . strip (), type_name . strip ()) else : # \u5b57\u6bb5\u8def\u5f84 _check_field_path ( data , rule ) else : _check_field_path ( data , rule ) return True def _check_type ( data , field , type_name ): \"\"\"\u7c7b\u578b\u6821\u9a8c\"\"\" value = _get_field_value ( data , field ) type_map = { 'dict' : dict , 'list' : list , 'str' : str , 'int' : int , 'float' : float , 'bool' : bool } expected_type = type_map . get ( type_name ) assert expected_type , f \"Unknown type: { type_name } \" assert isinstance ( value , expected_type ), \\ f \"Field ' { field } ' type is { type ( value ) . __name__ } , expected { type_name } \" \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u7c7b\u578b\u6821\u9a8c - ${check(content, 'user @= dict', 'user.id @= int', 'user.name @= str', 'user.is_active @= bool', 'products @= list' )} 8.3 \u5305\u542b\u6821\u9a8c\u8bed\u6cd5 =* \u00b6 \u4f7f\u7528 =* \u64cd\u4f5c\u7b26\u68c0\u67e5\u503c\u662f\u5426\u5728\u6307\u5b9a\u8303\u56f4\u5185\u3002 \u8bed\u6cd5 \uff1a 'field_name =* [value1, value2, value3]' debugtalk.py \uff08check \u51fd\u6570\u5df2\u5305\u542b\uff09\uff1a def _check_contains ( data , field , values_str ): \"\"\"\u5305\u542b\u6821\u9a8c\"\"\" # \u89e3\u6790\u503c\u5217\u8868: \"[USD, CNY, EUR]\" -> [\"USD\", \"CNY\", \"EUR\"] values_str = values_str . strip ( '[]' ) expected_values = [ v . strip () for v in values_str . split ( ',' )] value = _get_field_value ( data , field ) assert str ( value ) in expected_values , \\ f \"Field ' { field } ' value ' { value } ' not in { expected_values } \" \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u8d27\u5e01\u7c7b\u578b\u6821\u9a8c - ${check(content, 'default_currency =* [USD, CNY, EUR]' )} # \u72b6\u6001\u6821\u9a8c - ${check(content, 'order.status =* [pending, processing, completed, cancelled]' )} 9. \u7efc\u5408\u5b9e\u6218\u6848\u4f8b \u00b6 \u6848\u4f8b 1\uff1a\u7535\u5546 API \u5b8c\u6574\u6821\u9a8c \u00b6 \u54cd\u5e94\u6570\u636e \uff1a { \"_url\" : \"https://api.example.com/products\" , \"default_currency\" : \"USD\" , \"default_sku\" : { \"id\" : \"DEFAULT_001\" , \"price\" : 99.99 }, \"product\" : { \"id\" : 123 , \"name\" : \"Product Name\" , \"purchasePlan\" : [ { \"plan_id\" : \"PLAN_001\" , \"sku\" : [ { \"id\" : \"SKU_001\" , \"amount\" : 100 , \"origin_amount\" : 120 , \"currency\" : \"USD\" , \"duration\" : 30 }, { \"id\" : \"SKU_002\" , \"amount\" : 200 , \"origin_amount\" : 240 , \"currency\" : \"USD\" , \"duration\" : 60 } ] } ] } } \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u4e00\u6b21\u6027\u6821\u9a8c\u6240\u6709\u5b57\u6bb5 - ${check(content, '_url ~= ^https?://[^\\s/$.?#].[^\\s]*$', 'default_currency =* [USD, CNY, EUR]', 'default_sku @= dict', 'product @= dict', 'product.purchasePlan @= list', product.purchasePlan.*.sku.*.id, product.purchasePlan.*.sku.*.amount, product.purchasePlan.*.sku.*.origin_amount, product.purchasePlan.*.sku.*.currency, product.purchasePlan.*.sku.*.duration )} \u6848\u4f8b 2\uff1a\u7528\u6237\u4fe1\u606f\u590d\u6742\u6821\u9a8c \u00b6 debugtalk.py \uff1a def validate_user_complete ( user_data , rules ): \"\"\" \u7528\u6237\u4fe1\u606f\u5b8c\u6574\u6821\u9a8c Args: user_data: \u7528\u6237\u6570\u636e rules: \u6821\u9a8c\u89c4\u5219 { \"required_fields\": [\"id\", \"name\", \"email\"], \"email_pattern\": \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\", \"name_min_length\": 2, \"name_max_length\": 50, \"check_permissions\": true, \"required_permissions\": [\"read\", \"write\"] } \"\"\" import re # \u68c0\u67e5\u5fc5\u586b\u5b57\u6bb5 for field in rules . get ( \"required_fields\" , []): assert field in user_data , f \"Missing required field: { field } \" assert user_data [ field ] is not None , f \"Field ' { field } ' is None\" # \u68c0\u67e5\u90ae\u7bb1\u683c\u5f0f if \"email_pattern\" in rules and \"email\" in user_data : pattern = rules [ \"email_pattern\" ] email = user_data [ \"email\" ] assert re . match ( pattern , email ), f \"Invalid email format: { email } \" # \u68c0\u67e5\u540d\u79f0\u957f\u5ea6 if \"name\" in user_data : name = user_data [ \"name\" ] min_len = rules . get ( \"name_min_length\" , 0 ) max_len = rules . get ( \"name_max_length\" , float ( 'inf' )) assert min_len <= len ( name ) <= max_len , \\ f \"Name length { len ( name ) } not in range [ { min_len } , { max_len } ]\" # \u68c0\u67e5\u6743\u9650 if rules . get ( \"check_permissions\" , False ): required_perms = rules . get ( \"required_permissions\" , []) user_perms = user_data . get ( \"permissions\" , []) for perm in required_perms : assert perm in user_perms , f \"Missing permission: { perm } \" return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : - \"${validate_user_complete(content.user, { required_fields: [id, name, email, phone], email_pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+ \\ .[a-zA-Z]{2,}$', name_min_length: 2, name_max_length: 50, check_permissions: true, required_permissions: [read, write, delete] })}\" \u6848\u4f8b 3\uff1a\u591a\u73af\u5883\u914d\u7f6e\u7b7e\u540d \u00b6 debugtalk.py \uff1a import hashlib import hmac import time def generate_signature ( params ): \"\"\" \u751f\u6210\u8bf7\u6c42\u7b7e\u540d Args: params: \u7b7e\u540d\u53c2\u6570 { \"method\": \"POST\", \"url\": \"/api/users\", \"timestamp\": 1234567890, \"nonce\": \"random_string\", \"body\": {...}, \"secret_key\": \"xxx\" } \"\"\" # \u6309key\u6392\u5e8f sorted_params = sorted ([ ( k , v ) for k , v in params . items () if k != 'secret_key' ]) # \u62fc\u63a5\u5b57\u7b26\u4e32 sign_str = '&' . join ([ f \" { k } = { v } \" for k , v in sorted_params ]) # \u751f\u6210\u7b7e\u540d secret = params . get ( \"secret_key\" , \"\" ) . encode ( 'utf-8' ) sign = hmac . new ( secret , sign_str . encode ( 'utf-8' ), hashlib . sha256 ) . hexdigest () return sign def get_timestamp (): \"\"\"\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u6233\"\"\" return int ( time . time ()) def get_nonce (): \"\"\"\u751f\u6210\u968f\u673a\u5b57\u7b26\u4e32\"\"\" import random import string return '' . join ( random . choices ( string . ascii_letters + string . digits , k = 16 )) \u6d4b\u8bd5\u7528\u4f8b \uff1a variables : secret_key : \"MySecretKey123\" request_method : \"POST\" request_url : \"/api/users\" teststeps : - name : \u521b\u5efa\u7528\u6237\uff08\u5e26\u7b7e\u540d\uff09 request : url : $base_url$request_url method : POST headers : X-Timestamp : ${get_timestamp()} X-Nonce : ${get_nonce()} X-Signature : \"${generate_signature({ method: $request_method, url: $request_url, timestamp: ${get_timestamp()}, nonce: ${get_nonce()}, body: {name: 'Alice', email: 'alice@example.com'}, secret_key: $secret_key })}\" json : name : \"Alice\" email : \"alice@example.com\" 10. \u6700\u4f73\u5b9e\u8df5 \u00b6 10.1 \u53c2\u6570\u547d\u540d\u89c4\u8303 \u00b6 \u63a8\u8350 \uff1a # \u2705 \u6e05\u6670\u7684\u53c2\u6570\u540d def validate_user_data ( user_data , validation_rules ): pass def check_nested_fields ( response_data , field_config ): pass \u4e0d\u63a8\u8350 \uff1a # \u274c \u6a21\u7cca\u7684\u53c2\u6570\u540d def validate ( data , rules ): pass def check ( a , b ): pass 10.2 \u51fd\u6570\u804c\u8d23\u5355\u4e00 \u00b6 \u63a8\u8350 \uff1a # \u2705 \u804c\u8d23\u5355\u4e00 def validate_email_format ( email ): \"\"\"\u53ea\u9a8c\u8bc1\u90ae\u7bb1\u683c\u5f0f\"\"\" import re pattern = r '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$' assert re . match ( pattern , email ), f \"Invalid email: { email } \" return True def validate_required_fields ( data , fields ): \"\"\"\u53ea\u9a8c\u8bc1\u5fc5\u586b\u5b57\u6bb5\"\"\" for field in fields : assert field in data , f \"Missing field: { field } \" return True \u4e0d\u63a8\u8350 \uff1a # \u274c \u804c\u8d23\u6df7\u4e71 def validate_everything ( data , config ): \"\"\"\u505a\u592a\u591a\u4e8b\u60c5\"\"\" # \u9a8c\u8bc1\u683c\u5f0f # \u9a8c\u8bc1\u5b57\u6bb5 # \u9a8c\u8bc1\u7c7b\u578b # \u9a8c\u8bc1\u4e1a\u52a1\u903b\u8f91 # ... pass 10.3 \u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f \u00b6 \u63a8\u8350 \uff1a # \u2705 \u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f def validate_price ( price ): assert isinstance ( price , ( int , float )), \\ f \"Price must be number, got { type ( price ) . __name__ } \" assert price >= 0 , \\ f \"Price must be non-negative, got { price } \" assert price <= 1000000 , \\ f \"Price must be less than 1000000, got { price } \" return True \u4e0d\u63a8\u8350 \uff1a # \u274c \u6a21\u7cca\u7684\u9519\u8bef\u4fe1\u606f def validate_price ( price ): assert isinstance ( price , ( int , float )), \"Invalid type\" assert price >= 0 , \"Invalid value\" assert price <= 1000000 , \"Too large\" return True 10.4 \u5408\u7406\u4f7f\u7528\u901a\u914d\u7b26 \u00b6 \u63a8\u8350 \uff1a # \u2705 \u901a\u914d\u7b26\u914d\u5408\u5177\u4f53\u5b57\u6bb5 script : # \u5148\u68c0\u67e5\u57fa\u672c\u7ed3\u6784 - assert isinstance(content.products, list) - assert len(content.products) > 0 # \u518d\u4f7f\u7528\u901a\u914d\u7b26\u6279\u91cf\u68c0\u67e5 - ${check(content, products.*.id, products.*.price )} \u4e0d\u63a8\u8350 \uff1a # \u274c \u8fc7\u5ea6\u4f9d\u8d56\u901a\u914d\u7b26 script : # \u76f4\u63a5\u4f7f\u7528\u901a\u914d\u7b26\uff0c\u9519\u8bef\u4fe1\u606f\u4e0d\u660e\u786e - ${check(content, products.*.*.*)} 10.5 \u6587\u6863\u6ce8\u91ca \u00b6 \u63a8\u8350 \uff1a def check_nested_list_fields ( data , config ): \"\"\" \u68c0\u67e5\u5d4c\u5957\u5217\u8868\u4e2d\u7684\u5b57\u6bb5 Args: data (dict): \u54cd\u5e94\u6570\u636e config (dict): \u914d\u7f6e\u5bf9\u8c61 - list_path (str): \u5916\u5c42\u5217\u8868\u8def\u5f84 - nested_field (str): \u5185\u5c42\u5217\u8868\u5b57\u6bb5\u540d - check_fields (list): \u9700\u8981\u68c0\u67e5\u7684\u5b57\u6bb5\u5217\u8868 Returns: bool: \u6821\u9a8c\u662f\u5426\u901a\u8fc7 Raises: AssertionError: \u5f53\u6821\u9a8c\u5931\u8d25\u65f6 Example: >>> check_nested_list_fields(response, { ... \"list_path\": \"products\", ... \"nested_field\": \"sku\", ... \"check_fields\": [\"id\", \"price\"] ... }) \"\"\" pass 10.6 \u6027\u80fd\u8003\u8651 \u00b6 \u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c \uff1a - \u2705 \u9002\u5408\uff1a\u6570\u636e\u91cf < 1000 \u6761 - \u26a0\ufe0f \u6ce8\u610f\uff1a\u6570\u636e\u91cf 1000-10000 \u6761 - \u274c \u4e0d\u63a8\u8350\uff1a\u6570\u636e\u91cf > 10000 \u6761\uff08\u8003\u8651\u62bd\u6837\u6821\u9a8c\uff09 \u62bd\u6837\u6821\u9a8c\u793a\u4f8b \uff1a def check_large_list ( data , field_path , sample_size = 100 ): \"\"\" \u5927\u5217\u8868\u62bd\u6837\u6821\u9a8c Args: data: \u6570\u636e field_path: \u5b57\u6bb5\u8def\u5f84 sample_size: \u62bd\u6837\u6570\u91cf \"\"\" import random items = _get_field_value ( data , field_path ) assert isinstance ( items , list ), \"Field must be a list\" # \u5982\u679c\u6570\u636e\u91cf\u5c0f\uff0c\u5168\u91cf\u68c0\u67e5 if len ( items ) <= sample_size : check_items = items else : # \u5927\u6570\u636e\u91cf\uff0c\u968f\u673a\u62bd\u6837 check_items = random . sample ( items , sample_size ) # \u6821\u9a8c\u62bd\u6837\u6570\u636e for item in check_items : assert item is not None # \u5176\u4ed6\u6821\u9a8c\u903b\u8f91... return True \ud83d\udcdd \u603b\u7ed3 \u00b6 ApiMeter \u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u53c2\u6570\u652f\u6301\u8ba9 API \u6d4b\u8bd5\u53d8\u5f97\u66f4\u52a0\u7075\u6d3b\u548c\u5f3a\u5927\uff1a \u7279\u6027 \u4f7f\u7528\u573a\u666f \u4f18\u52bf \u5217\u8868\u53c2\u6570 \u7b7e\u540d\u751f\u6210\u3001\u6279\u91cf\u6821\u9a8c \u7b80\u5316\u53c2\u6570\u4f20\u9012 \u5b57\u5178\u53c2\u6570 \u590d\u6742\u914d\u7f6e\u4f20\u9012 \u8bed\u4e49\u6e05\u6670 \u5d4c\u5957\u5bf9\u8c61 \u591a\u5c42\u6570\u636e\u6821\u9a8c \u529f\u80fd\u5f3a\u5927 \u901a\u914d\u7b26 * \u6279\u91cf\u5b57\u6bb5\u6821\u9a8c \u9ad8\u6548\u4fbf\u6377 \u6b63\u5219 ~= \u683c\u5f0f\u6821\u9a8c \u7075\u6d3b\u5339\u914d \u7c7b\u578b @= \u6570\u636e\u7ed3\u6784\u6821\u9a8c \u7c7b\u578b\u5b89\u5168 \u5305\u542b =* \u679a\u4e3e\u503c\u6821\u9a8c \u8303\u56f4\u68c0\u67e5 \u4e0b\u4e00\u6b65\u5b66\u4e60 \uff1a - \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 - \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b - \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c \u6709\u95ee\u9898\uff1f \u67e5\u770b FAQ \u6216 \u63d0\u4ea4 Issue","title":"\u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5"},{"location":"features/advanced-functions/#_1","text":"\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd ApiMeter \u4e2d\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u9ad8\u7ea7\u53c2\u6570\u4f20\u9012\u529f\u80fd\uff0c\u5305\u62ec\u5217\u8868\u53c2\u6570\u3001\u5b57\u5178\u53c2\u6570\u3001\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570\u4ee5\u53ca\u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c\u7b49\u5f3a\u5927\u7279\u6027\u3002","title":"\u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5"},{"location":"features/advanced-functions/#_2","text":"\u4e3a\u4ec0\u4e48\u9700\u8981\u9ad8\u7ea7\u53c2\u6570\u89e3\u6790\uff1f 1. \u57fa\u7840\u56de\u987e 2. \u94fe\u5f0f\u53d6\u503c 3. \u5217\u8868\u53c2\u6570\u89e3\u6790 4. \u5b57\u5178\u5bf9\u8c61\u53c2\u6570\u89e3\u6790 5. \u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570 6. \u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c 7. \u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c 8. \u7c7b\u578b\u6821\u9a8c 9. \u7efc\u5408\u5b9e\u6218\u6848\u4f8b 10. \u6700\u4f73\u5b9e\u8df5","title":"\ud83d\udcda \u76ee\u5f55"},{"location":"features/advanced-functions/#_3","text":"","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u9ad8\u7ea7\u53c2\u6570\u89e3\u6790\uff1f"},{"location":"features/advanced-functions/#_4","text":"\u5728\u5b9e\u9645 API \u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u9047\u5230\u4ee5\u4e0b\u590d\u6742\u573a\u666f\uff1a \u573a\u666f 1\uff1a\u7b7e\u540d\u751f\u6210 # \u9700\u8981\u5c06\u591a\u4e2a\u53c2\u6570\u7ec4\u5408\u751f\u6210\u7b7e\u540d sign = md5 ( device_sn + os_platform + app_version + timestamp ) \u573a\u666f 2\uff1a\u6279\u91cf\u6570\u636e\u6821\u9a8c { \"products\" : [ { \"id\" : 1 , \"sku\" : [{ \"id\" : \"A\" , \"price\" : 100 }, { \"id\" : \"B\" , \"price\" : 200 }]}, { \"id\" : 2 , \"sku\" : [{ \"id\" : \"C\" , \"price\" : 150 }, { \"id\" : \"D\" , \"price\" : 250 }]} ] } \u9700\u8981\u6821\u9a8c\u6240\u6709 sku \u4e2d\u7684 id \u548c price \u5b57\u6bb5\u3002 \u573a\u666f 3\uff1a\u590d\u6742\u914d\u7f6e\u4f20\u9012 # \u9700\u8981\u4f20\u9012\u590d\u6742\u7684\u914d\u7f6e\u5bf9\u8c61 validate_data ( response , { \"list_path\" : \"products\" , \"nested_field\" : \"sku\" , \"check_fields\" : [ \"id\" , \"price\" , \"currency\" ] }) \u4f20\u7edf\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u65e0\u6cd5\u4f18\u96c5\u5730\u5904\u7406\u8fd9\u4e9b\u573a\u666f\uff0cApiMeter \u7684\u9ad8\u7ea7\u53c2\u6570\u89e3\u6790\u529f\u80fd\u5b8c\u7f8e\u89e3\u51b3\u4e86\u8fd9\u4e9b\u95ee\u9898\u3002","title":"\u5b9e\u9645\u573a\u666f\u7684\u590d\u6742\u6027"},{"location":"features/advanced-functions/#1","text":"","title":"1. \u57fa\u7840\u56de\u987e"},{"location":"features/advanced-functions/#11","text":"\u6700\u57fa\u7840\u7684\u7528\u6cd5\uff0c\u4f20\u9012\u5355\u4e2a\u53c2\u6570\uff1a # debugtalk.py def validate_token(token) : assert len(token) == 16, f\"Token length should be 16, got {len(token)}\" return True # \u6d4b\u8bd5\u7528\u4f8b script : - ${validate_token(content.token)}","title":"1.1 \u7b80\u5355\u53c2\u6570\u4f20\u9012"},{"location":"features/advanced-functions/#12","text":"\u4f20\u9012\u591a\u4e2a\u72ec\u7acb\u53c2\u6570\uff1a # debugtalk.py def get_sign(device_sn, os_platform, app_version) : content = f\"{device_sn}{os_platform}{app_version}\" return hashlib.md5(content.encode()).hexdigest() # \u6d4b\u8bd5\u7528\u4f8b request : json : sign : ${get_sign($device_sn, $os_platform, $app_version)}","title":"1.2 \u591a\u4e2a\u53c2\u6570\u4f20\u9012"},{"location":"features/advanced-functions/#2","text":"","title":"2. \u94fe\u5f0f\u53d6\u503c"},{"location":"features/advanced-functions/#21","text":"\u76f4\u63a5\u8bbf\u95ee\u54cd\u5e94\u6570\u636e\u7684\u6df1\u5c42\u5b57\u6bb5\uff1a # debugtalk.py def validate_user_name(name) : assert len(name) > 0, \"User name cannot be empty\" return True # \u6d4b\u8bd5\u7528\u4f8b - \u94fe\u5f0f\u8bbf\u95ee script : # \u8bbf\u95ee content.data.user.profile.name - ${validate_user_name(content.data.user.profile.name)} \u54cd\u5e94\u6570\u636e\u793a\u4f8b\uff1a { \"data\" : { \"user\" : { \"profile\" : { \"name\" : \"Alice\" , \"age\" : 25 } } } }","title":"2.1 \u5168\u5c40\u53d8\u91cf\u94fe\u5f0f\u53d6\u503c"},{"location":"features/advanced-functions/#22","text":"\u63d0\u53d6\u53d8\u91cf\u540e\u652f\u6301\u94fe\u5f0f\u8bbf\u95ee\uff1a extract : - user_info : content.data.user script : # \u4f7f\u7528\u63d0\u53d6\u7684\u53d8\u91cf\u8fdb\u884c\u94fe\u5f0f\u8bbf\u95ee - ${validate_user_name($user_info.profile.name)}","title":"2.2 \u81ea\u5b9a\u4e49\u53d8\u91cf\u94fe\u5f0f\u53d6\u503c"},{"location":"features/advanced-functions/#23","text":"script : # \u8bbf\u95ee\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5b57\u6bb5 - ${validate_price(content.products[0].price)} # \u8bbf\u95ee\u5d4c\u5957\u6570\u7ec4 - ${validate_sku_id(content.products[0].sku[0].id)}","title":"2.3 \u6570\u7ec4\u7d22\u5f15\u8bbf\u95ee"},{"location":"features/advanced-functions/#3","text":"","title":"3. \u5217\u8868\u53c2\u6570\u89e3\u6790"},{"location":"features/advanced-functions/#31","text":"\u4f7f\u7528\u4e2d\u62ec\u53f7 [] \u4f20\u9012\u5217\u8868\u53c2\u6570\uff1a ${function_name([$param1, $param2, $param3])}","title":"3.1 \u57fa\u672c\u8bed\u6cd5"},{"location":"features/advanced-functions/#32","text":"\u573a\u666f\u63cf\u8ff0 \uff1a API \u9700\u8981\u5c06\u591a\u4e2a\u53c2\u6570\u7ec4\u5408\u540e\u751f\u6210\u7b7e\u540d\uff0c\u4f20\u7edf\u65b9\u5f0f\u9700\u8981\u9010\u4e2a\u4f20\u9012\u53c2\u6570\uff0c\u4f7f\u7528\u5217\u8868\u53c2\u6570\u53ef\u4ee5\u66f4\u7b80\u6d01\u3002 debugtalk.py \uff1a import hashlib import hmac SECRET_KEY = \"DebugTalk\" def get_sign_v2 ( args_list ): \"\"\" \u4f7f\u7528\u5217\u8868\u53c2\u6570\u751f\u6210\u7b7e\u540d Args: args_list: \u53c2\u6570\u5217\u8868\uff0c\u5982 [\"device_001\", \"ios\", \"2.8.6\"] Returns: \u7b7e\u540d\u5b57\u7b26\u4e32 \"\"\" content = \"\" . join ( args_list ) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) sign = hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () return sign \u6d4b\u8bd5\u7528\u4f8b \uff1a config : variables : device_sn : \"TEST_DEVICE_001\" os_platform : \"ios\" app_version : \"2.8.6\" teststeps : - name : \u83b7\u53d6\u8bbf\u95ee\u4ee4\u724c request : url : /api/get-token method : POST json : # \u4f7f\u7528\u5217\u8868\u53c2\u6570\u4f20\u9012 sign : ${get_sign_v2([$device_sn, $os_platform, $app_version])} script : - assert status_code == 200","title":"3.2 \u4f7f\u7528\u573a\u666f\uff1a\u7b7e\u540d\u751f\u6210"},{"location":"features/advanced-functions/#33","text":"\u573a\u666f\u63cf\u8ff0 \uff1a \u9700\u8981\u540c\u65f6\u6821\u9a8c\u591a\u4e2a\u5b57\u6bb5\u662f\u5426\u5b58\u5728\u3002 debugtalk.py \uff1a def check_fields_exist ( data , fields_list ): \"\"\" \u6279\u91cf\u68c0\u67e5\u5b57\u6bb5\u662f\u5426\u5b58\u5728 Args: data: \u6570\u636e\u5bf9\u8c61 fields_list: \u5b57\u6bb5\u5217\u8868\uff0c\u5982 [\"id\", \"name\", \"email\"] Returns: True if all fields exist \"\"\" for field in fields_list : assert field in data , f \"Missing required field: { field } \" return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u6279\u91cf\u68c0\u67e5\u7528\u6237\u5fc5\u586b\u5b57\u6bb5 - ${check_fields_exist(content.user, [id, name, email, phone])} # \u6279\u91cf\u68c0\u67e5\u4ea7\u54c1\u5fc5\u586b\u5b57\u6bb5 - ${check_fields_exist(content.product, [id, title, price, stock])}","title":"3.3 \u4f7f\u7528\u573a\u666f\uff1a\u6279\u91cf\u6821\u9a8c"},{"location":"features/advanced-functions/#34","text":"variables : required_user_fields : [ \"id\" , \"name\" , \"email\" ] required_product_fields : [ \"id\" , \"title\" , \"price\" ] script : # \u5f15\u7528\u53d8\u91cf\u5217\u8868 - ${check_fields_exist(content.user, $required_user_fields)} - ${check_fields_exist(content.product, $required_product_fields)}","title":"3.4 \u5217\u8868\u53c2\u6570 + \u53d8\u91cf\u5f15\u7528"},{"location":"features/advanced-functions/#4","text":"","title":"4. \u5b57\u5178\u5bf9\u8c61\u53c2\u6570\u89e3\u6790"},{"location":"features/advanced-functions/#41","text":"\u4f7f\u7528\u82b1\u62ec\u53f7 {} \u4f20\u9012\u5b57\u5178\u53c2\u6570\uff1a ${function_name({key1 : value1, key2 : value2})} \u6ce8\u610f \uff1a\u5b57\u5178\u53c2\u6570\u901a\u5e38\u9700\u8981\u7528\u5f15\u53f7\u5305\u88f9\uff1a \"${function_name({key1: value1, key2: value2})}\"","title":"4.1 \u57fa\u672c\u8bed\u6cd5"},{"location":"features/advanced-functions/#42","text":"\u573a\u666f\u63cf\u8ff0 \uff1a \u7b7e\u540d\u7b97\u6cd5\u9700\u8981\u591a\u4e2a\u53c2\u6570\uff0c\u4f7f\u7528\u5b57\u5178\u53ef\u4ee5\u8ba9\u53c2\u6570\u66f4\u6709\u8bed\u4e49\u3002 debugtalk.py \uff1a import hashlib import hmac SECRET_KEY = \"DebugTalk\" def get_sign_v3 ( args_dict ): \"\"\" \u4f7f\u7528\u5b57\u5178\u53c2\u6570\u751f\u6210\u7b7e\u540d Args: args_dict: \u53c2\u6570\u5b57\u5178\uff0c\u5982 { \"device_sn\": \"xxx\", \"os_platform\": \"ios\", \"app_version\": \"2.8.6\" } Returns: \u7b7e\u540d\u5b57\u7b26\u4e32 \"\"\" content = \"\" . join ([ args_dict [ \"device_sn\" ], args_dict [ \"os_platform\" ], args_dict [ \"app_version\" ] ]) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) sign = hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () return sign \u6d4b\u8bd5\u7528\u4f8b \uff1a request : json : # \u4f7f\u7528\u5b57\u5178\u53c2\u6570\uff08\u6ce8\u610f\u5916\u5c42\u5f15\u53f7\uff09 sign : \"${get_sign_v3({ device_sn: $device_sn, os_platform: $os_platform, app_version: $app_version })}\"","title":"4.2 \u4f7f\u7528\u573a\u666f\uff1a\u590d\u6742\u7b7e\u540d\u914d\u7f6e"},{"location":"features/advanced-functions/#43","text":"\u573a\u666f\u63cf\u8ff0 \uff1a \u6570\u636e\u6821\u9a8c\u9700\u8981\u590d\u6742\u7684\u914d\u7f6e\u4fe1\u606f\u3002 debugtalk.py \uff1a def validate_with_config ( data , config ): \"\"\" \u6839\u636e\u914d\u7f6e\u6821\u9a8c\u6570\u636e Args: data: \u5f85\u6821\u9a8c\u6570\u636e config: \u914d\u7f6e\u5bf9\u8c61\uff0c\u5982 { \"min_length\": 10, \"max_length\": 100, \"allow_empty\": false } Returns: True if validation passes \"\"\" min_len = config . get ( \"min_length\" , 0 ) max_len = config . get ( \"max_length\" , float ( 'inf' )) allow_empty = config . get ( \"allow_empty\" , False ) if not allow_empty : assert len ( data ) > 0 , \"Data cannot be empty\" assert min_len <= len ( data ) <= max_len , \\ f \"Data length { len ( data ) } not in range [ { min_len } , { max_len } ]\" return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u4f20\u9012\u914d\u7f6e\u5bf9\u8c61 - \"${validate_with_config(content.description, { min_length: 10, max_length: 500, allow_empty: false })}\"","title":"4.3 \u4f7f\u7528\u573a\u666f\uff1a\u914d\u7f6e\u5bf9\u8c61\u4f20\u9012"},{"location":"features/advanced-functions/#5","text":"","title":"5. \u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570"},{"location":"features/advanced-functions/#51","text":"\u573a\u666f\u63cf\u8ff0 \uff1a \u54cd\u5e94\u6570\u636e\u5305\u542b\u591a\u5c42\u5d4c\u5957\u7ed3\u6784\uff0c\u9700\u8981\u6279\u91cf\u6821\u9a8c\u6240\u6709\u5d4c\u5957\u6570\u636e\u7684\u7279\u5b9a\u5b57\u6bb5\u3002 \u54cd\u5e94\u6570\u636e\u7ed3\u6784 \uff1a { \"productList\" : [ { \"id\" : 1 , \"name\" : \"Product 1\" , \"sku\" : [ { \"id\" : \"A\" , \"amount\" : 100 , \"currency\" : \"USD\" }, { \"id\" : \"B\" , \"amount\" : 200 , \"currency\" : \"USD\" } ] }, { \"id\" : 2 , \"name\" : \"Product 2\" , \"sku\" : [ { \"id\" : \"C\" , \"amount\" : 150 , \"currency\" : \"EUR\" }, { \"id\" : \"D\" , \"amount\" : 250 , \"currency\" : \"EUR\" } ] } ] } debugtalk.py \uff1a def check_nested_list_fields ( data , config ): \"\"\" \u68c0\u67e5\u5d4c\u5957\u5217\u8868\u4e2d\u7684\u5b57\u6bb5 Args: data: \u54cd\u5e94\u6570\u636e config: \u914d\u7f6e\u5bf9\u8c61 { \"list_path\": \"productList\", # \u5916\u5c42\u5217\u8868\u8def\u5f84 \"nested_field\": \"sku\", # \u5185\u5c42\u5217\u8868\u5b57\u6bb5\u540d \"check_fields\": [\"id\", \"amount\"] # \u9700\u8981\u68c0\u67e5\u7684\u5b57\u6bb5 } Returns: True if all validations pass \"\"\" list_path = config [ \"list_path\" ] nested_field = config [ \"nested_field\" ] check_fields = config [ \"check_fields\" ] # \u83b7\u53d6\u5916\u5c42\u5217\u8868 items = data . get ( list_path , []) assert len ( items ) > 0 , f \"List ' { list_path } ' is empty\" # \u904d\u5386\u5916\u5c42\u5217\u8868 for item in items : # \u83b7\u53d6\u5185\u5c42\u5217\u8868 nested_items = item . get ( nested_field , []) assert len ( nested_items ) > 0 , \\ f \"Nested field ' { nested_field } ' is empty in item { item . get ( 'id' ) } \" # \u904d\u5386\u5185\u5c42\u5217\u8868\uff0c\u68c0\u67e5\u5b57\u6bb5 for nested_item in nested_items : for field in check_fields : assert field in nested_item , \\ f \"Field ' { field } ' not found in nested item\" assert nested_item [ field ] is not None , \\ f \"Field ' { field } ' is None\" return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u68c0\u67e5\u5d4c\u5957\u5217\u8868\u4e2d\u7684\u5b57\u6bb5 - \"${check_nested_list_fields(content, { list_path: productList, nested_field: sku, check_fields: [id, amount, currency] })}\"","title":"5.1 \u4f7f\u7528\u573a\u666f\uff1a\u5d4c\u5957\u5217\u8868\u6279\u91cf\u6821\u9a8c"},{"location":"features/advanced-functions/#52","text":"debugtalk.py \uff1a def validate_complex_data ( data , validation_rules ): \"\"\" \u4f7f\u7528\u590d\u6742\u89c4\u5219\u9a8c\u8bc1\u6570\u636e Args: data: \u5f85\u9a8c\u8bc1\u6570\u636e validation_rules: \u9a8c\u8bc1\u89c4\u5219 { \"user\": { \"required_fields\": [\"id\", \"name\"], \"name_min_length\": 2 }, \"product\": { \"required_fields\": [\"id\", \"price\"], \"price_min\": 0 } } \"\"\" # \u9a8c\u8bc1 user \u6570\u636e if \"user\" in validation_rules : user_rules = validation_rules [ \"user\" ] user_data = data . get ( \"user\" , {}) # \u68c0\u67e5\u5fc5\u586b\u5b57\u6bb5 for field in user_rules . get ( \"required_fields\" , []): assert field in user_data , f \"User missing field: { field } \" # \u68c0\u67e5\u540d\u79f0\u957f\u5ea6 if \"name_min_length\" in user_rules : min_len = user_rules [ \"name_min_length\" ] assert len ( user_data . get ( \"name\" , \"\" )) >= min_len # \u9a8c\u8bc1 product \u6570\u636e if \"product\" in validation_rules : product_rules = validation_rules [ \"product\" ] product_data = data . get ( \"product\" , {}) # \u68c0\u67e5\u5fc5\u586b\u5b57\u6bb5 for field in product_rules . get ( \"required_fields\" , []): assert field in product_data , f \"Product missing field: { field } \" # \u68c0\u67e5\u4ef7\u683c if \"price_min\" in product_rules : price_min = product_rules [ \"price_min\" ] assert product_data . get ( \"price\" , - 1 ) >= price_min return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u4f20\u9012\u591a\u7ea7\u914d\u7f6e\u5bf9\u8c61 - \"${validate_complex_data(content, { user: { required_fields: [id, name, email], name_min_length: 2 }, product: { required_fields: [id, price, stock], price_min: 0 } })}\"","title":"5.2 \u4f7f\u7528\u573a\u666f\uff1a\u591a\u7ea7\u914d\u7f6e\u5bf9\u8c61"},{"location":"features/advanced-functions/#6","text":"","title":"6. \u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c"},{"location":"features/advanced-functions/#61","text":"\u4f7f\u7528 * \u901a\u914d\u7b26\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u5c42\u7ea7\u7684\u6570\u636e\uff0c\u5b9e\u73b0\u6279\u91cf\u6821\u9a8c\u3002 \u8bed\u6cd5 \uff1a path.to.*.field path.to.*.nested.*.field","title":"6.1 \u901a\u914d\u7b26 * \u8bed\u6cd5"},{"location":"features/advanced-functions/#62","text":"\u573a\u666f \uff1a\u6821\u9a8c\u6240\u6709\u4ea7\u54c1\u7684 ID \u548c\u4ef7\u683c\u3002 \u54cd\u5e94\u6570\u636e \uff1a { \"products\" : [ { \"id\" : 1 , \"price\" : 100 }, { \"id\" : 2 , \"price\" : 200 }, { \"id\" : 3 , \"price\" : 300 } ] } debugtalk.py \uff1a def check ( data , * field_paths ): \"\"\" \u901a\u7528\u5b57\u6bb5\u68c0\u67e5\u51fd\u6570 \u652f\u6301\u901a\u914d\u7b26\u8def\u5f84 Args: data: \u54cd\u5e94\u6570\u636e *field_paths: \u5b57\u6bb5\u8def\u5f84\u5217\u8868\uff0c\u652f\u6301\u901a\u914d\u7b26 \u5982: \"products.*.id\", \"products.*.price\" \"\"\" for path in field_paths : _check_field_path ( data , path ) return True def _check_field_path ( data , path ): \"\"\"\u68c0\u67e5\u5355\u4e2a\u5b57\u6bb5\u8def\u5f84\"\"\" parts = path . split ( '.' ) _recursive_check ( data , parts ) def _recursive_check ( data , parts ): \"\"\"\u9012\u5f52\u68c0\u67e5\u5b57\u6bb5\"\"\" if not parts : # \u8def\u5f84\u68c0\u67e5\u5b8c\u6bd5\uff0c\u786e\u4fdd\u6570\u636e\u4e0d\u4e3a None assert data is not None , \"Field value is None\" return part = parts [ 0 ] remaining = parts [ 1 :] if part == '*' : # \u901a\u914d\u7b26\uff1a\u904d\u5386\u5217\u8868\u6216\u5b57\u5178 if isinstance ( data , list ): for item in data : _recursive_check ( item , remaining ) elif isinstance ( data , dict ): for value in data . values (): _recursive_check ( value , remaining ) else : # \u666e\u901a\u5b57\u6bb5 if isinstance ( data , dict ): assert part in data , f \"Field ' { part } ' not found\" _recursive_check ( data [ part ], remaining ) else : raise ValueError ( f \"Cannot access field ' { part } ' on non-dict data\" ) \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u68c0\u67e5\u6240\u6709\u4ea7\u54c1\u7684 id \u548c price - ${check(content, products.*.id, products.*.price)}","title":"6.2 \u5355\u5c42\u901a\u914d\u7b26"},{"location":"features/advanced-functions/#63","text":"\u573a\u666f \uff1a\u6821\u9a8c\u6240\u6709\u4ea7\u54c1\u7684\u6240\u6709 SKU \u7684\u5b57\u6bb5\u3002 \u54cd\u5e94\u6570\u636e \uff1a { \"products\" : [ { \"id\" : 1 , \"sku\" : [ { \"id\" : \"A\" , \"amount\" : 100 , \"currency\" : \"USD\" }, { \"id\" : \"B\" , \"amount\" : 200 , \"currency\" : \"USD\" } ] }, { \"id\" : 2 , \"sku\" : [ { \"id\" : \"C\" , \"amount\" : 150 , \"currency\" : \"EUR\" } ] } ] } \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u68c0\u67e5\u6240\u6709\u4ea7\u54c1\u7684\u6240\u6709 SKU \u7684\u5b57\u6bb5 - ${check(content, products.*.id, products.*.sku.*.id, products.*.sku.*.amount, products.*.sku.*.currency )}","title":"6.3 \u591a\u5c42\u901a\u914d\u7b26"},{"location":"features/advanced-functions/#64","text":"script : # \u68c0\u67e5\u5d4c\u5957\u6df1\u5c42\u6570\u636e - ${check(content, data.product.purchasePlan.*.sku.*.id, data.product.purchasePlan.*.sku.*.amount, data.product.purchasePlan.*.sku.*.origin_amount, data.product.purchasePlan.*.sku.*.currency, data.product.purchasePlan.*.sku.*.duration )}","title":"6.4 \u901a\u914d\u7b26 + \u94fe\u5f0f\u53d6\u503c"},{"location":"features/advanced-functions/#7","text":"","title":"7. \u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c"},{"location":"features/advanced-functions/#71","text":"\u4f7f\u7528 ~= \u64cd\u4f5c\u7b26\u8fdb\u884c\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 \u8bed\u6cd5 \uff1a 'field_name ~= regex_pattern'","title":"7.1 \u6b63\u5219\u8868\u8fbe\u5f0f\u8bed\u6cd5 ~="},{"location":"features/advanced-functions/#72-url","text":"debugtalk.py \uff08\u6269\u5c55 check \u51fd\u6570\uff09\uff1a import re def check ( data , * rules ): \"\"\" \u901a\u7528\u68c0\u67e5\u51fd\u6570 \u652f\u6301\uff1a - \u901a\u914d\u7b26\u8def\u5f84: \"products.*.id\" - \u6b63\u5219\u8868\u8fbe\u5f0f: \"_url ~= ^https?://.*\" - \u5305\u542b\u6821\u9a8c: \"status =* [active, pending]\" - \u7c7b\u578b\u6821\u9a8c: \"user @= dict\" \"\"\" for rule in rules : if isinstance ( rule , str ) and ' ~= ' in rule : # \u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c field , pattern = rule . split ( ' ~= ' ) field = field . strip () pattern = pattern . strip () _check_regex ( data , field , pattern ) else : # \u666e\u901a\u5b57\u6bb5\u8def\u5f84\u6821\u9a8c _check_field_path ( data , rule ) return True def _check_regex ( data , field , pattern ): \"\"\"\u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c\"\"\" value = _get_field_value ( data , field ) assert re . match ( pattern , str ( value )), \\ f \"Field ' { field } ' value ' { value } ' does not match pattern ' { pattern } '\" \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # URL \u683c\u5f0f\u6821\u9a8c - ${check(content, '_url ~= ^https?://[^\\s/$.?#].[^\\s]*$' )} # \u90ae\u7bb1\u683c\u5f0f\u6821\u9a8c - ${check(content, 'user.email ~= ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$' )} # \u7535\u8bdd\u53f7\u7801\u683c\u5f0f\u6821\u9a8c - ${check(content, 'user.phone ~= ^1[3-9]\\d{9}$' )}","title":"7.2 \u4f7f\u7528\u573a\u666f\uff1aURL \u683c\u5f0f\u6821\u9a8c"},{"location":"features/advanced-functions/#8","text":"","title":"8. \u7c7b\u578b\u6821\u9a8c"},{"location":"features/advanced-functions/#81","text":"\u4f7f\u7528 @= \u64cd\u4f5c\u7b26\u8fdb\u884c\u7c7b\u578b\u6821\u9a8c\u3002 \u8bed\u6cd5 \uff1a 'field_name @= type_name' \u652f\u6301\u7684\u7c7b\u578b \uff1a - dict - \u5b57\u5178\u7c7b\u578b - list - \u5217\u8868\u7c7b\u578b - str - \u5b57\u7b26\u4e32\u7c7b\u578b - int - \u6574\u6570\u7c7b\u578b - float - \u6d6e\u70b9\u6570\u7c7b\u578b - bool - \u5e03\u5c14\u7c7b\u578b","title":"8.1 \u7c7b\u578b\u6821\u9a8c\u8bed\u6cd5 @="},{"location":"features/advanced-functions/#82","text":"debugtalk.py \uff08\u7ee7\u7eed\u6269\u5c55 check \u51fd\u6570\uff09\uff1a def check ( data , * rules ): \"\"\"\u901a\u7528\u68c0\u67e5\u51fd\u6570\"\"\" for rule in rules : if isinstance ( rule , str ): if ' ~= ' in rule : # \u6b63\u5219\u8868\u8fbe\u5f0f field , pattern = rule . split ( ' ~= ' ) _check_regex ( data , field . strip (), pattern . strip ()) elif ' =* ' in rule : # \u5305\u542b\u6821\u9a8c field , values = rule . split ( ' =* ' ) _check_contains ( data , field . strip (), values . strip ()) elif ' @= ' in rule : # \u7c7b\u578b\u6821\u9a8c field , type_name = rule . split ( ' @= ' ) _check_type ( data , field . strip (), type_name . strip ()) else : # \u5b57\u6bb5\u8def\u5f84 _check_field_path ( data , rule ) else : _check_field_path ( data , rule ) return True def _check_type ( data , field , type_name ): \"\"\"\u7c7b\u578b\u6821\u9a8c\"\"\" value = _get_field_value ( data , field ) type_map = { 'dict' : dict , 'list' : list , 'str' : str , 'int' : int , 'float' : float , 'bool' : bool } expected_type = type_map . get ( type_name ) assert expected_type , f \"Unknown type: { type_name } \" assert isinstance ( value , expected_type ), \\ f \"Field ' { field } ' type is { type ( value ) . __name__ } , expected { type_name } \" \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u7c7b\u578b\u6821\u9a8c - ${check(content, 'user @= dict', 'user.id @= int', 'user.name @= str', 'user.is_active @= bool', 'products @= list' )}","title":"8.2 \u4f7f\u7528\u573a\u666f\uff1a\u6570\u636e\u7ed3\u6784\u6821\u9a8c"},{"location":"features/advanced-functions/#83","text":"\u4f7f\u7528 =* \u64cd\u4f5c\u7b26\u68c0\u67e5\u503c\u662f\u5426\u5728\u6307\u5b9a\u8303\u56f4\u5185\u3002 \u8bed\u6cd5 \uff1a 'field_name =* [value1, value2, value3]' debugtalk.py \uff08check \u51fd\u6570\u5df2\u5305\u542b\uff09\uff1a def _check_contains ( data , field , values_str ): \"\"\"\u5305\u542b\u6821\u9a8c\"\"\" # \u89e3\u6790\u503c\u5217\u8868: \"[USD, CNY, EUR]\" -> [\"USD\", \"CNY\", \"EUR\"] values_str = values_str . strip ( '[]' ) expected_values = [ v . strip () for v in values_str . split ( ',' )] value = _get_field_value ( data , field ) assert str ( value ) in expected_values , \\ f \"Field ' { field } ' value ' { value } ' not in { expected_values } \" \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u8d27\u5e01\u7c7b\u578b\u6821\u9a8c - ${check(content, 'default_currency =* [USD, CNY, EUR]' )} # \u72b6\u6001\u6821\u9a8c - ${check(content, 'order.status =* [pending, processing, completed, cancelled]' )}","title":"8.3 \u5305\u542b\u6821\u9a8c\u8bed\u6cd5 =*"},{"location":"features/advanced-functions/#9","text":"","title":"9. \u7efc\u5408\u5b9e\u6218\u6848\u4f8b"},{"location":"features/advanced-functions/#1-api","text":"\u54cd\u5e94\u6570\u636e \uff1a { \"_url\" : \"https://api.example.com/products\" , \"default_currency\" : \"USD\" , \"default_sku\" : { \"id\" : \"DEFAULT_001\" , \"price\" : 99.99 }, \"product\" : { \"id\" : 123 , \"name\" : \"Product Name\" , \"purchasePlan\" : [ { \"plan_id\" : \"PLAN_001\" , \"sku\" : [ { \"id\" : \"SKU_001\" , \"amount\" : 100 , \"origin_amount\" : 120 , \"currency\" : \"USD\" , \"duration\" : 30 }, { \"id\" : \"SKU_002\" , \"amount\" : 200 , \"origin_amount\" : 240 , \"currency\" : \"USD\" , \"duration\" : 60 } ] } ] } } \u6d4b\u8bd5\u7528\u4f8b \uff1a script : # \u4e00\u6b21\u6027\u6821\u9a8c\u6240\u6709\u5b57\u6bb5 - ${check(content, '_url ~= ^https?://[^\\s/$.?#].[^\\s]*$', 'default_currency =* [USD, CNY, EUR]', 'default_sku @= dict', 'product @= dict', 'product.purchasePlan @= list', product.purchasePlan.*.sku.*.id, product.purchasePlan.*.sku.*.amount, product.purchasePlan.*.sku.*.origin_amount, product.purchasePlan.*.sku.*.currency, product.purchasePlan.*.sku.*.duration )}","title":"\u6848\u4f8b 1\uff1a\u7535\u5546 API \u5b8c\u6574\u6821\u9a8c"},{"location":"features/advanced-functions/#2_1","text":"debugtalk.py \uff1a def validate_user_complete ( user_data , rules ): \"\"\" \u7528\u6237\u4fe1\u606f\u5b8c\u6574\u6821\u9a8c Args: user_data: \u7528\u6237\u6570\u636e rules: \u6821\u9a8c\u89c4\u5219 { \"required_fields\": [\"id\", \"name\", \"email\"], \"email_pattern\": \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\", \"name_min_length\": 2, \"name_max_length\": 50, \"check_permissions\": true, \"required_permissions\": [\"read\", \"write\"] } \"\"\" import re # \u68c0\u67e5\u5fc5\u586b\u5b57\u6bb5 for field in rules . get ( \"required_fields\" , []): assert field in user_data , f \"Missing required field: { field } \" assert user_data [ field ] is not None , f \"Field ' { field } ' is None\" # \u68c0\u67e5\u90ae\u7bb1\u683c\u5f0f if \"email_pattern\" in rules and \"email\" in user_data : pattern = rules [ \"email_pattern\" ] email = user_data [ \"email\" ] assert re . match ( pattern , email ), f \"Invalid email format: { email } \" # \u68c0\u67e5\u540d\u79f0\u957f\u5ea6 if \"name\" in user_data : name = user_data [ \"name\" ] min_len = rules . get ( \"name_min_length\" , 0 ) max_len = rules . get ( \"name_max_length\" , float ( 'inf' )) assert min_len <= len ( name ) <= max_len , \\ f \"Name length { len ( name ) } not in range [ { min_len } , { max_len } ]\" # \u68c0\u67e5\u6743\u9650 if rules . get ( \"check_permissions\" , False ): required_perms = rules . get ( \"required_permissions\" , []) user_perms = user_data . get ( \"permissions\" , []) for perm in required_perms : assert perm in user_perms , f \"Missing permission: { perm } \" return True \u6d4b\u8bd5\u7528\u4f8b \uff1a script : - \"${validate_user_complete(content.user, { required_fields: [id, name, email, phone], email_pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+ \\ .[a-zA-Z]{2,}$', name_min_length: 2, name_max_length: 50, check_permissions: true, required_permissions: [read, write, delete] })}\"","title":"\u6848\u4f8b 2\uff1a\u7528\u6237\u4fe1\u606f\u590d\u6742\u6821\u9a8c"},{"location":"features/advanced-functions/#3_1","text":"debugtalk.py \uff1a import hashlib import hmac import time def generate_signature ( params ): \"\"\" \u751f\u6210\u8bf7\u6c42\u7b7e\u540d Args: params: \u7b7e\u540d\u53c2\u6570 { \"method\": \"POST\", \"url\": \"/api/users\", \"timestamp\": 1234567890, \"nonce\": \"random_string\", \"body\": {...}, \"secret_key\": \"xxx\" } \"\"\" # \u6309key\u6392\u5e8f sorted_params = sorted ([ ( k , v ) for k , v in params . items () if k != 'secret_key' ]) # \u62fc\u63a5\u5b57\u7b26\u4e32 sign_str = '&' . join ([ f \" { k } = { v } \" for k , v in sorted_params ]) # \u751f\u6210\u7b7e\u540d secret = params . get ( \"secret_key\" , \"\" ) . encode ( 'utf-8' ) sign = hmac . new ( secret , sign_str . encode ( 'utf-8' ), hashlib . sha256 ) . hexdigest () return sign def get_timestamp (): \"\"\"\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u6233\"\"\" return int ( time . time ()) def get_nonce (): \"\"\"\u751f\u6210\u968f\u673a\u5b57\u7b26\u4e32\"\"\" import random import string return '' . join ( random . choices ( string . ascii_letters + string . digits , k = 16 )) \u6d4b\u8bd5\u7528\u4f8b \uff1a variables : secret_key : \"MySecretKey123\" request_method : \"POST\" request_url : \"/api/users\" teststeps : - name : \u521b\u5efa\u7528\u6237\uff08\u5e26\u7b7e\u540d\uff09 request : url : $base_url$request_url method : POST headers : X-Timestamp : ${get_timestamp()} X-Nonce : ${get_nonce()} X-Signature : \"${generate_signature({ method: $request_method, url: $request_url, timestamp: ${get_timestamp()}, nonce: ${get_nonce()}, body: {name: 'Alice', email: 'alice@example.com'}, secret_key: $secret_key })}\" json : name : \"Alice\" email : \"alice@example.com\"","title":"\u6848\u4f8b 3\uff1a\u591a\u73af\u5883\u914d\u7f6e\u7b7e\u540d"},{"location":"features/advanced-functions/#10","text":"","title":"10. \u6700\u4f73\u5b9e\u8df5"},{"location":"features/advanced-functions/#101","text":"\u63a8\u8350 \uff1a # \u2705 \u6e05\u6670\u7684\u53c2\u6570\u540d def validate_user_data ( user_data , validation_rules ): pass def check_nested_fields ( response_data , field_config ): pass \u4e0d\u63a8\u8350 \uff1a # \u274c \u6a21\u7cca\u7684\u53c2\u6570\u540d def validate ( data , rules ): pass def check ( a , b ): pass","title":"10.1 \u53c2\u6570\u547d\u540d\u89c4\u8303"},{"location":"features/advanced-functions/#102","text":"\u63a8\u8350 \uff1a # \u2705 \u804c\u8d23\u5355\u4e00 def validate_email_format ( email ): \"\"\"\u53ea\u9a8c\u8bc1\u90ae\u7bb1\u683c\u5f0f\"\"\" import re pattern = r '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$' assert re . match ( pattern , email ), f \"Invalid email: { email } \" return True def validate_required_fields ( data , fields ): \"\"\"\u53ea\u9a8c\u8bc1\u5fc5\u586b\u5b57\u6bb5\"\"\" for field in fields : assert field in data , f \"Missing field: { field } \" return True \u4e0d\u63a8\u8350 \uff1a # \u274c \u804c\u8d23\u6df7\u4e71 def validate_everything ( data , config ): \"\"\"\u505a\u592a\u591a\u4e8b\u60c5\"\"\" # \u9a8c\u8bc1\u683c\u5f0f # \u9a8c\u8bc1\u5b57\u6bb5 # \u9a8c\u8bc1\u7c7b\u578b # \u9a8c\u8bc1\u4e1a\u52a1\u903b\u8f91 # ... pass","title":"10.2 \u51fd\u6570\u804c\u8d23\u5355\u4e00"},{"location":"features/advanced-functions/#103","text":"\u63a8\u8350 \uff1a # \u2705 \u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f def validate_price ( price ): assert isinstance ( price , ( int , float )), \\ f \"Price must be number, got { type ( price ) . __name__ } \" assert price >= 0 , \\ f \"Price must be non-negative, got { price } \" assert price <= 1000000 , \\ f \"Price must be less than 1000000, got { price } \" return True \u4e0d\u63a8\u8350 \uff1a # \u274c \u6a21\u7cca\u7684\u9519\u8bef\u4fe1\u606f def validate_price ( price ): assert isinstance ( price , ( int , float )), \"Invalid type\" assert price >= 0 , \"Invalid value\" assert price <= 1000000 , \"Too large\" return True","title":"10.3 \u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f"},{"location":"features/advanced-functions/#104","text":"\u63a8\u8350 \uff1a # \u2705 \u901a\u914d\u7b26\u914d\u5408\u5177\u4f53\u5b57\u6bb5 script : # \u5148\u68c0\u67e5\u57fa\u672c\u7ed3\u6784 - assert isinstance(content.products, list) - assert len(content.products) > 0 # \u518d\u4f7f\u7528\u901a\u914d\u7b26\u6279\u91cf\u68c0\u67e5 - ${check(content, products.*.id, products.*.price )} \u4e0d\u63a8\u8350 \uff1a # \u274c \u8fc7\u5ea6\u4f9d\u8d56\u901a\u914d\u7b26 script : # \u76f4\u63a5\u4f7f\u7528\u901a\u914d\u7b26\uff0c\u9519\u8bef\u4fe1\u606f\u4e0d\u660e\u786e - ${check(content, products.*.*.*)}","title":"10.4 \u5408\u7406\u4f7f\u7528\u901a\u914d\u7b26"},{"location":"features/advanced-functions/#105","text":"\u63a8\u8350 \uff1a def check_nested_list_fields ( data , config ): \"\"\" \u68c0\u67e5\u5d4c\u5957\u5217\u8868\u4e2d\u7684\u5b57\u6bb5 Args: data (dict): \u54cd\u5e94\u6570\u636e config (dict): \u914d\u7f6e\u5bf9\u8c61 - list_path (str): \u5916\u5c42\u5217\u8868\u8def\u5f84 - nested_field (str): \u5185\u5c42\u5217\u8868\u5b57\u6bb5\u540d - check_fields (list): \u9700\u8981\u68c0\u67e5\u7684\u5b57\u6bb5\u5217\u8868 Returns: bool: \u6821\u9a8c\u662f\u5426\u901a\u8fc7 Raises: AssertionError: \u5f53\u6821\u9a8c\u5931\u8d25\u65f6 Example: >>> check_nested_list_fields(response, { ... \"list_path\": \"products\", ... \"nested_field\": \"sku\", ... \"check_fields\": [\"id\", \"price\"] ... }) \"\"\" pass","title":"10.5 \u6587\u6863\u6ce8\u91ca"},{"location":"features/advanced-functions/#106","text":"\u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c \uff1a - \u2705 \u9002\u5408\uff1a\u6570\u636e\u91cf < 1000 \u6761 - \u26a0\ufe0f \u6ce8\u610f\uff1a\u6570\u636e\u91cf 1000-10000 \u6761 - \u274c \u4e0d\u63a8\u8350\uff1a\u6570\u636e\u91cf > 10000 \u6761\uff08\u8003\u8651\u62bd\u6837\u6821\u9a8c\uff09 \u62bd\u6837\u6821\u9a8c\u793a\u4f8b \uff1a def check_large_list ( data , field_path , sample_size = 100 ): \"\"\" \u5927\u5217\u8868\u62bd\u6837\u6821\u9a8c Args: data: \u6570\u636e field_path: \u5b57\u6bb5\u8def\u5f84 sample_size: \u62bd\u6837\u6570\u91cf \"\"\" import random items = _get_field_value ( data , field_path ) assert isinstance ( items , list ), \"Field must be a list\" # \u5982\u679c\u6570\u636e\u91cf\u5c0f\uff0c\u5168\u91cf\u68c0\u67e5 if len ( items ) <= sample_size : check_items = items else : # \u5927\u6570\u636e\u91cf\uff0c\u968f\u673a\u62bd\u6837 check_items = random . sample ( items , sample_size ) # \u6821\u9a8c\u62bd\u6837\u6570\u636e for item in check_items : assert item is not None # \u5176\u4ed6\u6821\u9a8c\u903b\u8f91... return True","title":"10.6 \u6027\u80fd\u8003\u8651"},{"location":"features/advanced-functions/#_5","text":"ApiMeter \u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u53c2\u6570\u652f\u6301\u8ba9 API \u6d4b\u8bd5\u53d8\u5f97\u66f4\u52a0\u7075\u6d3b\u548c\u5f3a\u5927\uff1a \u7279\u6027 \u4f7f\u7528\u573a\u666f \u4f18\u52bf \u5217\u8868\u53c2\u6570 \u7b7e\u540d\u751f\u6210\u3001\u6279\u91cf\u6821\u9a8c \u7b80\u5316\u53c2\u6570\u4f20\u9012 \u5b57\u5178\u53c2\u6570 \u590d\u6742\u914d\u7f6e\u4f20\u9012 \u8bed\u4e49\u6e05\u6670 \u5d4c\u5957\u5bf9\u8c61 \u591a\u5c42\u6570\u636e\u6821\u9a8c \u529f\u80fd\u5f3a\u5927 \u901a\u914d\u7b26 * \u6279\u91cf\u5b57\u6bb5\u6821\u9a8c \u9ad8\u6548\u4fbf\u6377 \u6b63\u5219 ~= \u683c\u5f0f\u6821\u9a8c \u7075\u6d3b\u5339\u914d \u7c7b\u578b @= \u6570\u636e\u7ed3\u6784\u6821\u9a8c \u7c7b\u578b\u5b89\u5168 \u5305\u542b =* \u679a\u4e3e\u503c\u6821\u9a8c \u8303\u56f4\u68c0\u67e5 \u4e0b\u4e00\u6b65\u5b66\u4e60 \uff1a - \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 - \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b - \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c \u6709\u95ee\u9898\uff1f \u67e5\u770b FAQ \u6216 \u63d0\u4ea4 Issue","title":"\ud83d\udcdd \u603b\u7ed3"},{"location":"features/global-variables/","text":"\u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 \u00b6 ApiMeter \u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u5168\u5c40\u53d8\u91cf\u7cfb\u7edf\uff0c\u8ba9\u4f60\u53ef\u4ee5\u5728 script \u811a\u672c\u4e2d\u76f4\u63a5\u8bbf\u95ee\u54cd\u5e94\u6570\u636e\uff0c\u65e0\u9700\u7279\u6b8a\u8bed\u6cd5\u3002\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u6240\u6709\u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\u53ca\u5176\u9ad8\u7ea7\u7528\u6cd5\u3002 \ud83d\udcda \u76ee\u5f55 \u00b6 \u4ec0\u4e48\u662f\u5168\u5c40\u53d8\u91cf\uff1f \u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\u5217\u8868 \u94fe\u5f0f\u53d6\u503c\u8be6\u89e3 \u53d8\u91cf\u8f6c\u4e49\u529f\u80fd \u5168\u5c40\u53d8\u91cf vs \u81ea\u5b9a\u4e49\u53d8\u91cf \u5e38\u89c1\u4f7f\u7528\u573a\u666f \u6700\u4f73\u5b9e\u8df5 \u5e38\u89c1\u95ee\u9898 \u4ec0\u4e48\u662f\u5168\u5c40\u53d8\u91cf\uff1f \u00b6 \u5168\u5c40\u53d8\u91cf \u662f ApiMeter \u5728 script \u811a\u672c\u6267\u884c\u65f6\u81ea\u52a8\u6ce8\u5165\u7684\u54cd\u5e94\u76f8\u5173\u53d8\u91cf\u3002\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u811a\u672c\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u53d8\u91cf\uff0c\u65e0\u9700\u4efb\u4f55\u524d\u7f00\u6216\u7279\u6b8a\u8bed\u6cd5\u3002 \u5bf9\u6bd4\u4f20\u7edf\u65b9\u5f0f\uff1a # \u274c \u4f20\u7edf validate \u65b9\u5f0f validate : - eq : [ \"status_code\" , 200 ] # \u9700\u8981\u7528\u5b57\u7b26\u4e32\u8868\u793a - eq : [ \"content.token\" , \"xxx\" ] # \u5b57\u6bb5\u8bbf\u95ee\u9700\u8981\u70b9\u53f7\u5b57\u7b26\u4e32 # \u2705 ApiMeter script \u65b9\u5f0f script : - assert status_code == 200 # \u76f4\u63a5\u4f7f\u7528\u53d8\u91cf - assert content.token == \"xxx\" # \u652f\u6301\u5bf9\u8c61\u5c5e\u6027\u8bbf\u95ee \u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\u5217\u8868 \u00b6 \ud83d\udcca \u54cd\u5e94\u72b6\u6001\u76f8\u5173 \u00b6 1. status_code \u00b6 \u7c7b\u578b \uff1a int \u8bf4\u660e \uff1aHTTP \u54cd\u5e94\u72b6\u6001\u7801 \u793a\u4f8b \uff1a script : - assert status_code == 200 - assert status_code in [200, 201, 202] - assert 200 <= status_code < 300, f\"\u671f\u671b2xx\u72b6\u6001\u7801\uff0c\u5b9e\u9645 : { status_code } \" 2. ok \u00b6 \u7c7b\u578b \uff1a bool \u8bf4\u660e \uff1a\u8bf7\u6c42\u662f\u5426\u6210\u529f\uff08\u72b6\u6001\u7801 < 400\uff09 \u793a\u4f8b \uff1a script : - assert ok is True - assert ok is True, \"\u8bf7\u6c42\u5931\u8d25\" # \u6761\u4ef6\u5224\u65ad - | if ok: assert content.success is True else: assert content.error_code is not None 3. reason \u00b6 \u7c7b\u578b \uff1a str \u8bf4\u660e \uff1aHTTP \u72b6\u6001\u7801\u5bf9\u5e94\u7684\u539f\u56e0\u77ed\u8bed \u793a\u4f8b \uff1a script : - assert reason == \"OK\" # 200 OK - assert reason == \"Created\" # 201 Created - assert reason == \"Not Found\" # 404 Not Found 4. url \u00b6 \u7c7b\u578b \uff1a str \u8bf4\u660e \uff1a\u5b9e\u9645\u8bf7\u6c42\u7684\u5b8c\u6574 URL\uff08\u5305\u542b\u91cd\u5b9a\u5411\u540e\u7684 URL\uff09 \u793a\u4f8b \uff1a script : - assert url.startswith(\"https://\") - assert \"api\" in url - assert url.endswith(\"/users/1001\") \ud83d\udce6 \u54cd\u5e94\u4f53\u76f8\u5173 \u00b6 5. content \u00b6 \u7c7b\u578b \uff1a dict-like \uff08ResponseFieldProxy\uff09 \u8bf4\u660e \uff1a\u54cd\u5e94\u5185\u5bb9\uff0c\u81ea\u52a8\u89e3\u6790 JSON\uff08\u6700\u5e38\u7528\uff09 \u793a\u4f8b \uff1a script : # \u57fa\u7840\u8bbf\u95ee - assert content.success is True - assert content.code == 0 - assert content.message == \"success\" # \u94fe\u5f0f\u53d6\u503c - assert content.data.user.name == \"Alice\" - assert content.data.user.profile.age > 18 # \u6570\u7ec4\u8bbf\u95ee - assert len(content.items) > 0 - assert content.items[0].id is not None # \u5b57\u5178\u8bbf\u95ee - assert \"token\" in content - assert content[\"token\"] is not None 6. body \u00b6 \u7c7b\u578b \uff1a dict-like \uff08ResponseFieldProxy\uff09 \u8bf4\u660e \uff1a\u4e0e content \u7b49\u4ef7\uff0c\u539f\u59cb\u54cd\u5e94\u4f53 \u793a\u4f8b \uff1a script : - assert body.success is True - assert \"token\" in body 7. json \u00b6 \u7c7b\u578b \uff1a dict-like \uff08ResponseFieldProxy\uff09 \u8bf4\u660e \uff1a\u4e0e content \u7b49\u4ef7\uff0cJSON \u54cd\u5e94\u5185\u5bb9 \u793a\u4f8b \uff1a script : - assert json.code == 0 - assert json.data.user.name == \"Alice\" 8. text \u00b6 \u7c7b\u578b \uff1a str \u8bf4\u660e \uff1a\u54cd\u5e94\u7684\u6587\u672c\u5185\u5bb9\uff08\u672a\u89e3\u6790\u7684\u539f\u59cb\u5b57\u7b26\u4e32\uff09 \u793a\u4f8b \uff1a script : - assert len(text) > 0 - assert \"success\" in text - assert text.startswith(\"{\") # JSON \u54cd\u5e94 - assert text.startswith(\"<html\") # HTML \u54cd\u5e94 \ud83d\udccb \u54cd\u5e94\u5934\u76f8\u5173 \u00b6 9. headers \u00b6 \u7c7b\u578b \uff1a dict-like \u8bf4\u660e \uff1a\u54cd\u5e94\u5934\u4fe1\u606f \u793a\u4f8b \uff1a script : # \u8bbf\u95ee\u54cd\u5e94\u5934 - assert headers[\"Content-Type\"] == \"application/json\" - assert \"Server\" in headers # \u5927\u5c0f\u5199\u4e0d\u654f\u611f - assert headers[\"content-type\"] == \"application/json\" - assert headers[\"Content-Type\"] == headers[\"content-type\"] # \u5e38\u89c1\u54cd\u5e94\u5934\u68c0\u67e5 - assert \"application/json\" in headers[\"Content-Type\"] - assert headers.get(\"Cache-Control\") is not None 10. cookies \u00b6 \u7c7b\u578b \uff1a dict-like \u8bf4\u660e \uff1aCookie \u4fe1\u606f \u793a\u4f8b \uff1a script : # \u68c0\u67e5 Cookie \u662f\u5426\u5b58\u5728 - assert \"session_id\" in cookies - assert cookies[\"session_id\"] is not None # Cookie \u503c\u6821\u9a8c - assert len(cookies[\"session_id\"]) > 0 - assert cookies.get(\"user_id\") is not None \u23f1\ufe0f \u6027\u80fd\u76f8\u5173 \u00b6 11. elapsed \u00b6 \u7c7b\u578b \uff1a object \uff08timedelta\uff09 \u8bf4\u660e \uff1a\u8bf7\u6c42\u54cd\u5e94\u65f6\u95f4\u5bf9\u8c61 \u793a\u4f8b \uff1a script : # \u54cd\u5e94\u65f6\u95f4\u6821\u9a8c\uff08\u79d2\uff09 - assert elapsed.total_seconds < 2.0 - assert elapsed.total_seconds < 1.0, f\"\u54cd\u5e94\u8fc7\u6162 : { elapsed.total_seconds } \u79d2\" # \u6beb\u79d2\u7ea7\u522b - assert elapsed.total_seconds * 1000 < 500 # 500ms # \u590d\u6742\u6761\u4ef6 - | response_time = elapsed.total_seconds if response_time > 2.0: print(f\"\u8b66\u544a\uff1a\u54cd\u5e94\u65f6\u95f4\u8fc7\u957f {response_time}\u79d2\") assert response_time < 5.0, \"\u54cd\u5e94\u8d85\u65f6\" \ud83d\udd27 \u7f16\u7801\u76f8\u5173 \u00b6 12. encoding \u00b6 \u7c7b\u578b \uff1a str \u6216 None \u8bf4\u660e \uff1a\u54cd\u5e94\u7684\u5b57\u7b26\u7f16\u7801 \u793a\u4f8b \uff1a script : - assert encoding == \"utf-8\" - assert encoding in [\"utf-8\", \"UTF-8\", None] \ud83d\udce1 \u5b8c\u6574\u54cd\u5e94\u5bf9\u8c61 \u00b6 13. response \u00b6 \u7c7b\u578b \uff1a Response \uff08requests.Response \u5bf9\u8c61\uff09 \u8bf4\u660e \uff1a\u5b8c\u6574\u7684 requests Response \u5bf9\u8c61 \u793a\u4f8b \uff1a script : # \u8bbf\u95ee\u6240\u6709 Response \u5c5e\u6027 - assert response.status_code == 200 - assert response.ok is True - assert response.headers[\"Content-Type\"] == \"application/json\" # Response \u5bf9\u8c61\u65b9\u6cd5 - assert response.json()[\"success\"] is True - assert len(response.content) > 0 \u94fe\u5f0f\u53d6\u503c\u8be6\u89e3 \u00b6 \u4ec0\u4e48\u662f\u94fe\u5f0f\u53d6\u503c\uff1f \u00b6 \u94fe\u5f0f\u53d6\u503c\u5141\u8bb8\u4f60\u4f7f\u7528\u70b9\u53f7 . \u8bbf\u95ee\u5d4c\u5957\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7c7b\u4f3c\u4e8e JavaScript \u4e2d\u7684\u5bf9\u8c61\u5c5e\u6027\u8bbf\u95ee\u3002 \u57fa\u7840\u94fe\u5f0f\u53d6\u503c \u00b6 script : # \u4e00\u7ea7\u8bbf\u95ee - assert content.user is not None # \u4e8c\u7ea7\u8bbf\u95ee - assert content.user.name == \"Alice\" # \u4e09\u7ea7\u8bbf\u95ee - assert content.user.profile.age > 18 # \u56db\u7ea7\u53ca\u66f4\u6df1 - assert content.data.user.profile.contact.email == \"alice@example.com\" \u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\uff1a { \"data\" : { \"user\" : { \"profile\" : { \"contact\" : { \"email\" : \"alice@example.com\" } } } } } \u6570\u7ec4\u7d22\u5f15\u8bbf\u95ee \u00b6 script : # \u8bbf\u95ee\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20 - assert content.items[0].id is not None # \u8bbf\u95ee\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20 - assert content.items[-1].status == \"completed\" # \u5d4c\u5957\u6570\u7ec4\u8bbf\u95ee - assert content.users[0].orders[0].product_id == 123 \u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\uff1a { \"items\" : [ { \"id\" : 1 , \"name\" : \"Item 1\" }, { \"id\" : 2 , \"name\" : \"Item 2\" } ], \"users\" : [ { \"orders\" : [ { \"product_id\" : 123 } ] } ] } \u6df7\u5408\u8bbf\u95ee \u00b6 script : # \u5bf9\u8c61 -> \u6570\u7ec4 -> \u5bf9\u8c61 -> \u5b57\u6bb5 - assert content.data.users[0].profile.name == \"Alice\" # \u6570\u7ec4 -> \u5bf9\u8c61 -> \u6570\u7ec4 -> \u5bf9\u8c61 - assert content.orders[0].items[0].price > 0 \u94fe\u5f0f\u53d6\u503c\u7684\u7c7b\u578b\u5b89\u5168 \u00b6 script : # \u2705 \u63a8\u8350\uff1a\u5148\u68c0\u67e5\u5b58\u5728\u6027 - assert content.user is not None - assert content.user.name == \"Alice\" # \u2705 \u63a8\u8350\uff1a\u4f7f\u7528\u6761\u4ef6\u5224\u65ad - | if hasattr(content, 'user') and content.user: assert content.user.name == \"Alice\" # \u26a0\ufe0f \u6ce8\u610f\uff1a\u76f4\u63a5\u8bbf\u95ee\u53ef\u80fd\u62a5\u9519 - assert content.non_existent_field.name == \"Alice\" # AttributeError \u53d8\u91cf\u8f6c\u4e49\u529f\u80fd \u00b6 \u4e3a\u4ec0\u4e48\u9700\u8981\u53d8\u91cf\u8f6c\u4e49\uff1f \u00b6 \u5f53\u54cd\u5e94\u6570\u636e\u4e2d\u7684\u5b57\u6bb5\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u4f1a\u4ea7\u751f\u6b67\u4e49\u3002 \u95ee\u9898\u573a\u666f\uff1a { \"data\" : { \"content\" : \"\u8fd9\u662f\u5185\u5bb9\" , // \u5b57\u6bb5\u540d\u53eb content \"status_code\" : \"SUCCESS\" // \u5b57\u6bb5\u540d\u53eb status_code } } \u5728\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\uff1a def check_field_exists ( data , field_name ): # \u5e0c\u671b field_name \u662f\u5b57\u7b26\u4e32 \"content\" # \u4f46\u5982\u679c\u4f20\u9012 content\uff0c\u4f1a\u4f20\u9012\u5168\u5c40\u53d8\u91cf\u7684\u503c\uff08\u6574\u4e2a\u54cd\u5e94\u4f53\uff09 return field_name in data \u8f6c\u4e49\u8bed\u6cd5 \u00b6 \u4f7f\u7528\u53cd\u659c\u6760 \\ \u5c06\u5168\u5c40\u53d8\u91cf\u8f6c\u4e49\u4e3a\u5b57\u9762\u91cf\u5b57\u7b26\u4e32\uff1a script : # content \u662f\u5168\u5c40\u53d8\u91cf\uff08\u6574\u4e2a\u54cd\u5e94\u4f53\uff09 # \\content \u662f\u5b57\u7b26\u4e32 \"content\"\uff08\u5b57\u6bb5\u540d\uff09 - ${check_field_exists(data, \\content)} - ${check_field_exists(data, \\status_code)} \u652f\u6301\u8f6c\u4e49\u7684\u5168\u5c40\u53d8\u91cf \u00b6 \u6240\u6709\u5168\u5c40\u53d8\u91cf\u90fd\u53ef\u4ee5\u8f6c\u4e49\uff1a - \\content \u2192 \u5b57\u7b26\u4e32 \"content\" - \\body \u2192 \u5b57\u7b26\u4e32 \"body\" - \\text \u2192 \u5b57\u7b26\u4e32 \"text\" - \\json \u2192 \u5b57\u7b26\u4e32 \"json\" - \\status_code \u2192 \u5b57\u7b26\u4e32 \"status_code\" - \\headers \u2192 \u5b57\u7b26\u4e32 \"headers\" - \\cookies \u2192 \u5b57\u7b26\u4e32 \"cookies\" - \\encoding \u2192 \u5b57\u7b26\u4e32 \"encoding\" - \\ok \u2192 \u5b57\u7b26\u4e32 \"ok\" - \\reason \u2192 \u5b57\u7b26\u4e32 \"reason\" - \\url \u2192 \u5b57\u7b26\u4e32 \"url\" \u5b8c\u6574\u793a\u4f8b \u00b6 debugtalk.py\uff1a def check_data_not_null ( data , field_count , field_prefix , field_name ): \"\"\" \u68c0\u67e5\u6570\u636e\u5b57\u6bb5\u4e0d\u4e3a\u7a7a Args: data: \u6570\u636e\u5bf9\u8c61 field_count: \u5b57\u6bb5\u6570\u91cf field_prefix: \u5b57\u6bb5\u524d\u7f00 field_name: \u5b57\u6bb5\u540d\uff08\u9700\u8981\u8f6c\u4e49\uff09 \"\"\" # \u5047\u8bbe\u6570\u636e\u7ed3\u6784: {\"lines\": \"...\", \"content\": \"...\"} for i in range ( field_count ): key = f \" { field_prefix }{ i } \" assert key in data , f \"Missing field: { key } \" # \u68c0\u67e5\u7279\u5b9a\u5b57\u6bb5 assert field_name in data , f \"Missing field: { field_name } \" assert data [ field_name ] is not None return True \u6d4b\u8bd5\u7528\u4f8b\uff1a script : # \\content \u8f6c\u4e49\u4e3a\u5b57\u7b26\u4e32 \"content\" - ${check_data_not_null(content.data.linesCollectList.data, 2, lines, \\content)} \u5168\u5c40\u53d8\u91cf vs \u81ea\u5b9a\u4e49\u53d8\u91cf \u00b6 \u5168\u5c40\u53d8\u91cf \u00b6 \u5b9a\u4e49 \uff1a\u7531 ApiMeter \u81ea\u52a8\u6ce8\u5165\u7684\u54cd\u5e94\u53d8\u91cf \u4f7f\u7528 \uff1a\u76f4\u63a5\u4f7f\u7528\uff0c\u65e0\u9700\u524d\u7f00 script : # \u5168\u5c40\u53d8\u91cf\uff08\u65e0\u9700 $ \u524d\u7f00\uff09 - assert status_code == 200 - assert content.success is True - assert headers[\"Content-Type\"] == \"application/json\" \u81ea\u5b9a\u4e49\u53d8\u91cf \u00b6 \u5b9a\u4e49 \uff1a\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u6216\u63d0\u53d6\u7684\u53d8\u91cf \u4f7f\u7528 \uff1a\u9700\u8981 $ \u524d\u7f00\u6216\u5f15\u53f7 variables : expected_status : 200 expected_token_length : 16 extract : - token : content.token - user_id : content.user.id script : # \u274c \u9519\u8bef\uff1a\u81ea\u5b9a\u4e49\u53d8\u91cf\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 - assert token == \"xxx\" # NameError # \u2705 \u6b63\u786e\uff1a\u9700\u8981\u5f15\u53f7\u548c $ \u524d\u7f00 - assert \"$token\" is not None - assert len(\"$token\") == 16 - assert len(\"$token\") == $expected_token_length # \u2705 \u6b63\u786e\uff1a\u5728\u51fd\u6570\u4e2d\u5f15\u7528 - ${validate_token($token)} - ${check_user_id($user_id)} \u6df7\u5408\u4f7f\u7528 \u00b6 variables : expected_code : 0 extract : - token : content.token script : # \u5168\u5c40\u53d8\u91cf - assert status_code == 200 - assert content.code == $expected_code # \u81ea\u5b9a\u4e49\u53d8\u91cf\uff08\u5728\u51fd\u6570\u4e2d\uff09 - ${validate_token($token)} # \u5168\u5c40\u53d8\u91cf\u94fe\u5f0f\u53d6\u503c - assert content.user.name is not None \u5e38\u89c1\u4f7f\u7528\u573a\u666f \u00b6 \u573a\u666f 1\uff1a\u57fa\u7840\u54cd\u5e94\u6821\u9a8c \u00b6 script : # \u72b6\u6001\u7801\u6821\u9a8c - assert status_code == 200 - assert ok is True # \u54cd\u5e94\u5934\u6821\u9a8c - assert headers[\"Content-Type\"] == \"application/json\" # \u54cd\u5e94\u4f53\u6821\u9a8c - assert content.success is True - assert content.code == 0 \u573a\u666f 2\uff1a\u6027\u80fd\u76d1\u63a7 \u00b6 script : # \u54cd\u5e94\u65f6\u95f4\u76d1\u63a7 - | response_time = elapsed.total_seconds # \u8bb0\u5f55\u6162\u8bf7\u6c42 if response_time > 1.0: print(f\"\u26a0\ufe0f \u6162\u8bf7\u6c42\u8b66\u544a: {url}, \u8017\u65f6 {response_time}\u79d2\") # \u65ad\u8a00\u6700\u5927\u54cd\u5e94\u65f6\u95f4 assert response_time < 5.0, f\"\u54cd\u5e94\u8d85\u65f6: {response_time}\u79d2\" # \u4e0d\u540c\u63a5\u53e3\u4e0d\u540c\u6807\u51c6 if \"/api/search\" in url: assert response_time < 2.0, \"\u641c\u7d22\u63a5\u53e3\u54cd\u5e94\u8fc7\u6162\" else: assert response_time < 1.0, \"\u666e\u901a\u63a5\u53e3\u54cd\u5e94\u8fc7\u6162\" \u573a\u666f 3\uff1a\u590d\u6742\u6570\u636e\u6821\u9a8c \u00b6 script : # \u7528\u6237\u6570\u636e\u5b8c\u6574\u6027 - assert content.user is not None - assert content.user.id > 0 - assert len(content.user.name) > 0 - assert \"@\" in content.user.email # \u8ba2\u5355\u6570\u636e\u6821\u9a8c - assert len(content.orders) > 0 - | for order in content.orders: assert order.get(\"id\") is not None assert order.get(\"amount\") > 0 assert order.get(\"status\") in [\"pending\", \"paid\", \"completed\"] \u573a\u666f 4\uff1a\u6761\u4ef6\u6821\u9a8c \u00b6 script : # \u6839\u636e\u7528\u6237\u7c7b\u578b\u6821\u9a8c - | if content.user.type == \"vip\": assert content.user.vip_level > 0 assert content.user.vip_expires is not None assert content.user.discount >= 0.8 elif content.user.type == \"premium\": assert content.user.premium_features is not None assert len(content.user.premium_features) > 0 else: assert content.user.ads_enabled is True \u573a\u666f 5\uff1aAPI \u7248\u672c\u517c\u5bb9 \u00b6 script : # \u517c\u5bb9\u591a\u4e2a API \u7248\u672c - | # v1 \u548c v2 API \u54cd\u5e94\u7ed3\u6784\u4e0d\u540c if \"v1\" in url: assert content.data.user_info is not None user = content.data.user_info elif \"v2\" in url: assert content.user is not None user = content.user else: raise ValueError(f\"Unknown API version in URL: {url}\") # \u901a\u7528\u6821\u9a8c assert user.id > 0 assert user.name is not None \u6700\u4f73\u5b9e\u8df5 \u00b6 1. \u4f18\u5148\u4f7f\u7528 content \u00b6 # \u2705 \u63a8\u8350\uff1a\u4f7f\u7528 content script : - assert content.success is True # \u26a0\ufe0f \u4e5f\u53ef\u4ee5\uff1a\u4f7f\u7528 body \u6216 json script : - assert body.success is True - assert json.success is True 2. \u94fe\u5f0f\u53d6\u503c\u524d\u5148\u68c0\u67e5\u5b58\u5728\u6027 \u00b6 # \u2705 \u63a8\u8350\uff1a\u5148\u68c0\u67e5\u518d\u8bbf\u95ee script : - assert content.data is not None - assert content.data.user is not None - assert content.data.user.name == \"Alice\" # \u274c \u4e0d\u63a8\u8350\uff1a\u76f4\u63a5\u6df1\u5c42\u8bbf\u95ee script : - assert content.data.user.name == \"Alice\" # \u53ef\u80fd AttributeError 3. \u4f7f\u7528\u6709\u610f\u4e49\u7684\u9519\u8bef\u4fe1\u606f \u00b6 # \u2705 \u63a8\u8350\uff1a\u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f script : - assert status_code == 200, f\"\u671f\u671b\u72b6\u6001\u7801200\uff0c\u5b9e\u9645 : { status_code } \" - assert content.success is True, f\" API\u8c03\u7528\u5931\u8d25 : { content.get('message' , '\u672a\u77e5\u9519\u8bef' ) } \" # \u274c \u4e0d\u63a8\u8350\uff1a\u6ca1\u6709\u9519\u8bef\u4fe1\u606f script: - assert status_code == 200 - assert content.success is True 4. \u6027\u80fd\u6821\u9a8c\u8981\u5408\u7406 \u00b6 # \u2705 \u63a8\u8350\uff1a\u6839\u636e\u63a5\u53e3\u7c7b\u578b\u8bbe\u7f6e\u4e0d\u540c\u6807\u51c6 script : - | rt = elapsed.total_seconds if \"/api/search\" in url: assert rt < 2.0, f\"\u641c\u7d22\u63a5\u53e3\u6162: {rt}s\" elif \"/api/report\" in url: assert rt < 5.0, f\"\u62a5\u8868\u63a5\u53e3\u6162: {rt}s\" else: assert rt < 1.0, f\"\u666e\u901a\u63a5\u53e3\u6162: {rt}s\" # \u274c \u4e0d\u63a8\u8350\uff1a\u6240\u6709\u63a5\u53e3\u4e00\u5200\u5207 script : - assert elapsed.total_seconds < 1.0 5. \u53d8\u91cf\u8f6c\u4e49\u8c28\u614e\u4f7f\u7528 \u00b6 # \u2705 \u53ea\u5728\u9700\u8981\u65f6\u4f7f\u7528\u8f6c\u4e49 script : # \u6b63\u5e38\u60c5\u51b5\uff1a\u76f4\u63a5\u4f7f\u7528\u5168\u5c40\u53d8\u91cf - assert content.success is True # \u7279\u6b8a\u60c5\u51b5\uff1a\u5b57\u6bb5\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u51b2\u7a81\u65f6\u624d\u8f6c\u4e49 - ${check_field_exists(data, \\content)} # \u274c \u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528\u8f6c\u4e49 script : - ${some_function(\\status_code, \\headers, \\content)} # \u901a\u5e38\u4e0d\u9700\u8981 \u5e38\u89c1\u95ee\u9898 \u00b6 Q1: \u4e3a\u4ec0\u4e48 content.field \u548c content[\"field\"] \u90fd\u53ef\u4ee5\uff1f \u00b6 A: ApiMeter \u4f7f\u7528\u4e86 ResponseFieldProxy \u7c7b\uff0c\u652f\u6301\u4e24\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff1a script : # \u70b9\u53f7\u8bbf\u95ee\uff08\u63a8\u8350\uff0c\u66f4\u7b80\u6d01\uff09 - assert content.user.name == \"Alice\" # \u5b57\u5178\u8bbf\u95ee\uff08\u5b57\u6bb5\u540d\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u65f6\u4f7f\u7528\uff09 - assert content[\"user-name\"] == \"Alice\" - assert content[\"content-type\"] == \"json\" Q2: \u5982\u4f55\u8bbf\u95ee\u5b57\u6bb5\u540d\u5305\u542b\u70b9\u53f7\u6216\u7279\u6b8a\u5b57\u7b26\u7684\u5b57\u6bb5\uff1f \u00b6 A: \u4f7f\u7528\u5b57\u5178\u8bbf\u95ee\u65b9\u5f0f\uff1a script : # \u5b57\u6bb5\u540d: \"user.name\" - assert content[\"user.name\"] == \"Alice\" # \u5b57\u6bb5\u540d: \"content-type\" - assert headers[\"content-type\"] == \"application/json\" Q3: content \u3001 body \u3001 json \u6709\u4ec0\u4e48\u533a\u522b\uff1f \u00b6 A: \u5b83\u4eec\u5728 ApiMeter \u4e2d\u5b8c\u5168\u7b49\u4ef7\uff0c\u90fd\u6307\u5411\u89e3\u6790\u540e\u7684\u54cd\u5e94\u4f53\uff1a script : # \u4e09\u8005\u5b8c\u5168\u7b49\u4ef7 - assert content.success is True - assert body.success is True - assert json.success is True \u5efa\u8bae \uff1a\u7edf\u4e00\u4f7f\u7528 content \uff0c\u4fdd\u6301\u4ee3\u7801\u98ce\u683c\u4e00\u81f4\u3002 Q4: \u5982\u4f55\u5904\u7406\u54cd\u5e94\u4e0d\u662f JSON \u683c\u5f0f\u7684\u60c5\u51b5\uff1f \u00b6 A: \u4f7f\u7528 text \u53d8\u91cf\uff1a script : # HTML \u54cd\u5e94 - assert \"<html\" in text - assert \"</body>\" in text # XML \u54cd\u5e94 - assert \"<?xml\" in text # \u7eaf\u6587\u672c\u54cd\u5e94 - assert len(text) > 0 - assert \"success\" in text.lower() Q5: \u5168\u5c40\u53d8\u91cf\u5728 validate \u4e2d\u53ef\u4ee5\u4f7f\u7528\u5417\uff1f \u00b6 A: \u4e0d\u53ef\u4ee5\u3002\u5168\u5c40\u53d8\u91cf\u53ea\u80fd\u5728 script \u4e2d\u4f7f\u7528\uff1a # \u274c validate \u4e2d\u4e0d\u652f\u6301 validate : - eq : [ content.success , true ] # \u4f1a\u88ab\u5f53\u4f5c\u5b57\u7b26\u4e32 # \u2705 script \u4e2d\u652f\u6301 script : - assert content.success is True Q6: \u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff1f \u00b6 A: \u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff1a # debugtalk.py def my_function ( status , content_data ): assert status == 200 assert content_data . success is True script : # \u4f20\u9012\u5168\u5c40\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570 - ${my_function(status_code, content)} \ud83d\udcdd \u603b\u7ed3 \u00b6 ApiMeter \u7684\u5168\u5c40\u53d8\u91cf\u7cfb\u7edf\u8ba9\u54cd\u5e94\u6570\u636e\u8bbf\u95ee\u53d8\u5f97\u7b80\u5355\u76f4\u89c2\uff1a \u53d8\u91cf \u7c7b\u578b \u6700\u5e38\u7528\u573a\u666f status_code int \u72b6\u6001\u7801\u6821\u9a8c content dict-like \u54cd\u5e94\u4f53\u6570\u636e\u6821\u9a8c\uff08\u6700\u5e38\u7528\uff09 headers dict-like \u54cd\u5e94\u5934\u6821\u9a8c cookies dict-like Cookie \u6821\u9a8c elapsed timedelta \u6027\u80fd\u76d1\u63a7 ok bool \u8bf7\u6c42\u6210\u529f\u5224\u65ad url str URL \u6821\u9a8c \u6838\u5fc3\u4f18\u52bf\uff1a - \u2705 \u76f4\u63a5\u4f7f\u7528\uff0c\u65e0\u9700\u524d\u7f00 - \u2705 \u652f\u6301\u94fe\u5f0f\u53d6\u503c - \u2705 \u652f\u6301\u53d8\u91cf\u8f6c\u4e49 - \u2705 \u7c7b\u578b\u5b89\u5168\u7684\u4ee3\u7406\u8bbf\u95ee \u4e0b\u4e00\u6b65\u5b66\u4e60\uff1a - \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u8be6\u89e3 - \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 - \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b \u6709\u95ee\u9898\uff1f \u67e5\u770b FAQ \u6216 \u63d0\u4ea4 Issue","title":"\u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357"},{"location":"features/global-variables/#_1","text":"ApiMeter \u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u5168\u5c40\u53d8\u91cf\u7cfb\u7edf\uff0c\u8ba9\u4f60\u53ef\u4ee5\u5728 script \u811a\u672c\u4e2d\u76f4\u63a5\u8bbf\u95ee\u54cd\u5e94\u6570\u636e\uff0c\u65e0\u9700\u7279\u6b8a\u8bed\u6cd5\u3002\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u6240\u6709\u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\u53ca\u5176\u9ad8\u7ea7\u7528\u6cd5\u3002","title":"\u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357"},{"location":"features/global-variables/#_2","text":"\u4ec0\u4e48\u662f\u5168\u5c40\u53d8\u91cf\uff1f \u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\u5217\u8868 \u94fe\u5f0f\u53d6\u503c\u8be6\u89e3 \u53d8\u91cf\u8f6c\u4e49\u529f\u80fd \u5168\u5c40\u53d8\u91cf vs \u81ea\u5b9a\u4e49\u53d8\u91cf \u5e38\u89c1\u4f7f\u7528\u573a\u666f \u6700\u4f73\u5b9e\u8df5 \u5e38\u89c1\u95ee\u9898","title":"\ud83d\udcda \u76ee\u5f55"},{"location":"features/global-variables/#_3","text":"\u5168\u5c40\u53d8\u91cf \u662f ApiMeter \u5728 script \u811a\u672c\u6267\u884c\u65f6\u81ea\u52a8\u6ce8\u5165\u7684\u54cd\u5e94\u76f8\u5173\u53d8\u91cf\u3002\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u811a\u672c\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u53d8\u91cf\uff0c\u65e0\u9700\u4efb\u4f55\u524d\u7f00\u6216\u7279\u6b8a\u8bed\u6cd5\u3002 \u5bf9\u6bd4\u4f20\u7edf\u65b9\u5f0f\uff1a # \u274c \u4f20\u7edf validate \u65b9\u5f0f validate : - eq : [ \"status_code\" , 200 ] # \u9700\u8981\u7528\u5b57\u7b26\u4e32\u8868\u793a - eq : [ \"content.token\" , \"xxx\" ] # \u5b57\u6bb5\u8bbf\u95ee\u9700\u8981\u70b9\u53f7\u5b57\u7b26\u4e32 # \u2705 ApiMeter script \u65b9\u5f0f script : - assert status_code == 200 # \u76f4\u63a5\u4f7f\u7528\u53d8\u91cf - assert content.token == \"xxx\" # \u652f\u6301\u5bf9\u8c61\u5c5e\u6027\u8bbf\u95ee","title":"\u4ec0\u4e48\u662f\u5168\u5c40\u53d8\u91cf\uff1f"},{"location":"features/global-variables/#_4","text":"","title":"\u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\u5217\u8868"},{"location":"features/global-variables/#_5","text":"","title":"\ud83d\udcca \u54cd\u5e94\u72b6\u6001\u76f8\u5173"},{"location":"features/global-variables/#1-status_code","text":"\u7c7b\u578b \uff1a int \u8bf4\u660e \uff1aHTTP \u54cd\u5e94\u72b6\u6001\u7801 \u793a\u4f8b \uff1a script : - assert status_code == 200 - assert status_code in [200, 201, 202] - assert 200 <= status_code < 300, f\"\u671f\u671b2xx\u72b6\u6001\u7801\uff0c\u5b9e\u9645 : { status_code } \"","title":"1. status_code"},{"location":"features/global-variables/#2-ok","text":"\u7c7b\u578b \uff1a bool \u8bf4\u660e \uff1a\u8bf7\u6c42\u662f\u5426\u6210\u529f\uff08\u72b6\u6001\u7801 < 400\uff09 \u793a\u4f8b \uff1a script : - assert ok is True - assert ok is True, \"\u8bf7\u6c42\u5931\u8d25\" # \u6761\u4ef6\u5224\u65ad - | if ok: assert content.success is True else: assert content.error_code is not None","title":"2. ok"},{"location":"features/global-variables/#3-reason","text":"\u7c7b\u578b \uff1a str \u8bf4\u660e \uff1aHTTP \u72b6\u6001\u7801\u5bf9\u5e94\u7684\u539f\u56e0\u77ed\u8bed \u793a\u4f8b \uff1a script : - assert reason == \"OK\" # 200 OK - assert reason == \"Created\" # 201 Created - assert reason == \"Not Found\" # 404 Not Found","title":"3. reason"},{"location":"features/global-variables/#4-url","text":"\u7c7b\u578b \uff1a str \u8bf4\u660e \uff1a\u5b9e\u9645\u8bf7\u6c42\u7684\u5b8c\u6574 URL\uff08\u5305\u542b\u91cd\u5b9a\u5411\u540e\u7684 URL\uff09 \u793a\u4f8b \uff1a script : - assert url.startswith(\"https://\") - assert \"api\" in url - assert url.endswith(\"/users/1001\")","title":"4. url"},{"location":"features/global-variables/#_6","text":"","title":"\ud83d\udce6 \u54cd\u5e94\u4f53\u76f8\u5173"},{"location":"features/global-variables/#5-content","text":"\u7c7b\u578b \uff1a dict-like \uff08ResponseFieldProxy\uff09 \u8bf4\u660e \uff1a\u54cd\u5e94\u5185\u5bb9\uff0c\u81ea\u52a8\u89e3\u6790 JSON\uff08\u6700\u5e38\u7528\uff09 \u793a\u4f8b \uff1a script : # \u57fa\u7840\u8bbf\u95ee - assert content.success is True - assert content.code == 0 - assert content.message == \"success\" # \u94fe\u5f0f\u53d6\u503c - assert content.data.user.name == \"Alice\" - assert content.data.user.profile.age > 18 # \u6570\u7ec4\u8bbf\u95ee - assert len(content.items) > 0 - assert content.items[0].id is not None # \u5b57\u5178\u8bbf\u95ee - assert \"token\" in content - assert content[\"token\"] is not None","title":"5. content"},{"location":"features/global-variables/#6-body","text":"\u7c7b\u578b \uff1a dict-like \uff08ResponseFieldProxy\uff09 \u8bf4\u660e \uff1a\u4e0e content \u7b49\u4ef7\uff0c\u539f\u59cb\u54cd\u5e94\u4f53 \u793a\u4f8b \uff1a script : - assert body.success is True - assert \"token\" in body","title":"6. body"},{"location":"features/global-variables/#7-json","text":"\u7c7b\u578b \uff1a dict-like \uff08ResponseFieldProxy\uff09 \u8bf4\u660e \uff1a\u4e0e content \u7b49\u4ef7\uff0cJSON \u54cd\u5e94\u5185\u5bb9 \u793a\u4f8b \uff1a script : - assert json.code == 0 - assert json.data.user.name == \"Alice\"","title":"7. json"},{"location":"features/global-variables/#8-text","text":"\u7c7b\u578b \uff1a str \u8bf4\u660e \uff1a\u54cd\u5e94\u7684\u6587\u672c\u5185\u5bb9\uff08\u672a\u89e3\u6790\u7684\u539f\u59cb\u5b57\u7b26\u4e32\uff09 \u793a\u4f8b \uff1a script : - assert len(text) > 0 - assert \"success\" in text - assert text.startswith(\"{\") # JSON \u54cd\u5e94 - assert text.startswith(\"<html\") # HTML \u54cd\u5e94","title":"8. text"},{"location":"features/global-variables/#_7","text":"","title":"\ud83d\udccb \u54cd\u5e94\u5934\u76f8\u5173"},{"location":"features/global-variables/#9-headers","text":"\u7c7b\u578b \uff1a dict-like \u8bf4\u660e \uff1a\u54cd\u5e94\u5934\u4fe1\u606f \u793a\u4f8b \uff1a script : # \u8bbf\u95ee\u54cd\u5e94\u5934 - assert headers[\"Content-Type\"] == \"application/json\" - assert \"Server\" in headers # \u5927\u5c0f\u5199\u4e0d\u654f\u611f - assert headers[\"content-type\"] == \"application/json\" - assert headers[\"Content-Type\"] == headers[\"content-type\"] # \u5e38\u89c1\u54cd\u5e94\u5934\u68c0\u67e5 - assert \"application/json\" in headers[\"Content-Type\"] - assert headers.get(\"Cache-Control\") is not None","title":"9. headers"},{"location":"features/global-variables/#10-cookies","text":"\u7c7b\u578b \uff1a dict-like \u8bf4\u660e \uff1aCookie \u4fe1\u606f \u793a\u4f8b \uff1a script : # \u68c0\u67e5 Cookie \u662f\u5426\u5b58\u5728 - assert \"session_id\" in cookies - assert cookies[\"session_id\"] is not None # Cookie \u503c\u6821\u9a8c - assert len(cookies[\"session_id\"]) > 0 - assert cookies.get(\"user_id\") is not None","title":"10. cookies"},{"location":"features/global-variables/#_8","text":"","title":"\u23f1\ufe0f \u6027\u80fd\u76f8\u5173"},{"location":"features/global-variables/#11-elapsed","text":"\u7c7b\u578b \uff1a object \uff08timedelta\uff09 \u8bf4\u660e \uff1a\u8bf7\u6c42\u54cd\u5e94\u65f6\u95f4\u5bf9\u8c61 \u793a\u4f8b \uff1a script : # \u54cd\u5e94\u65f6\u95f4\u6821\u9a8c\uff08\u79d2\uff09 - assert elapsed.total_seconds < 2.0 - assert elapsed.total_seconds < 1.0, f\"\u54cd\u5e94\u8fc7\u6162 : { elapsed.total_seconds } \u79d2\" # \u6beb\u79d2\u7ea7\u522b - assert elapsed.total_seconds * 1000 < 500 # 500ms # \u590d\u6742\u6761\u4ef6 - | response_time = elapsed.total_seconds if response_time > 2.0: print(f\"\u8b66\u544a\uff1a\u54cd\u5e94\u65f6\u95f4\u8fc7\u957f {response_time}\u79d2\") assert response_time < 5.0, \"\u54cd\u5e94\u8d85\u65f6\"","title":"11. elapsed"},{"location":"features/global-variables/#_9","text":"","title":"\ud83d\udd27 \u7f16\u7801\u76f8\u5173"},{"location":"features/global-variables/#12-encoding","text":"\u7c7b\u578b \uff1a str \u6216 None \u8bf4\u660e \uff1a\u54cd\u5e94\u7684\u5b57\u7b26\u7f16\u7801 \u793a\u4f8b \uff1a script : - assert encoding == \"utf-8\" - assert encoding in [\"utf-8\", \"UTF-8\", None]","title":"12. encoding"},{"location":"features/global-variables/#_10","text":"","title":"\ud83d\udce1 \u5b8c\u6574\u54cd\u5e94\u5bf9\u8c61"},{"location":"features/global-variables/#13-response","text":"\u7c7b\u578b \uff1a Response \uff08requests.Response \u5bf9\u8c61\uff09 \u8bf4\u660e \uff1a\u5b8c\u6574\u7684 requests Response \u5bf9\u8c61 \u793a\u4f8b \uff1a script : # \u8bbf\u95ee\u6240\u6709 Response \u5c5e\u6027 - assert response.status_code == 200 - assert response.ok is True - assert response.headers[\"Content-Type\"] == \"application/json\" # Response \u5bf9\u8c61\u65b9\u6cd5 - assert response.json()[\"success\"] is True - assert len(response.content) > 0","title":"13. response"},{"location":"features/global-variables/#_11","text":"","title":"\u94fe\u5f0f\u53d6\u503c\u8be6\u89e3"},{"location":"features/global-variables/#_12","text":"\u94fe\u5f0f\u53d6\u503c\u5141\u8bb8\u4f60\u4f7f\u7528\u70b9\u53f7 . \u8bbf\u95ee\u5d4c\u5957\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7c7b\u4f3c\u4e8e JavaScript \u4e2d\u7684\u5bf9\u8c61\u5c5e\u6027\u8bbf\u95ee\u3002","title":"\u4ec0\u4e48\u662f\u94fe\u5f0f\u53d6\u503c\uff1f"},{"location":"features/global-variables/#_13","text":"script : # \u4e00\u7ea7\u8bbf\u95ee - assert content.user is not None # \u4e8c\u7ea7\u8bbf\u95ee - assert content.user.name == \"Alice\" # \u4e09\u7ea7\u8bbf\u95ee - assert content.user.profile.age > 18 # \u56db\u7ea7\u53ca\u66f4\u6df1 - assert content.data.user.profile.contact.email == \"alice@example.com\" \u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\uff1a { \"data\" : { \"user\" : { \"profile\" : { \"contact\" : { \"email\" : \"alice@example.com\" } } } } }","title":"\u57fa\u7840\u94fe\u5f0f\u53d6\u503c"},{"location":"features/global-variables/#_14","text":"script : # \u8bbf\u95ee\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20 - assert content.items[0].id is not None # \u8bbf\u95ee\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20 - assert content.items[-1].status == \"completed\" # \u5d4c\u5957\u6570\u7ec4\u8bbf\u95ee - assert content.users[0].orders[0].product_id == 123 \u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\uff1a { \"items\" : [ { \"id\" : 1 , \"name\" : \"Item 1\" }, { \"id\" : 2 , \"name\" : \"Item 2\" } ], \"users\" : [ { \"orders\" : [ { \"product_id\" : 123 } ] } ] }","title":"\u6570\u7ec4\u7d22\u5f15\u8bbf\u95ee"},{"location":"features/global-variables/#_15","text":"script : # \u5bf9\u8c61 -> \u6570\u7ec4 -> \u5bf9\u8c61 -> \u5b57\u6bb5 - assert content.data.users[0].profile.name == \"Alice\" # \u6570\u7ec4 -> \u5bf9\u8c61 -> \u6570\u7ec4 -> \u5bf9\u8c61 - assert content.orders[0].items[0].price > 0","title":"\u6df7\u5408\u8bbf\u95ee"},{"location":"features/global-variables/#_16","text":"script : # \u2705 \u63a8\u8350\uff1a\u5148\u68c0\u67e5\u5b58\u5728\u6027 - assert content.user is not None - assert content.user.name == \"Alice\" # \u2705 \u63a8\u8350\uff1a\u4f7f\u7528\u6761\u4ef6\u5224\u65ad - | if hasattr(content, 'user') and content.user: assert content.user.name == \"Alice\" # \u26a0\ufe0f \u6ce8\u610f\uff1a\u76f4\u63a5\u8bbf\u95ee\u53ef\u80fd\u62a5\u9519 - assert content.non_existent_field.name == \"Alice\" # AttributeError","title":"\u94fe\u5f0f\u53d6\u503c\u7684\u7c7b\u578b\u5b89\u5168"},{"location":"features/global-variables/#_17","text":"","title":"\u53d8\u91cf\u8f6c\u4e49\u529f\u80fd"},{"location":"features/global-variables/#_18","text":"\u5f53\u54cd\u5e94\u6570\u636e\u4e2d\u7684\u5b57\u6bb5\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u4f1a\u4ea7\u751f\u6b67\u4e49\u3002 \u95ee\u9898\u573a\u666f\uff1a { \"data\" : { \"content\" : \"\u8fd9\u662f\u5185\u5bb9\" , // \u5b57\u6bb5\u540d\u53eb content \"status_code\" : \"SUCCESS\" // \u5b57\u6bb5\u540d\u53eb status_code } } \u5728\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\uff1a def check_field_exists ( data , field_name ): # \u5e0c\u671b field_name \u662f\u5b57\u7b26\u4e32 \"content\" # \u4f46\u5982\u679c\u4f20\u9012 content\uff0c\u4f1a\u4f20\u9012\u5168\u5c40\u53d8\u91cf\u7684\u503c\uff08\u6574\u4e2a\u54cd\u5e94\u4f53\uff09 return field_name in data","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u53d8\u91cf\u8f6c\u4e49\uff1f"},{"location":"features/global-variables/#_19","text":"\u4f7f\u7528\u53cd\u659c\u6760 \\ \u5c06\u5168\u5c40\u53d8\u91cf\u8f6c\u4e49\u4e3a\u5b57\u9762\u91cf\u5b57\u7b26\u4e32\uff1a script : # content \u662f\u5168\u5c40\u53d8\u91cf\uff08\u6574\u4e2a\u54cd\u5e94\u4f53\uff09 # \\content \u662f\u5b57\u7b26\u4e32 \"content\"\uff08\u5b57\u6bb5\u540d\uff09 - ${check_field_exists(data, \\content)} - ${check_field_exists(data, \\status_code)}","title":"\u8f6c\u4e49\u8bed\u6cd5"},{"location":"features/global-variables/#_20","text":"\u6240\u6709\u5168\u5c40\u53d8\u91cf\u90fd\u53ef\u4ee5\u8f6c\u4e49\uff1a - \\content \u2192 \u5b57\u7b26\u4e32 \"content\" - \\body \u2192 \u5b57\u7b26\u4e32 \"body\" - \\text \u2192 \u5b57\u7b26\u4e32 \"text\" - \\json \u2192 \u5b57\u7b26\u4e32 \"json\" - \\status_code \u2192 \u5b57\u7b26\u4e32 \"status_code\" - \\headers \u2192 \u5b57\u7b26\u4e32 \"headers\" - \\cookies \u2192 \u5b57\u7b26\u4e32 \"cookies\" - \\encoding \u2192 \u5b57\u7b26\u4e32 \"encoding\" - \\ok \u2192 \u5b57\u7b26\u4e32 \"ok\" - \\reason \u2192 \u5b57\u7b26\u4e32 \"reason\" - \\url \u2192 \u5b57\u7b26\u4e32 \"url\"","title":"\u652f\u6301\u8f6c\u4e49\u7684\u5168\u5c40\u53d8\u91cf"},{"location":"features/global-variables/#_21","text":"debugtalk.py\uff1a def check_data_not_null ( data , field_count , field_prefix , field_name ): \"\"\" \u68c0\u67e5\u6570\u636e\u5b57\u6bb5\u4e0d\u4e3a\u7a7a Args: data: \u6570\u636e\u5bf9\u8c61 field_count: \u5b57\u6bb5\u6570\u91cf field_prefix: \u5b57\u6bb5\u524d\u7f00 field_name: \u5b57\u6bb5\u540d\uff08\u9700\u8981\u8f6c\u4e49\uff09 \"\"\" # \u5047\u8bbe\u6570\u636e\u7ed3\u6784: {\"lines\": \"...\", \"content\": \"...\"} for i in range ( field_count ): key = f \" { field_prefix }{ i } \" assert key in data , f \"Missing field: { key } \" # \u68c0\u67e5\u7279\u5b9a\u5b57\u6bb5 assert field_name in data , f \"Missing field: { field_name } \" assert data [ field_name ] is not None return True \u6d4b\u8bd5\u7528\u4f8b\uff1a script : # \\content \u8f6c\u4e49\u4e3a\u5b57\u7b26\u4e32 \"content\" - ${check_data_not_null(content.data.linesCollectList.data, 2, lines, \\content)}","title":"\u5b8c\u6574\u793a\u4f8b"},{"location":"features/global-variables/#vs","text":"","title":"\u5168\u5c40\u53d8\u91cf vs \u81ea\u5b9a\u4e49\u53d8\u91cf"},{"location":"features/global-variables/#_22","text":"\u5b9a\u4e49 \uff1a\u7531 ApiMeter \u81ea\u52a8\u6ce8\u5165\u7684\u54cd\u5e94\u53d8\u91cf \u4f7f\u7528 \uff1a\u76f4\u63a5\u4f7f\u7528\uff0c\u65e0\u9700\u524d\u7f00 script : # \u5168\u5c40\u53d8\u91cf\uff08\u65e0\u9700 $ \u524d\u7f00\uff09 - assert status_code == 200 - assert content.success is True - assert headers[\"Content-Type\"] == \"application/json\"","title":"\u5168\u5c40\u53d8\u91cf"},{"location":"features/global-variables/#_23","text":"\u5b9a\u4e49 \uff1a\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u6216\u63d0\u53d6\u7684\u53d8\u91cf \u4f7f\u7528 \uff1a\u9700\u8981 $ \u524d\u7f00\u6216\u5f15\u53f7 variables : expected_status : 200 expected_token_length : 16 extract : - token : content.token - user_id : content.user.id script : # \u274c \u9519\u8bef\uff1a\u81ea\u5b9a\u4e49\u53d8\u91cf\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 - assert token == \"xxx\" # NameError # \u2705 \u6b63\u786e\uff1a\u9700\u8981\u5f15\u53f7\u548c $ \u524d\u7f00 - assert \"$token\" is not None - assert len(\"$token\") == 16 - assert len(\"$token\") == $expected_token_length # \u2705 \u6b63\u786e\uff1a\u5728\u51fd\u6570\u4e2d\u5f15\u7528 - ${validate_token($token)} - ${check_user_id($user_id)}","title":"\u81ea\u5b9a\u4e49\u53d8\u91cf"},{"location":"features/global-variables/#_24","text":"variables : expected_code : 0 extract : - token : content.token script : # \u5168\u5c40\u53d8\u91cf - assert status_code == 200 - assert content.code == $expected_code # \u81ea\u5b9a\u4e49\u53d8\u91cf\uff08\u5728\u51fd\u6570\u4e2d\uff09 - ${validate_token($token)} # \u5168\u5c40\u53d8\u91cf\u94fe\u5f0f\u53d6\u503c - assert content.user.name is not None","title":"\u6df7\u5408\u4f7f\u7528"},{"location":"features/global-variables/#_25","text":"","title":"\u5e38\u89c1\u4f7f\u7528\u573a\u666f"},{"location":"features/global-variables/#1","text":"script : # \u72b6\u6001\u7801\u6821\u9a8c - assert status_code == 200 - assert ok is True # \u54cd\u5e94\u5934\u6821\u9a8c - assert headers[\"Content-Type\"] == \"application/json\" # \u54cd\u5e94\u4f53\u6821\u9a8c - assert content.success is True - assert content.code == 0","title":"\u573a\u666f 1\uff1a\u57fa\u7840\u54cd\u5e94\u6821\u9a8c"},{"location":"features/global-variables/#2","text":"script : # \u54cd\u5e94\u65f6\u95f4\u76d1\u63a7 - | response_time = elapsed.total_seconds # \u8bb0\u5f55\u6162\u8bf7\u6c42 if response_time > 1.0: print(f\"\u26a0\ufe0f \u6162\u8bf7\u6c42\u8b66\u544a: {url}, \u8017\u65f6 {response_time}\u79d2\") # \u65ad\u8a00\u6700\u5927\u54cd\u5e94\u65f6\u95f4 assert response_time < 5.0, f\"\u54cd\u5e94\u8d85\u65f6: {response_time}\u79d2\" # \u4e0d\u540c\u63a5\u53e3\u4e0d\u540c\u6807\u51c6 if \"/api/search\" in url: assert response_time < 2.0, \"\u641c\u7d22\u63a5\u53e3\u54cd\u5e94\u8fc7\u6162\" else: assert response_time < 1.0, \"\u666e\u901a\u63a5\u53e3\u54cd\u5e94\u8fc7\u6162\"","title":"\u573a\u666f 2\uff1a\u6027\u80fd\u76d1\u63a7"},{"location":"features/global-variables/#3","text":"script : # \u7528\u6237\u6570\u636e\u5b8c\u6574\u6027 - assert content.user is not None - assert content.user.id > 0 - assert len(content.user.name) > 0 - assert \"@\" in content.user.email # \u8ba2\u5355\u6570\u636e\u6821\u9a8c - assert len(content.orders) > 0 - | for order in content.orders: assert order.get(\"id\") is not None assert order.get(\"amount\") > 0 assert order.get(\"status\") in [\"pending\", \"paid\", \"completed\"]","title":"\u573a\u666f 3\uff1a\u590d\u6742\u6570\u636e\u6821\u9a8c"},{"location":"features/global-variables/#4","text":"script : # \u6839\u636e\u7528\u6237\u7c7b\u578b\u6821\u9a8c - | if content.user.type == \"vip\": assert content.user.vip_level > 0 assert content.user.vip_expires is not None assert content.user.discount >= 0.8 elif content.user.type == \"premium\": assert content.user.premium_features is not None assert len(content.user.premium_features) > 0 else: assert content.user.ads_enabled is True","title":"\u573a\u666f 4\uff1a\u6761\u4ef6\u6821\u9a8c"},{"location":"features/global-variables/#5api","text":"script : # \u517c\u5bb9\u591a\u4e2a API \u7248\u672c - | # v1 \u548c v2 API \u54cd\u5e94\u7ed3\u6784\u4e0d\u540c if \"v1\" in url: assert content.data.user_info is not None user = content.data.user_info elif \"v2\" in url: assert content.user is not None user = content.user else: raise ValueError(f\"Unknown API version in URL: {url}\") # \u901a\u7528\u6821\u9a8c assert user.id > 0 assert user.name is not None","title":"\u573a\u666f 5\uff1aAPI \u7248\u672c\u517c\u5bb9"},{"location":"features/global-variables/#_26","text":"","title":"\u6700\u4f73\u5b9e\u8df5"},{"location":"features/global-variables/#1-content","text":"# \u2705 \u63a8\u8350\uff1a\u4f7f\u7528 content script : - assert content.success is True # \u26a0\ufe0f \u4e5f\u53ef\u4ee5\uff1a\u4f7f\u7528 body \u6216 json script : - assert body.success is True - assert json.success is True","title":"1. \u4f18\u5148\u4f7f\u7528 content"},{"location":"features/global-variables/#2_1","text":"# \u2705 \u63a8\u8350\uff1a\u5148\u68c0\u67e5\u518d\u8bbf\u95ee script : - assert content.data is not None - assert content.data.user is not None - assert content.data.user.name == \"Alice\" # \u274c \u4e0d\u63a8\u8350\uff1a\u76f4\u63a5\u6df1\u5c42\u8bbf\u95ee script : - assert content.data.user.name == \"Alice\" # \u53ef\u80fd AttributeError","title":"2. \u94fe\u5f0f\u53d6\u503c\u524d\u5148\u68c0\u67e5\u5b58\u5728\u6027"},{"location":"features/global-variables/#3_1","text":"# \u2705 \u63a8\u8350\uff1a\u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f script : - assert status_code == 200, f\"\u671f\u671b\u72b6\u6001\u7801200\uff0c\u5b9e\u9645 : { status_code } \" - assert content.success is True, f\" API\u8c03\u7528\u5931\u8d25 : { content.get('message' , '\u672a\u77e5\u9519\u8bef' ) } \" # \u274c \u4e0d\u63a8\u8350\uff1a\u6ca1\u6709\u9519\u8bef\u4fe1\u606f script: - assert status_code == 200 - assert content.success is True","title":"3. \u4f7f\u7528\u6709\u610f\u4e49\u7684\u9519\u8bef\u4fe1\u606f"},{"location":"features/global-variables/#4_1","text":"# \u2705 \u63a8\u8350\uff1a\u6839\u636e\u63a5\u53e3\u7c7b\u578b\u8bbe\u7f6e\u4e0d\u540c\u6807\u51c6 script : - | rt = elapsed.total_seconds if \"/api/search\" in url: assert rt < 2.0, f\"\u641c\u7d22\u63a5\u53e3\u6162: {rt}s\" elif \"/api/report\" in url: assert rt < 5.0, f\"\u62a5\u8868\u63a5\u53e3\u6162: {rt}s\" else: assert rt < 1.0, f\"\u666e\u901a\u63a5\u53e3\u6162: {rt}s\" # \u274c \u4e0d\u63a8\u8350\uff1a\u6240\u6709\u63a5\u53e3\u4e00\u5200\u5207 script : - assert elapsed.total_seconds < 1.0","title":"4. \u6027\u80fd\u6821\u9a8c\u8981\u5408\u7406"},{"location":"features/global-variables/#5","text":"# \u2705 \u53ea\u5728\u9700\u8981\u65f6\u4f7f\u7528\u8f6c\u4e49 script : # \u6b63\u5e38\u60c5\u51b5\uff1a\u76f4\u63a5\u4f7f\u7528\u5168\u5c40\u53d8\u91cf - assert content.success is True # \u7279\u6b8a\u60c5\u51b5\uff1a\u5b57\u6bb5\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u51b2\u7a81\u65f6\u624d\u8f6c\u4e49 - ${check_field_exists(data, \\content)} # \u274c \u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528\u8f6c\u4e49 script : - ${some_function(\\status_code, \\headers, \\content)} # \u901a\u5e38\u4e0d\u9700\u8981","title":"5. \u53d8\u91cf\u8f6c\u4e49\u8c28\u614e\u4f7f\u7528"},{"location":"features/global-variables/#_27","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"features/global-variables/#q1-contentfield-contentfield","text":"A: ApiMeter \u4f7f\u7528\u4e86 ResponseFieldProxy \u7c7b\uff0c\u652f\u6301\u4e24\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff1a script : # \u70b9\u53f7\u8bbf\u95ee\uff08\u63a8\u8350\uff0c\u66f4\u7b80\u6d01\uff09 - assert content.user.name == \"Alice\" # \u5b57\u5178\u8bbf\u95ee\uff08\u5b57\u6bb5\u540d\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u65f6\u4f7f\u7528\uff09 - assert content[\"user-name\"] == \"Alice\" - assert content[\"content-type\"] == \"json\"","title":"Q1: \u4e3a\u4ec0\u4e48 content.field \u548c content[\"field\"] \u90fd\u53ef\u4ee5\uff1f"},{"location":"features/global-variables/#q2","text":"A: \u4f7f\u7528\u5b57\u5178\u8bbf\u95ee\u65b9\u5f0f\uff1a script : # \u5b57\u6bb5\u540d: \"user.name\" - assert content[\"user.name\"] == \"Alice\" # \u5b57\u6bb5\u540d: \"content-type\" - assert headers[\"content-type\"] == \"application/json\"","title":"Q2: \u5982\u4f55\u8bbf\u95ee\u5b57\u6bb5\u540d\u5305\u542b\u70b9\u53f7\u6216\u7279\u6b8a\u5b57\u7b26\u7684\u5b57\u6bb5\uff1f"},{"location":"features/global-variables/#q3-contentbodyjson","text":"A: \u5b83\u4eec\u5728 ApiMeter \u4e2d\u5b8c\u5168\u7b49\u4ef7\uff0c\u90fd\u6307\u5411\u89e3\u6790\u540e\u7684\u54cd\u5e94\u4f53\uff1a script : # \u4e09\u8005\u5b8c\u5168\u7b49\u4ef7 - assert content.success is True - assert body.success is True - assert json.success is True \u5efa\u8bae \uff1a\u7edf\u4e00\u4f7f\u7528 content \uff0c\u4fdd\u6301\u4ee3\u7801\u98ce\u683c\u4e00\u81f4\u3002","title":"Q3: content\u3001body\u3001json \u6709\u4ec0\u4e48\u533a\u522b\uff1f"},{"location":"features/global-variables/#q4-json","text":"A: \u4f7f\u7528 text \u53d8\u91cf\uff1a script : # HTML \u54cd\u5e94 - assert \"<html\" in text - assert \"</body>\" in text # XML \u54cd\u5e94 - assert \"<?xml\" in text # \u7eaf\u6587\u672c\u54cd\u5e94 - assert len(text) > 0 - assert \"success\" in text.lower()","title":"Q4: \u5982\u4f55\u5904\u7406\u54cd\u5e94\u4e0d\u662f JSON \u683c\u5f0f\u7684\u60c5\u51b5\uff1f"},{"location":"features/global-variables/#q5-validate","text":"A: \u4e0d\u53ef\u4ee5\u3002\u5168\u5c40\u53d8\u91cf\u53ea\u80fd\u5728 script \u4e2d\u4f7f\u7528\uff1a # \u274c validate \u4e2d\u4e0d\u652f\u6301 validate : - eq : [ content.success , true ] # \u4f1a\u88ab\u5f53\u4f5c\u5b57\u7b26\u4e32 # \u2705 script \u4e2d\u652f\u6301 script : - assert content.success is True","title":"Q5: \u5168\u5c40\u53d8\u91cf\u5728 validate \u4e2d\u53ef\u4ee5\u4f7f\u7528\u5417\uff1f"},{"location":"features/global-variables/#q6","text":"A: \u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff1a # debugtalk.py def my_function ( status , content_data ): assert status == 200 assert content_data . success is True script : # \u4f20\u9012\u5168\u5c40\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570 - ${my_function(status_code, content)}","title":"Q6: \u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff1f"},{"location":"features/global-variables/#_28","text":"ApiMeter \u7684\u5168\u5c40\u53d8\u91cf\u7cfb\u7edf\u8ba9\u54cd\u5e94\u6570\u636e\u8bbf\u95ee\u53d8\u5f97\u7b80\u5355\u76f4\u89c2\uff1a \u53d8\u91cf \u7c7b\u578b \u6700\u5e38\u7528\u573a\u666f status_code int \u72b6\u6001\u7801\u6821\u9a8c content dict-like \u54cd\u5e94\u4f53\u6570\u636e\u6821\u9a8c\uff08\u6700\u5e38\u7528\uff09 headers dict-like \u54cd\u5e94\u5934\u6821\u9a8c cookies dict-like Cookie \u6821\u9a8c elapsed timedelta \u6027\u80fd\u76d1\u63a7 ok bool \u8bf7\u6c42\u6210\u529f\u5224\u65ad url str URL \u6821\u9a8c \u6838\u5fc3\u4f18\u52bf\uff1a - \u2705 \u76f4\u63a5\u4f7f\u7528\uff0c\u65e0\u9700\u524d\u7f00 - \u2705 \u652f\u6301\u94fe\u5f0f\u53d6\u503c - \u2705 \u652f\u6301\u53d8\u91cf\u8f6c\u4e49 - \u2705 \u7c7b\u578b\u5b89\u5168\u7684\u4ee3\u7406\u8bbf\u95ee \u4e0b\u4e00\u6b65\u5b66\u4e60\uff1a - \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u8be6\u89e3 - \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 - \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b \u6709\u95ee\u9898\uff1f \u67e5\u770b FAQ \u6216 \u63d0\u4ea4 Issue","title":"\ud83d\udcdd \u603b\u7ed3"},{"location":"features/overview/","text":"ApiMeter \u65b0\u7279\u6027\u603b\u89c8 \u00b6 \u6b22\u8fce\u6765\u5230 ApiMeter \u65b0\u7279\u6027\u4e13\u9898\uff01\u672c\u6587\u6863\u5c06\u5e2e\u52a9\u4f60\u5feb\u901f\u4e86\u89e3 ApiMeter \u76f8\u6bd4 HttpRunner 2.x \u65b0\u589e\u7684\u6240\u6709\u5f3a\u5927\u529f\u80fd\u3002 \ud83c\udfaf \u6838\u5fc3\u4f18\u52bf\u6982\u89c8 \u00b6 ApiMeter \u57fa\u4e8e HttpRunner 2.5.9 \u6df1\u5ea6\u6269\u5c55\uff0c\u4fdd\u7559\u4e86 HttpRunner \u7684\u6240\u6709\u4f18\u79c0\u7279\u6027\uff0c\u540c\u65f6\u65b0\u589e\u4e86\u591a\u9879\u5f3a\u5927\u529f\u80fd\uff0c\u8ba9 API \u81ea\u52a8\u5316\u6d4b\u8bd5\u66f4\u52a0\u7075\u6d3b\u3001\u9ad8\u6548\u3001\u6613\u7528\u3002 \ud83d\udca1 \u8bbe\u8ba1\u7406\u5ff5 \u00b6 \u964d\u4f4e\u5b66\u4e60\u6210\u672c - \u4f7f\u7528\u6807\u51c6 Python \u8bed\u6cd5\uff0c\u7b26\u5408\u5f00\u53d1\u8005\u76f4\u89c9 \u63d0\u5347\u8868\u8fbe\u80fd\u529b - \u652f\u6301\u4efb\u610f\u590d\u6742\u7684\u6d4b\u8bd5\u903b\u8f91 \u4f18\u5316\u7528\u6237\u4f53\u9a8c - \u66f4\u53cb\u597d\u7684\u62a5\u544a\u5c55\u793a\u548c\u9519\u8bef\u63d0\u793a \u4fdd\u6301\u5411\u540e\u517c\u5bb9 - \u4e0d\u5f71\u54cd\u73b0\u6709 HttpRunner \u7528\u4f8b \ud83d\ude80 \u7279\u6027\u5206\u7c7b\u5bfc\u822a \u00b6 \ud83d\udccb \u4e00\u3001\u6821\u9a8c\u80fd\u529b\u589e\u5f3a \u00b6 \u2b50 1. script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.10.0+ \u8fd9\u662f ApiMeter \u6700\u6838\u5fc3\u7684\u65b0\u7279\u6027\uff01\u652f\u6301\u4f7f\u7528 Python \u811a\u672c\u8fdb\u884c\u7075\u6d3b\u7684\u54cd\u5e94\u6821\u9a8c\u3002 \u6838\u5fc3\u4f18\u52bf\uff1a - \u2705 \u4f7f\u7528\u6807\u51c6 Python \u8bed\u6cd5\uff08assert\u3001if/else\u3001for \u5faa\u73af\u7b49\uff09 - \u2705 \u96f6\u5b66\u4e60\u6210\u672c\uff0c\u7b26\u5408\u5f00\u53d1\u8005\u76f4\u89c9 - \u2705 \u652f\u6301\u4efb\u610f\u590d\u6742\u7684\u6821\u9a8c\u903b\u8f91 - \u2705 \u9010\u6761\u6267\u884c\uff0c\u5355\u6761\u5931\u8d25\u4e0d\u4e2d\u65ad\u5176\u4ed6\u6821\u9a8c - \u2705 \u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\u548c\u6267\u884c\u7ed3\u679c \u5feb\u901f\u793a\u4f8b\uff1a script : # \u57fa\u7840\u65ad\u8a00 - assert status_code == 200 - assert content.success is True # \u590d\u6742\u6761\u4ef6 - | if content.user.type == \"vip\": assert content.user.vip_level > 0 else: assert content.user.ads_enabled is True # \u5faa\u73af\u6821\u9a8c - | for item in content.items: assert item.get(\"id\") is not None # \u81ea\u5b9a\u4e49\u51fd\u6570 - ${validate_user_data(content.user)} \ud83d\udcd6 \u8be6\u7ec6\u6587\u6863 \uff1a \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u8be6\u89e3 \u2b50 2. \u5168\u5c40\u53d8\u91cf\u65e0\u7f1d\u8bbf\u95ee \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.10.0+ \u5728 script \u4e2d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6240\u6709\u54cd\u5e94\u5b57\u6bb5\uff0c\u65e0\u9700\u7279\u6b8a\u8bed\u6cd5\u3002 \u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\uff1a \u53d8\u91cf\u540d \u7c7b\u578b \u8bf4\u660e \u793a\u4f8b status_code int HTTP\u72b6\u6001\u7801 assert status_code == 200 headers dict-like \u54cd\u5e94\u5934 assert headers[\"Content-Type\"] == \"application/json\" cookies dict-like Cookie\u4fe1\u606f assert \"session_id\" in cookies content dict-like \u54cd\u5e94\u5185\u5bb9\uff08JSON\uff09 assert content.user.name is not None body dict-like \u539f\u59cb\u54cd\u5e94\u4f53 assert \"success\" in body json dict-like JSON\u54cd\u5e94 assert json.code == 0 elapsed object \u54cd\u5e94\u65f6\u95f4 assert elapsed.total_seconds < 2.0 ok bool \u8bf7\u6c42\u662f\u5426\u6210\u529f assert ok is True reason str \u72b6\u6001\u8bf4\u660e assert reason == \"OK\" url str \u8bf7\u6c42URL assert \"api\" in url \u6838\u5fc3\u7279\u6027\uff1a - \u2705 \u94fe\u5f0f\u53d6\u503c \uff1a content.user.profile.age - \u2705 \u6570\u7ec4\u8bbf\u95ee \uff1a content.items[0].price - \u2705 \u53d8\u91cf\u8f6c\u4e49 \uff1a \\content \u8f6c\u4e49\u4e3a\u5b57\u7b26\u4e32 \"content\" \ud83d\udcd6 \u8be6\u7ec6\u6587\u6863 \uff1a \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 \ud83d\udd27 \u4e8c\u3001\u81ea\u5b9a\u4e49\u51fd\u6570\u589e\u5f3a \u00b6 \u2b50 3. \u5217\u8868\u53c2\u6570\u652f\u6301 \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.0+ \u652f\u6301\u5411\u81ea\u5b9a\u4e49\u51fd\u6570\u4f20\u9012\u5217\u8868\u53c2\u6570\u3002 \u793a\u4f8b\uff1a request : json : # \u4f20\u9012\u5217\u8868\u53c2\u6570\u751f\u6210\u7b7e\u540d sign : ${get_sign_v2([$device_sn, $os_platform, $app_version])} # debugtalk.py def get_sign_v2 ( args_list ): content = \"\" . join ( args_list ) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) return hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () \u2b50 4. \u5b57\u5178\u53c2\u6570\u652f\u6301 \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.0+ \u652f\u6301\u5411\u81ea\u5b9a\u4e49\u51fd\u6570\u4f20\u9012\u5b57\u5178\u5bf9\u8c61\u53c2\u6570\u3002 \u793a\u4f8b\uff1a request : json : # \u4f20\u9012\u5b57\u5178\u53c2\u6570 sign : \"${get_sign_v3({device_sn: $device_sn, os_platform: $os_platform, app_version: $app_version})}\" # debugtalk.py def get_sign_v3 ( args_dict ): content = \"\" . join ([ args_dict [ \"device_sn\" ], args_dict [ \"os_platform\" ], args_dict [ \"app_version\" ] ]) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) return hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest () \u2b50 5. \u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570 \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.4+ \u652f\u6301\u4f20\u9012\u590d\u6742\u7684\u5d4c\u5957\u5bf9\u8c61\u914d\u7f6e\u3002 \u793a\u4f8b\uff1a script : - \"${check_nested_list_fields(content, { list_path: productList, nested_list_field: sku, check_fields: [id, amount, origin_amount, currency] })}\" \u2b50 6. \u94fe\u5f0f\u53c2\u6570 | \u901a\u914d\u7b26 | \u6b63\u5219\u8868\u8fbe\u5f0f \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.4+ \u652f\u6301\u4f7f\u7528\u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3001\u7c7b\u578b\u6821\u9a8c\u7b49\u9ad8\u7ea7\u529f\u80fd\u3002 \u793a\u4f8b\uff1a script : # \u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c\uff08* \u5339\u914d\u4efb\u610f\u5c42\u7ea7\uff09 - ${check(content, data.product.purchasePlan.*.sku.*.id, data.product.purchasePlan.*.sku.*.amount, data.product.purchasePlan.*.sku.*.currency )} # \u6b63\u5219\u8868\u8fbe\u5f0f\u548c\u7c7b\u578b\u6821\u9a8c - ${check(content, '_url ~= ^https?://[^\\s/$.?#].[^\\s]*$', # \u6b63\u5219\u5339\u914d 'default_currency =* [USD, CNY]' , # \u5305\u542b\u6821\u9a8c 'default_sku @= dict' , # \u7c7b\u578b\u6821\u9a8c 'product @= dict' )} \ud83d\udcd6 \u8be6\u7ec6\u6587\u6863 \uff1a \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 \ud83d\udcca \u4e09\u3001\u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a \u00b6 \u2b50 7. \u667a\u80fd\u5185\u5bb9\u6298\u53e0 \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.11.0+ \u7279\u6027\uff1a - \u2705 \u8d85\u8fc7 15 \u884c\u7684\u5185\u5bb9\u81ea\u52a8\u6298\u53e0 - \u2705 \u4e00\u952e\u5c55\u5f00/\u6298\u53e0\u6309\u94ae - \u2705 \u4e00\u952e\u590d\u5236\u6309\u94ae - \u2705 \u5927\u5e45\u63d0\u5347\u62a5\u544a\u53ef\u8bfb\u6027 \u5e94\u7528\u573a\u666f\uff1a - \u957f JSON \u54cd\u5e94 - \u590d\u6742\u8bf7\u6c42\u4f53 - \u8be6\u7ec6\u9519\u8bef\u4fe1\u606f \u2b50 8. JSON \u6811\u5f62\u5c55\u793a \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.11.0+ \u7279\u6027\uff1a - \u2705 \u81ea\u52a8\u8bc6\u522b JSON \u548c Python \u5b57\u5178 - \u2705 \u5f69\u8272\u8bed\u6cd5\u9ad8\u4eae - \u2705 \u8282\u70b9\u7ea7\u522b\u5c55\u5f00/\u6298\u53e0 - \u2705 \u652f\u6301\u5927\u578b JSON \u6570\u636e\uff08\u61d2\u52a0\u8f7d\uff09 \u5e94\u7528\u8303\u56f4\uff1a - Request body\uff08\u8bf7\u6c42\u4f53\uff09 - Response body\uff08\u54cd\u5e94\u4f53\uff09 - Request headers\uff08\u8bf7\u6c42\u5934\uff09 - Response headers\uff08\u54cd\u5e94\u5934\uff09 - Validator expect/actual value\uff08\u6821\u9a8c\u5668\u671f\u671b\u503c/\u5b9e\u9645\u503c\uff09 - Script\uff08\u81ea\u5b9a\u4e49\u811a\u672c\uff09 - Output\uff08\u811a\u672c\u6267\u884c\u7ed3\u679c\uff09 \u2b50 9. Script \u6267\u884c\u7ed3\u679c\u5c55\u793a \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.11.0+ \u7279\u6027\uff1a - \u2705 \u663e\u793a\u6bcf\u6761\u811a\u672c\u7684\u6267\u884c\u72b6\u6001\uff08\u2713 \u6210\u529f / \u2717 \u5931\u8d25\uff09 - \u2705 \u663e\u793a\u811a\u672c\u8fd4\u56de\u503c\u548c\u8f93\u51fa - \u2705 \u8be6\u7ec6\u7684\u9519\u8bef\u5806\u6808\u4fe1\u606f - \u2705 \u652f\u6301\u6811\u5f62\u5c55\u793a\u590d\u6742\u8f93\u51fa \ud83d\udcd6 \u8be6\u7ec6\u6587\u6863 \uff1a \u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a\u7279\u6027 \u2b50 10. \u62a5\u544a\u4f18\u5316\u9009\u9879 \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.11.1+ \u7279\u6027\uff1a # \u9ed8\u8ba4\u8df3\u8fc7\u6210\u529f\u7528\u4f8b\uff08\u51cf\u5c0f\u62a5\u544a\u4f53\u79ef\uff09 hrun testcases/ --html report.html # \u663e\u793a\u6240\u6709\u7528\u4f8b\uff08\u5305\u62ec\u6210\u529f\u7684\uff09 hrun testcases/ --html report.html --no-skip-success \u4f18\u52bf\uff1a - \u2705 \u9ed8\u8ba4 --skip-success=True \uff0c\u805a\u7126\u5931\u8d25\u7528\u4f8b - \u2705 \u5927\u5e45\u51cf\u5c0f\u62a5\u544a\u4f53\u79ef\uff08\u53ef\u51cf\u5c11 50%+ \u4f53\u79ef\uff09 - \u2705 \u63d0\u5347\u62a5\u544a\u52a0\u8f7d\u901f\u5ea6 - \u2705 \u5411\u540e\u517c\u5bb9\uff0c\u53ef\u9009\u62e9\u663e\u793a\u6240\u6709\u7528\u4f8b \ud83d\udd10 \u56db\u3001\u5176\u4ed6\u589e\u5f3a\u7279\u6027 \u00b6 \u2b50 11. \u53d8\u91cf\u8f6c\u4e49\u529f\u80fd \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.9.2+ \u5f53\u6570\u636e\u5b57\u6bb5\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u4f7f\u7528\u53cd\u659c\u6760 \\ \u8f6c\u4e49\u3002 \u95ee\u9898\u573a\u666f\uff1a # \u5047\u8bbe\u54cd\u5e94\u6570\u636e\u7ed3\u6784 { \"data\" : { \"content\" : \"some value\" # \u5b57\u6bb5\u540d\u4e3a \"content\" } } \u89e3\u51b3\u65b9\u6848\uff1a script : # content \u662f\u5168\u5c40\u53d8\u91cf\uff08\u6574\u4e2a\u54cd\u5e94\u4f53\uff09 # \u5982\u679c\u60f3\u8868\u793a\u5b57\u7b26\u4e32 \"content\"\uff08\u5b57\u6bb5\u540d\uff09\uff0c\u9700\u8981\u8f6c\u4e49 - ${check_field_exists(data, \\content)} def check_field_exists ( data , field_name ): # field_name \u63a5\u6536\u5230\u7684\u662f\u5b57\u7b26\u4e32 \"content\" return field_name in data \u652f\u6301\u8f6c\u4e49\u7684\u5168\u5c40\u53d8\u91cf\uff1a \\content , \\body , \\text , \\json , \\status_code , \\headers , \\cookies , \\encoding , \\ok , \\reason , \\url \u2b50 12. \u81ea\u5b9a\u4e49\u51fd\u6570\u53c2\u6570\u652f\u6301\u5168\u5c40\u53d8\u91cf \u00b6 \u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.0+ \u81ea\u5b9a\u4e49\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u5f15\u7528\u5168\u5c40\u53d8\u91cf\u548c\u652f\u6301\u94fe\u5f0f\u53d6\u503c\u3002 \u793a\u4f8b\uff1a validate : # \u5f15\u7528\u5168\u5c40\u53d8\u91cf - eq : [ \"${validate_token_v2(content)}\" , true ] # \u94fe\u5f0f\u53d6\u503c - eq : [ \"${validate_token(content.token)}\" , true ] # \u5f15\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u94fe\u5f0f\u53d6\u503c - eq : [ \"${validate_token($resp.token)}\" , true ] \ud83d\udcca \u7279\u6027\u6210\u719f\u5ea6\u8bc4\u4f30 \u00b6 \u7279\u6027 \u7a33\u5b9a\u6027 \u63a8\u8350\u5ea6 \u6587\u6863\u5b8c\u6574\u5ea6 \u9002\u7528\u573a\u666f script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u6240\u6709\u9879\u76ee \u5168\u5c40\u53d8\u91cf\u65e0\u7f1d\u8bbf\u95ee \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u6240\u6709\u9879\u76ee \u5217\u8868/\u5b57\u5178\u53c2\u6570 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u590d\u6742\u7b7e\u540d\u573a\u666f \u590d\u6742\u5d4c\u5957\u5bf9\u8c61 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u6279\u91cf\u6821\u9a8c\u573a\u666f \u901a\u914d\u7b26+\u6b63\u5219 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u590d\u6742\u6570\u636e\u7ed3\u6784 \u667a\u80fd\u6298\u53e0 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u5927\u6570\u636e\u91cf\u573a\u666f JSON\u6811\u5f62\u5c55\u793a \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u6240\u6709\u9879\u76ee \u53d8\u91cf\u8f6c\u4e49 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u7279\u5b9a\u5b57\u6bb5\u540d\u573a\u666f \ud83c\udfaf \u5feb\u901f\u9009\u62e9\u6307\u5357 \u00b6 \u6839\u636e\u4f60\u7684\u9700\u6c42\u9009\u62e9\u529f\u80fd \u00b6 \u6211\u60f3... \u2705 \u7f16\u5199\u590d\u6742\u7684\u6821\u9a8c\u903b\u8f91 \u2192 script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c \u2705 \u4f20\u9012\u590d\u6742\u53c2\u6570\u7ed9\u51fd\u6570 \u2192 \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 \u2705 \u6279\u91cf\u6821\u9a8c\u5d4c\u5957\u6570\u636e \u2192 \u901a\u914d\u7b26\u548c\u6b63\u5219\u8868\u8fbe\u5f0f \u2705 \u4f18\u5316\u6d4b\u8bd5\u62a5\u544a\u53ef\u8bfb\u6027 \u2192 \u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a \u2705 \u4ece HttpRunner \u8fc1\u79fb \u2192 \u8fc1\u79fb\u6307\u5357 \u2705 \u67e5\u770b\u5b8c\u6574\u5b9e\u6218\u6848\u4f8b \u2192 \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b \u6839\u636e\u9879\u76ee\u7c7b\u578b\u9009\u62e9 \u00b6 \u5c0f\u578b\u9879\u76ee \uff08< 50 \u4e2a\u7528\u4f8b\uff09\uff1a - \u2705 script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c - \u2705 \u5168\u5c40\u53d8\u91cf\u76f4\u63a5\u8bbf\u95ee - \u2705 \u57fa\u7840\u62a5\u544a\u529f\u80fd \u4e2d\u578b\u9879\u76ee \uff0850-200 \u4e2a\u7528\u4f8b\uff09\uff1a - \u2705 \u4e0a\u8ff0\u6240\u6709\u529f\u80fd - \u2705 \u5217\u8868/\u5b57\u5178\u53c2\u6570\u4f20\u9012 - \u2705 \u7528\u4f8b\u5206\u5c42\u7ec4\u7ec7 - \u2705 \u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8 \u5927\u578b\u9879\u76ee \uff08200+ \u4e2a\u7528\u4f8b\uff09\uff1a - \u2705 \u4e0a\u8ff0\u6240\u6709\u529f\u80fd - \u2705 \u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570 - \u2705 \u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c - \u2705 \u667a\u80fd\u6298\u53e0 + \u6811\u5f62\u5c55\u793a - \u2705 \u62a5\u544a\u4f18\u5316\u9009\u9879 \ud83d\udd04 \u7248\u672c\u6f14\u8fdb\u5386\u53f2 \u00b6 v2.12.x\uff08\u6700\u65b0\uff09 \u00b6 \u2705 \u652f\u6301\u62a5\u544a\u6a21\u677f\u6298\u53e0\u5185\u5bb9\u4e00\u952e\u5c55\u5f00 \u2705 \u4f18\u5316\u62a5\u544a\u6a21\u677f\u6027\u80fd\uff08\u70b9\u51fb\u89e6\u53d1 + \u61d2\u52a0\u8f7d\uff09 \u2705 \u4fee\u590d Python \u5b57\u5178\u6570\u636e\u8bc6\u522b\u95ee\u9898 v2.11.x \u00b6 \u2705 \u8c03\u6574 skip-success \u9ed8\u8ba4\u503c\u4e3a True \u2705 \u62a5\u544a\u6a21\u677f\u589e\u52a0 script \u6821\u9a8c\u5c55\u793a \u2705 \u62a5\u544a\u6a21\u677f\u589e\u52a0\u5185\u5bb9\u6298\u53e0\u548c JSON \u6811\u5f62\u5c55\u793a v2.10.x \u00b6 \u2705 script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u529f\u80fd \uff08\u6838\u5fc3\u7279\u6027\uff09 \u2705 ResponseFieldProxy \u652f\u6301\u70b9\u53f7\u8bbf\u95ee \u2705 \u652f\u6301 elapsed \u5168\u5c40\u53d8\u91cf\u89e3\u6790 \u2705 \u53d8\u91cf\u8f6c\u4e49\u529f\u80fd v2.9.x \u00b6 \u2705 \u4f18\u5316\u53d8\u91cf\u89e3\u6790\u673a\u5236 \u2705 \u4fee\u590d\u5faa\u73af\u4f9d\u8d56\u95ee\u9898 v2.8.x \u00b6 \u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u652f\u6301\u5217\u8868\u53c2\u6570 \u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u652f\u6301\u5b57\u5178\u5bf9\u8c61\u53c2\u6570 \u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u652f\u6301\u590d\u6742\u5d4c\u5957\u5bf9\u8c61 \u2705 \u589e\u5f3a\u53c2\u6570\u89e3\u6790\uff0c\u652f\u6301\u94fe\u5f0f\u53d6\u503c \ud83d\udcd6 \u5b8c\u6574\u66f4\u65b0\u8bb0\u5f55 \uff1a CHANGELOG \ud83c\udf93 \u5b66\u4e60\u8def\u5f84\u63a8\u8350 \u00b6 \u65b0\u624b\u8def\u5f84\uff080-1 \u5468\uff09 \u00b6 \u2705 10\u5206\u949f\u5feb\u901f\u4e0a\u624b - \u5feb\u901f\u4f53\u9a8c \u2705 \u5b89\u88c5\u8bf4\u660e - \u73af\u5883\u642d\u5efa \u2705 script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c - \u6838\u5fc3\u529f\u80fd \u2705 \u5f00\u59cb\u7f16\u5199\u81ea\u5df1\u7684\u6d4b\u8bd5\u7528\u4f8b \u8fdb\u9636\u8def\u5f84\uff081-4 \u5468\uff09 \u00b6 \u2705 \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 - \u6df1\u5165\u7406\u89e3 \u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 - \u590d\u6742\u573a\u666f \u2705 \u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8 - \u6570\u636e\u9a71\u52a8 \u2705 \u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42 - \u9879\u76ee\u7ec4\u7ec7 \u2705 \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b - \u5b9e\u6218\u6848\u4f8b \u4e13\u5bb6\u8def\u5f84\uff081 \u4e2a\u6708+\uff09 \u00b6 \u2705 \u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a - \u4f18\u5316\u62a5\u544a \u2705 \u6027\u80fd\u6d4b\u8bd5 - Locust \u96c6\u6210 \u2705 \u4ee3\u7801\u6846\u67b6 - \u67b6\u6784\u7406\u89e3 \u2705 \u4e8c\u6b21\u5f00\u53d1 - \u5b9a\u5236\u5f00\u53d1 \ud83e\udd1d \u53c2\u4e0e\u8d21\u732e \u00b6 \u5982\u679c\u4f60\u6709\u597d\u7684\u60f3\u6cd5\u6216\u53d1\u73b0\u4e86\u95ee\u9898\uff0c\u6b22\u8fce\uff1a \ud83d\udcdd \u63d0\u4ea4 Issue\uff1a \u95ee\u9898\u53cd\u9988 \ud83d\udd27 \u63d0\u4ea4 PR\uff1a \u8d21\u732e\u4ee3\u7801 \ud83d\udcac \u6280\u672f\u4ea4\u6d41\uff1a\u67e5\u770b \u8d5e\u52a9\u4e0e\u652f\u6301 \ud83d\udcda \u5ef6\u4f38\u9605\u8bfb \u00b6 HttpRunner \u5b98\u65b9\u6587\u6863 Python Requests \u6587\u6863 Locust \u6587\u6863 YAML \u8bed\u6cd5\u6559\u7a0b \ud83c\udf89 \u611f\u8c22\u4f7f\u7528 ApiMeter\uff01\u5982\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u6b22\u8fce\u968f\u65f6\u53cd\u9988\u3002 \ud83d\ude80 \u73b0\u5728\u5c31\u5f00\u59cb\u4f53\u9a8c\u65b0\u7279\u6027\u5427\uff01 \u2192 10\u5206\u949f\u5feb\u901f\u4e0a\u624b","title":"ApiMeter \u65b0\u7279\u6027\u603b\u89c8"},{"location":"features/overview/#apimeter","text":"\u6b22\u8fce\u6765\u5230 ApiMeter \u65b0\u7279\u6027\u4e13\u9898\uff01\u672c\u6587\u6863\u5c06\u5e2e\u52a9\u4f60\u5feb\u901f\u4e86\u89e3 ApiMeter \u76f8\u6bd4 HttpRunner 2.x \u65b0\u589e\u7684\u6240\u6709\u5f3a\u5927\u529f\u80fd\u3002","title":"ApiMeter \u65b0\u7279\u6027\u603b\u89c8"},{"location":"features/overview/#_1","text":"ApiMeter \u57fa\u4e8e HttpRunner 2.5.9 \u6df1\u5ea6\u6269\u5c55\uff0c\u4fdd\u7559\u4e86 HttpRunner \u7684\u6240\u6709\u4f18\u79c0\u7279\u6027\uff0c\u540c\u65f6\u65b0\u589e\u4e86\u591a\u9879\u5f3a\u5927\u529f\u80fd\uff0c\u8ba9 API \u81ea\u52a8\u5316\u6d4b\u8bd5\u66f4\u52a0\u7075\u6d3b\u3001\u9ad8\u6548\u3001\u6613\u7528\u3002","title":"\ud83c\udfaf \u6838\u5fc3\u4f18\u52bf\u6982\u89c8"},{"location":"features/overview/#_2","text":"\u964d\u4f4e\u5b66\u4e60\u6210\u672c - \u4f7f\u7528\u6807\u51c6 Python \u8bed\u6cd5\uff0c\u7b26\u5408\u5f00\u53d1\u8005\u76f4\u89c9 \u63d0\u5347\u8868\u8fbe\u80fd\u529b - \u652f\u6301\u4efb\u610f\u590d\u6742\u7684\u6d4b\u8bd5\u903b\u8f91 \u4f18\u5316\u7528\u6237\u4f53\u9a8c - \u66f4\u53cb\u597d\u7684\u62a5\u544a\u5c55\u793a\u548c\u9519\u8bef\u63d0\u793a \u4fdd\u6301\u5411\u540e\u517c\u5bb9 - \u4e0d\u5f71\u54cd\u73b0\u6709 HttpRunner \u7528\u4f8b","title":"\ud83d\udca1 \u8bbe\u8ba1\u7406\u5ff5"},{"location":"features/overview/#_3","text":"","title":"\ud83d\ude80 \u7279\u6027\u5206\u7c7b\u5bfc\u822a"},{"location":"features/overview/#_4","text":"","title":"\ud83d\udccb \u4e00\u3001\u6821\u9a8c\u80fd\u529b\u589e\u5f3a"},{"location":"features/overview/#1-script","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.10.0+ \u8fd9\u662f ApiMeter \u6700\u6838\u5fc3\u7684\u65b0\u7279\u6027\uff01\u652f\u6301\u4f7f\u7528 Python \u811a\u672c\u8fdb\u884c\u7075\u6d3b\u7684\u54cd\u5e94\u6821\u9a8c\u3002 \u6838\u5fc3\u4f18\u52bf\uff1a - \u2705 \u4f7f\u7528\u6807\u51c6 Python \u8bed\u6cd5\uff08assert\u3001if/else\u3001for \u5faa\u73af\u7b49\uff09 - \u2705 \u96f6\u5b66\u4e60\u6210\u672c\uff0c\u7b26\u5408\u5f00\u53d1\u8005\u76f4\u89c9 - \u2705 \u652f\u6301\u4efb\u610f\u590d\u6742\u7684\u6821\u9a8c\u903b\u8f91 - \u2705 \u9010\u6761\u6267\u884c\uff0c\u5355\u6761\u5931\u8d25\u4e0d\u4e2d\u65ad\u5176\u4ed6\u6821\u9a8c - \u2705 \u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\u548c\u6267\u884c\u7ed3\u679c \u5feb\u901f\u793a\u4f8b\uff1a script : # \u57fa\u7840\u65ad\u8a00 - assert status_code == 200 - assert content.success is True # \u590d\u6742\u6761\u4ef6 - | if content.user.type == \"vip\": assert content.user.vip_level > 0 else: assert content.user.ads_enabled is True # \u5faa\u73af\u6821\u9a8c - | for item in content.items: assert item.get(\"id\") is not None # \u81ea\u5b9a\u4e49\u51fd\u6570 - ${validate_user_data(content.user)} \ud83d\udcd6 \u8be6\u7ec6\u6587\u6863 \uff1a \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u8be6\u89e3","title":"\u2b50 1. script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c"},{"location":"features/overview/#2","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.10.0+ \u5728 script \u4e2d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6240\u6709\u54cd\u5e94\u5b57\u6bb5\uff0c\u65e0\u9700\u7279\u6b8a\u8bed\u6cd5\u3002 \u53ef\u7528\u7684\u5168\u5c40\u53d8\u91cf\uff1a \u53d8\u91cf\u540d \u7c7b\u578b \u8bf4\u660e \u793a\u4f8b status_code int HTTP\u72b6\u6001\u7801 assert status_code == 200 headers dict-like \u54cd\u5e94\u5934 assert headers[\"Content-Type\"] == \"application/json\" cookies dict-like Cookie\u4fe1\u606f assert \"session_id\" in cookies content dict-like \u54cd\u5e94\u5185\u5bb9\uff08JSON\uff09 assert content.user.name is not None body dict-like \u539f\u59cb\u54cd\u5e94\u4f53 assert \"success\" in body json dict-like JSON\u54cd\u5e94 assert json.code == 0 elapsed object \u54cd\u5e94\u65f6\u95f4 assert elapsed.total_seconds < 2.0 ok bool \u8bf7\u6c42\u662f\u5426\u6210\u529f assert ok is True reason str \u72b6\u6001\u8bf4\u660e assert reason == \"OK\" url str \u8bf7\u6c42URL assert \"api\" in url \u6838\u5fc3\u7279\u6027\uff1a - \u2705 \u94fe\u5f0f\u53d6\u503c \uff1a content.user.profile.age - \u2705 \u6570\u7ec4\u8bbf\u95ee \uff1a content.items[0].price - \u2705 \u53d8\u91cf\u8f6c\u4e49 \uff1a \\content \u8f6c\u4e49\u4e3a\u5b57\u7b26\u4e32 \"content\" \ud83d\udcd6 \u8be6\u7ec6\u6587\u6863 \uff1a \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357","title":"\u2b50 2. \u5168\u5c40\u53d8\u91cf\u65e0\u7f1d\u8bbf\u95ee"},{"location":"features/overview/#_5","text":"","title":"\ud83d\udd27 \u4e8c\u3001\u81ea\u5b9a\u4e49\u51fd\u6570\u589e\u5f3a"},{"location":"features/overview/#3","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.0+ \u652f\u6301\u5411\u81ea\u5b9a\u4e49\u51fd\u6570\u4f20\u9012\u5217\u8868\u53c2\u6570\u3002 \u793a\u4f8b\uff1a request : json : # \u4f20\u9012\u5217\u8868\u53c2\u6570\u751f\u6210\u7b7e\u540d sign : ${get_sign_v2([$device_sn, $os_platform, $app_version])} # debugtalk.py def get_sign_v2 ( args_list ): content = \"\" . join ( args_list ) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) return hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest ()","title":"\u2b50 3. \u5217\u8868\u53c2\u6570\u652f\u6301"},{"location":"features/overview/#4","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.0+ \u652f\u6301\u5411\u81ea\u5b9a\u4e49\u51fd\u6570\u4f20\u9012\u5b57\u5178\u5bf9\u8c61\u53c2\u6570\u3002 \u793a\u4f8b\uff1a request : json : # \u4f20\u9012\u5b57\u5178\u53c2\u6570 sign : \"${get_sign_v3({device_sn: $device_sn, os_platform: $os_platform, app_version: $app_version})}\" # debugtalk.py def get_sign_v3 ( args_dict ): content = \"\" . join ([ args_dict [ \"device_sn\" ], args_dict [ \"os_platform\" ], args_dict [ \"app_version\" ] ]) . encode ( \"ascii\" ) sign_key = SECRET_KEY . encode ( \"ascii\" ) return hmac . new ( sign_key , content , hashlib . sha1 ) . hexdigest ()","title":"\u2b50 4. \u5b57\u5178\u53c2\u6570\u652f\u6301"},{"location":"features/overview/#5","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.4+ \u652f\u6301\u4f20\u9012\u590d\u6742\u7684\u5d4c\u5957\u5bf9\u8c61\u914d\u7f6e\u3002 \u793a\u4f8b\uff1a script : - \"${check_nested_list_fields(content, { list_path: productList, nested_list_field: sku, check_fields: [id, amount, origin_amount, currency] })}\"","title":"\u2b50 5. \u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570"},{"location":"features/overview/#6","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.4+ \u652f\u6301\u4f7f\u7528\u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3001\u7c7b\u578b\u6821\u9a8c\u7b49\u9ad8\u7ea7\u529f\u80fd\u3002 \u793a\u4f8b\uff1a script : # \u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c\uff08* \u5339\u914d\u4efb\u610f\u5c42\u7ea7\uff09 - ${check(content, data.product.purchasePlan.*.sku.*.id, data.product.purchasePlan.*.sku.*.amount, data.product.purchasePlan.*.sku.*.currency )} # \u6b63\u5219\u8868\u8fbe\u5f0f\u548c\u7c7b\u578b\u6821\u9a8c - ${check(content, '_url ~= ^https?://[^\\s/$.?#].[^\\s]*$', # \u6b63\u5219\u5339\u914d 'default_currency =* [USD, CNY]' , # \u5305\u542b\u6821\u9a8c 'default_sku @= dict' , # \u7c7b\u578b\u6821\u9a8c 'product @= dict' )} \ud83d\udcd6 \u8be6\u7ec6\u6587\u6863 \uff1a \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5","title":"\u2b50 6. \u94fe\u5f0f\u53c2\u6570 | \u901a\u914d\u7b26 | \u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"features/overview/#_6","text":"","title":"\ud83d\udcca \u4e09\u3001\u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a"},{"location":"features/overview/#7","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.11.0+ \u7279\u6027\uff1a - \u2705 \u8d85\u8fc7 15 \u884c\u7684\u5185\u5bb9\u81ea\u52a8\u6298\u53e0 - \u2705 \u4e00\u952e\u5c55\u5f00/\u6298\u53e0\u6309\u94ae - \u2705 \u4e00\u952e\u590d\u5236\u6309\u94ae - \u2705 \u5927\u5e45\u63d0\u5347\u62a5\u544a\u53ef\u8bfb\u6027 \u5e94\u7528\u573a\u666f\uff1a - \u957f JSON \u54cd\u5e94 - \u590d\u6742\u8bf7\u6c42\u4f53 - \u8be6\u7ec6\u9519\u8bef\u4fe1\u606f","title":"\u2b50 7. \u667a\u80fd\u5185\u5bb9\u6298\u53e0"},{"location":"features/overview/#8-json","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.11.0+ \u7279\u6027\uff1a - \u2705 \u81ea\u52a8\u8bc6\u522b JSON \u548c Python \u5b57\u5178 - \u2705 \u5f69\u8272\u8bed\u6cd5\u9ad8\u4eae - \u2705 \u8282\u70b9\u7ea7\u522b\u5c55\u5f00/\u6298\u53e0 - \u2705 \u652f\u6301\u5927\u578b JSON \u6570\u636e\uff08\u61d2\u52a0\u8f7d\uff09 \u5e94\u7528\u8303\u56f4\uff1a - Request body\uff08\u8bf7\u6c42\u4f53\uff09 - Response body\uff08\u54cd\u5e94\u4f53\uff09 - Request headers\uff08\u8bf7\u6c42\u5934\uff09 - Response headers\uff08\u54cd\u5e94\u5934\uff09 - Validator expect/actual value\uff08\u6821\u9a8c\u5668\u671f\u671b\u503c/\u5b9e\u9645\u503c\uff09 - Script\uff08\u81ea\u5b9a\u4e49\u811a\u672c\uff09 - Output\uff08\u811a\u672c\u6267\u884c\u7ed3\u679c\uff09","title":"\u2b50 8. JSON \u6811\u5f62\u5c55\u793a"},{"location":"features/overview/#9-script","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.11.0+ \u7279\u6027\uff1a - \u2705 \u663e\u793a\u6bcf\u6761\u811a\u672c\u7684\u6267\u884c\u72b6\u6001\uff08\u2713 \u6210\u529f / \u2717 \u5931\u8d25\uff09 - \u2705 \u663e\u793a\u811a\u672c\u8fd4\u56de\u503c\u548c\u8f93\u51fa - \u2705 \u8be6\u7ec6\u7684\u9519\u8bef\u5806\u6808\u4fe1\u606f - \u2705 \u652f\u6301\u6811\u5f62\u5c55\u793a\u590d\u6742\u8f93\u51fa \ud83d\udcd6 \u8be6\u7ec6\u6587\u6863 \uff1a \u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a\u7279\u6027","title":"\u2b50 9. Script \u6267\u884c\u7ed3\u679c\u5c55\u793a"},{"location":"features/overview/#10","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.11.1+ \u7279\u6027\uff1a # \u9ed8\u8ba4\u8df3\u8fc7\u6210\u529f\u7528\u4f8b\uff08\u51cf\u5c0f\u62a5\u544a\u4f53\u79ef\uff09 hrun testcases/ --html report.html # \u663e\u793a\u6240\u6709\u7528\u4f8b\uff08\u5305\u62ec\u6210\u529f\u7684\uff09 hrun testcases/ --html report.html --no-skip-success \u4f18\u52bf\uff1a - \u2705 \u9ed8\u8ba4 --skip-success=True \uff0c\u805a\u7126\u5931\u8d25\u7528\u4f8b - \u2705 \u5927\u5e45\u51cf\u5c0f\u62a5\u544a\u4f53\u79ef\uff08\u53ef\u51cf\u5c11 50%+ \u4f53\u79ef\uff09 - \u2705 \u63d0\u5347\u62a5\u544a\u52a0\u8f7d\u901f\u5ea6 - \u2705 \u5411\u540e\u517c\u5bb9\uff0c\u53ef\u9009\u62e9\u663e\u793a\u6240\u6709\u7528\u4f8b","title":"\u2b50 10. \u62a5\u544a\u4f18\u5316\u9009\u9879"},{"location":"features/overview/#_7","text":"","title":"\ud83d\udd10 \u56db\u3001\u5176\u4ed6\u589e\u5f3a\u7279\u6027"},{"location":"features/overview/#11","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.9.2+ \u5f53\u6570\u636e\u5b57\u6bb5\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u4f7f\u7528\u53cd\u659c\u6760 \\ \u8f6c\u4e49\u3002 \u95ee\u9898\u573a\u666f\uff1a # \u5047\u8bbe\u54cd\u5e94\u6570\u636e\u7ed3\u6784 { \"data\" : { \"content\" : \"some value\" # \u5b57\u6bb5\u540d\u4e3a \"content\" } } \u89e3\u51b3\u65b9\u6848\uff1a script : # content \u662f\u5168\u5c40\u53d8\u91cf\uff08\u6574\u4e2a\u54cd\u5e94\u4f53\uff09 # \u5982\u679c\u60f3\u8868\u793a\u5b57\u7b26\u4e32 \"content\"\uff08\u5b57\u6bb5\u540d\uff09\uff0c\u9700\u8981\u8f6c\u4e49 - ${check_field_exists(data, \\content)} def check_field_exists ( data , field_name ): # field_name \u63a5\u6536\u5230\u7684\u662f\u5b57\u7b26\u4e32 \"content\" return field_name in data \u652f\u6301\u8f6c\u4e49\u7684\u5168\u5c40\u53d8\u91cf\uff1a \\content , \\body , \\text , \\json , \\status_code , \\headers , \\cookies , \\encoding , \\ok , \\reason , \\url","title":"\u2b50 11. \u53d8\u91cf\u8f6c\u4e49\u529f\u80fd"},{"location":"features/overview/#12","text":"\u91cd\u8981\u7a0b\u5ea6 \uff1a\u2b50\u2b50\u2b50\u2b50 \u7248\u672c \uff1av2.8.0+ \u81ea\u5b9a\u4e49\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u5f15\u7528\u5168\u5c40\u53d8\u91cf\u548c\u652f\u6301\u94fe\u5f0f\u53d6\u503c\u3002 \u793a\u4f8b\uff1a validate : # \u5f15\u7528\u5168\u5c40\u53d8\u91cf - eq : [ \"${validate_token_v2(content)}\" , true ] # \u94fe\u5f0f\u53d6\u503c - eq : [ \"${validate_token(content.token)}\" , true ] # \u5f15\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u94fe\u5f0f\u53d6\u503c - eq : [ \"${validate_token($resp.token)}\" , true ]","title":"\u2b50 12. \u81ea\u5b9a\u4e49\u51fd\u6570\u53c2\u6570\u652f\u6301\u5168\u5c40\u53d8\u91cf"},{"location":"features/overview/#_8","text":"\u7279\u6027 \u7a33\u5b9a\u6027 \u63a8\u8350\u5ea6 \u6587\u6863\u5b8c\u6574\u5ea6 \u9002\u7528\u573a\u666f script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u6240\u6709\u9879\u76ee \u5168\u5c40\u53d8\u91cf\u65e0\u7f1d\u8bbf\u95ee \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u6240\u6709\u9879\u76ee \u5217\u8868/\u5b57\u5178\u53c2\u6570 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u590d\u6742\u7b7e\u540d\u573a\u666f \u590d\u6742\u5d4c\u5957\u5bf9\u8c61 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u6279\u91cf\u6821\u9a8c\u573a\u666f \u901a\u914d\u7b26+\u6b63\u5219 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u590d\u6742\u6570\u636e\u7ed3\u6784 \u667a\u80fd\u6298\u53e0 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u5927\u6570\u636e\u91cf\u573a\u666f JSON\u6811\u5f62\u5c55\u793a \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u6240\u6709\u9879\u76ee \u53d8\u91cf\u8f6c\u4e49 \u2b50\u2b50\u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50 \u2b50\u2b50\u2b50\u2b50 \u7279\u5b9a\u5b57\u6bb5\u540d\u573a\u666f","title":"\ud83d\udcca \u7279\u6027\u6210\u719f\u5ea6\u8bc4\u4f30"},{"location":"features/overview/#_9","text":"","title":"\ud83c\udfaf \u5feb\u901f\u9009\u62e9\u6307\u5357"},{"location":"features/overview/#_10","text":"\u6211\u60f3... \u2705 \u7f16\u5199\u590d\u6742\u7684\u6821\u9a8c\u903b\u8f91 \u2192 script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c \u2705 \u4f20\u9012\u590d\u6742\u53c2\u6570\u7ed9\u51fd\u6570 \u2192 \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 \u2705 \u6279\u91cf\u6821\u9a8c\u5d4c\u5957\u6570\u636e \u2192 \u901a\u914d\u7b26\u548c\u6b63\u5219\u8868\u8fbe\u5f0f \u2705 \u4f18\u5316\u6d4b\u8bd5\u62a5\u544a\u53ef\u8bfb\u6027 \u2192 \u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a \u2705 \u4ece HttpRunner \u8fc1\u79fb \u2192 \u8fc1\u79fb\u6307\u5357 \u2705 \u67e5\u770b\u5b8c\u6574\u5b9e\u6218\u6848\u4f8b \u2192 \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b","title":"\u6839\u636e\u4f60\u7684\u9700\u6c42\u9009\u62e9\u529f\u80fd"},{"location":"features/overview/#_11","text":"\u5c0f\u578b\u9879\u76ee \uff08< 50 \u4e2a\u7528\u4f8b\uff09\uff1a - \u2705 script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c - \u2705 \u5168\u5c40\u53d8\u91cf\u76f4\u63a5\u8bbf\u95ee - \u2705 \u57fa\u7840\u62a5\u544a\u529f\u80fd \u4e2d\u578b\u9879\u76ee \uff0850-200 \u4e2a\u7528\u4f8b\uff09\uff1a - \u2705 \u4e0a\u8ff0\u6240\u6709\u529f\u80fd - \u2705 \u5217\u8868/\u5b57\u5178\u53c2\u6570\u4f20\u9012 - \u2705 \u7528\u4f8b\u5206\u5c42\u7ec4\u7ec7 - \u2705 \u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8 \u5927\u578b\u9879\u76ee \uff08200+ \u4e2a\u7528\u4f8b\uff09\uff1a - \u2705 \u4e0a\u8ff0\u6240\u6709\u529f\u80fd - \u2705 \u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570 - \u2705 \u901a\u914d\u7b26\u6279\u91cf\u6821\u9a8c - \u2705 \u667a\u80fd\u6298\u53e0 + \u6811\u5f62\u5c55\u793a - \u2705 \u62a5\u544a\u4f18\u5316\u9009\u9879","title":"\u6839\u636e\u9879\u76ee\u7c7b\u578b\u9009\u62e9"},{"location":"features/overview/#_12","text":"","title":"\ud83d\udd04 \u7248\u672c\u6f14\u8fdb\u5386\u53f2"},{"location":"features/overview/#v212x","text":"\u2705 \u652f\u6301\u62a5\u544a\u6a21\u677f\u6298\u53e0\u5185\u5bb9\u4e00\u952e\u5c55\u5f00 \u2705 \u4f18\u5316\u62a5\u544a\u6a21\u677f\u6027\u80fd\uff08\u70b9\u51fb\u89e6\u53d1 + \u61d2\u52a0\u8f7d\uff09 \u2705 \u4fee\u590d Python \u5b57\u5178\u6570\u636e\u8bc6\u522b\u95ee\u9898","title":"v2.12.x\uff08\u6700\u65b0\uff09"},{"location":"features/overview/#v211x","text":"\u2705 \u8c03\u6574 skip-success \u9ed8\u8ba4\u503c\u4e3a True \u2705 \u62a5\u544a\u6a21\u677f\u589e\u52a0 script \u6821\u9a8c\u5c55\u793a \u2705 \u62a5\u544a\u6a21\u677f\u589e\u52a0\u5185\u5bb9\u6298\u53e0\u548c JSON \u6811\u5f62\u5c55\u793a","title":"v2.11.x"},{"location":"features/overview/#v210x","text":"\u2705 script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c\u529f\u80fd \uff08\u6838\u5fc3\u7279\u6027\uff09 \u2705 ResponseFieldProxy \u652f\u6301\u70b9\u53f7\u8bbf\u95ee \u2705 \u652f\u6301 elapsed \u5168\u5c40\u53d8\u91cf\u89e3\u6790 \u2705 \u53d8\u91cf\u8f6c\u4e49\u529f\u80fd","title":"v2.10.x"},{"location":"features/overview/#v29x","text":"\u2705 \u4f18\u5316\u53d8\u91cf\u89e3\u6790\u673a\u5236 \u2705 \u4fee\u590d\u5faa\u73af\u4f9d\u8d56\u95ee\u9898","title":"v2.9.x"},{"location":"features/overview/#v28x","text":"\u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u652f\u6301\u5217\u8868\u53c2\u6570 \u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u652f\u6301\u5b57\u5178\u5bf9\u8c61\u53c2\u6570 \u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u652f\u6301\u590d\u6742\u5d4c\u5957\u5bf9\u8c61 \u2705 \u589e\u5f3a\u53c2\u6570\u89e3\u6790\uff0c\u652f\u6301\u94fe\u5f0f\u53d6\u503c \ud83d\udcd6 \u5b8c\u6574\u66f4\u65b0\u8bb0\u5f55 \uff1a CHANGELOG","title":"v2.8.x"},{"location":"features/overview/#_13","text":"","title":"\ud83c\udf93 \u5b66\u4e60\u8def\u5f84\u63a8\u8350"},{"location":"features/overview/#0-1","text":"\u2705 10\u5206\u949f\u5feb\u901f\u4e0a\u624b - \u5feb\u901f\u4f53\u9a8c \u2705 \u5b89\u88c5\u8bf4\u660e - \u73af\u5883\u642d\u5efa \u2705 script \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c - \u6838\u5fc3\u529f\u80fd \u2705 \u5f00\u59cb\u7f16\u5199\u81ea\u5df1\u7684\u6d4b\u8bd5\u7528\u4f8b","title":"\u65b0\u624b\u8def\u5f84\uff080-1 \u5468\uff09"},{"location":"features/overview/#1-4","text":"\u2705 \u5168\u5c40\u53d8\u91cf\u5b8c\u6574\u6307\u5357 - \u6df1\u5165\u7406\u89e3 \u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u9ad8\u7ea7\u7528\u6cd5 - \u590d\u6742\u573a\u666f \u2705 \u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8 - \u6570\u636e\u9a71\u52a8 \u2705 \u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42 - \u9879\u76ee\u7ec4\u7ec7 \u2705 \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b - \u5b9e\u6218\u6848\u4f8b","title":"\u8fdb\u9636\u8def\u5f84\uff081-4 \u5468\uff09"},{"location":"features/overview/#1","text":"\u2705 \u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a - \u4f18\u5316\u62a5\u544a \u2705 \u6027\u80fd\u6d4b\u8bd5 - Locust \u96c6\u6210 \u2705 \u4ee3\u7801\u6846\u67b6 - \u67b6\u6784\u7406\u89e3 \u2705 \u4e8c\u6b21\u5f00\u53d1 - \u5b9a\u5236\u5f00\u53d1","title":"\u4e13\u5bb6\u8def\u5f84\uff081 \u4e2a\u6708+\uff09"},{"location":"features/overview/#_14","text":"\u5982\u679c\u4f60\u6709\u597d\u7684\u60f3\u6cd5\u6216\u53d1\u73b0\u4e86\u95ee\u9898\uff0c\u6b22\u8fce\uff1a \ud83d\udcdd \u63d0\u4ea4 Issue\uff1a \u95ee\u9898\u53cd\u9988 \ud83d\udd27 \u63d0\u4ea4 PR\uff1a \u8d21\u732e\u4ee3\u7801 \ud83d\udcac \u6280\u672f\u4ea4\u6d41\uff1a\u67e5\u770b \u8d5e\u52a9\u4e0e\u652f\u6301","title":"\ud83e\udd1d \u53c2\u4e0e\u8d21\u732e"},{"location":"features/overview/#_15","text":"HttpRunner \u5b98\u65b9\u6587\u6863 Python Requests \u6587\u6863 Locust \u6587\u6863 YAML \u8bed\u6cd5\u6559\u7a0b \ud83c\udf89 \u611f\u8c22\u4f7f\u7528 ApiMeter\uff01\u5982\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u6b22\u8fce\u968f\u65f6\u53cd\u9988\u3002 \ud83d\ude80 \u73b0\u5728\u5c31\u5f00\u59cb\u4f53\u9a8c\u65b0\u7279\u6027\u5427\uff01 \u2192 10\u5206\u949f\u5feb\u901f\u4e0a\u624b","title":"\ud83d\udcda \u5ef6\u4f38\u9605\u8bfb"},{"location":"features/report-enhancements/","text":"\u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a\u7279\u6027 \u00b6 ApiMeter \u5bf9\u6d4b\u8bd5\u62a5\u544a\u8fdb\u884c\u4e86\u5927\u5e45\u4f18\u5316\uff0c\u7279\u522b\u662f\u5728\u5927\u6570\u636e\u91cf\u573a\u666f\u4e0b\u7684\u53ef\u8bfb\u6027\u548c\u6027\u80fd\u8868\u73b0\u3002\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u62a5\u544a\u7684\u5404\u9879\u589e\u5f3a\u7279\u6027\u3002 \ud83c\udfaf \u6838\u5fc3\u589e\u5f3a\u7279\u6027 \u00b6 1. \u667a\u80fd\u5185\u5bb9\u6298\u53e0 \u00b6 2. JSON \u6811\u5f62\u5c55\u793a \u00b6 3. Script \u6267\u884c\u7ed3\u679c\u5c55\u793a \u00b6 4. \u62a5\u544a\u4f18\u5316\u9009\u9879 \u00b6 1. \u667a\u80fd\u5185\u5bb9\u6298\u53e0 \u00b6 \u7279\u6027\u8bf4\u660e \u00b6 \u5f53\u5185\u5bb9\u8d85\u8fc7 15 \u884c \u65f6\uff0c\u81ea\u52a8\u6298\u53e0\u663e\u793a\uff0c\u63d0\u4f9b\u66f4\u6e05\u723d\u7684\u62a5\u544a\u754c\u9762\u3002 \u4f18\u52bf\uff1a - \u2705 \u81ea\u52a8\u8bc6\u522b\u957f\u5185\u5bb9 - \u2705 \u4e00\u952e\u5c55\u5f00/\u6298\u53e0 - \u2705 \u4e00\u952e\u590d\u5236\u6309\u94ae - \u2705 \u5927\u5e45\u63d0\u5347\u62a5\u544a\u52a0\u8f7d\u901f\u5ea6 - \u2705 \u51cf\u5c11\u62a5\u544a\u6587\u4ef6\u4f53\u79ef\uff08\u53ef\u51cf\u5c11 30-50%\uff09 \u5e94\u7528\u573a\u666f \u00b6 \u667a\u80fd\u6298\u53e0\u5e94\u7528\u4e8e\u4ee5\u4e0b\u6240\u6709\u5185\u5bb9\uff1a - Request Body\uff08\u8bf7\u6c42\u4f53\uff09 - Response Body\uff08\u54cd\u5e94\u4f53\uff09 - Request Headers\uff08\u8bf7\u6c42\u5934\uff09 - Response Headers\uff08\u54cd\u5e94\u5934\uff09 - Validator Expect/Actual\uff08\u6821\u9a8c\u5668\u671f\u671b\u503c/\u5b9e\u9645\u503c\uff09 - Script\uff08\u81ea\u5b9a\u4e49\u811a\u672c\uff09 - Script Output\uff08\u811a\u672c\u6267\u884c\u7ed3\u679c\uff09 \u4f7f\u7528\u793a\u4f8b \u00b6 \u957f JSON \u54cd\u5e94\u81ea\u52a8\u6298\u53e0\uff1a { \"code\" : 0 , \"message\" : \"success\" , \"data\" : { \"user\" : { ... }, \"products\" : [ ... ], // ... \u66f4\u591a\u6570\u636e\uff08\u8d85\u8fc715\u884c\uff09 } } \u5728\u62a5\u544a\u4e2d\u663e\u793a\u4e3a\uff1a Response Body: (\u5df2\u6298\u53e0 - \u5171 127 \u884c) [\u70b9\u51fb\u5c55\u5f00] [\u590d\u5236] \u70b9\u51fb\u5c55\u5f00\u540e\u5b8c\u6574\u663e\u793a\u6240\u6709\u5185\u5bb9\u3002 2. JSON \u6811\u5f62\u5c55\u793a \u00b6 \u7279\u6027\u8bf4\u660e \u00b6 \u81ea\u52a8\u8bc6\u522b JSON \u548c Python \u5b57\u5178\u6570\u636e\uff0c\u4ee5\u6811\u5f62\u7ed3\u6784\u5c55\u793a\uff0c\u652f\u6301\u8282\u70b9\u7ea7\u522b\u7684\u5c55\u5f00/\u6298\u53e0\u3002 \u4f18\u52bf\uff1a - \u2705 \u5f69\u8272\u8bed\u6cd5\u9ad8\u4eae - \u2705 \u8282\u70b9\u7ea7\u522b\u5c55\u5f00/\u6298\u53e0 - \u2705 \u652f\u6301\u5927\u578b JSON\uff08\u61d2\u52a0\u8f7d\uff09 - \u2705 \u66f4\u76f4\u89c2\u7684\u6570\u636e\u7ed3\u6784\u5c55\u793a - \u2705 \u652f\u6301 JSON \u548c Python \u5b57\u5178\u683c\u5f0f \u89c6\u89c9\u6548\u679c \u00b6 \u4f20\u7edf\u7eaf\u6587\u672c\u663e\u793a\uff1a {\"code\":0,\"message\":\"success\",\"data\":{\"user\":{\"id\":123,\"name\":\"Alice\",\"email\":\"alice@example.com\",\"profile\":{\"age\":25,\"city\":\"Beijing\"}},\"products\":[{\"id\":1,\"name\":\"Product 1\",\"price\":99.99},{\"id\":2,\"name\":\"Product 2\",\"price\":199.99}]}} \u6811\u5f62\u5c55\u793a\uff1a \u25bc { code: 0 message: \"success\" \u25b6 data: {...} } \u70b9\u51fb\u5c55\u5f00 data : \u25bc { code: 0 message: \"success\" \u25bc data: { \u25b6 user: {...} \u25b6 products: [...] } } \u652f\u6301\u7684\u6570\u636e\u683c\u5f0f \u00b6 \u6807\u51c6 JSON\uff1a { \"name\" : \"Alice\" , \"age\" : 25 , \"skills\" : [ \"Python\" , \"Java\" ] } Python \u5b57\u5178\uff08\u5355\u5f15\u53f7\uff09\uff1a { 'name' : 'Alice' , 'age' : 25 , 'skills' : [ 'Python' , 'Java' ] } \u6df7\u5408\u683c\u5f0f\uff1a { \"name\" : 'Alice' , # \u53cc\u5f15\u53f7\u952e\uff0c\u5355\u5f15\u53f7\u503c 'age' : 25 , \"skills\" : [ 'Python' , \"Java\" ] } 3. Script \u6267\u884c\u7ed3\u679c\u5c55\u793a \u00b6 \u7279\u6027\u8bf4\u660e \u00b6 \u5728\u62a5\u544a\u4e2d\u8be6\u7ec6\u5c55\u793a\u6bcf\u6761 script \u811a\u672c\u7684\u6267\u884c\u72b6\u6001\u548c\u7ed3\u679c\u3002 \u663e\u793a\u5185\u5bb9\uff1a - \u2705 \u6bcf\u6761\u811a\u672c\u7684\u6267\u884c\u72b6\u6001\uff08\u2713 \u6210\u529f / \u2717 \u5931\u8d25\uff09 - \u2705 \u811a\u672c\u8fd4\u56de\u503c\u548c\u8f93\u51fa - \u2705 \u5931\u8d25\u811a\u672c\u7684\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f - \u2705 \u5b8c\u6574\u7684\u9519\u8bef\u5806\u6808 - \u2705 \u652f\u6301\u6811\u5f62\u5c55\u793a\u590d\u6742\u8f93\u51fa \u62a5\u544a\u5c55\u793a\u793a\u4f8b \u00b6 \u6210\u529f\u7684\u811a\u672c\uff1a Script Validations: \u2713 assert status_code == 200 Output: None \u2713 assert content.success is True Output: None \u2713 ${validate_token(content.token)} Output: True \u5931\u8d25\u7684\u811a\u672c\uff1a Script Validations: \u2713 assert status_code == 200 Output: None \u2717 assert content.user.age > 18 Error: AssertionError Message: assert 15 > 18 Traceback: File \"<script>\", line 1, in <module> AssertionError \u2713 ${validate_token(content.token)} Output: True \u591a\u884c\u811a\u672c\u8f93\u51fa\uff1a Script Validations: \u2713 | for item in content.items: assert item.get(\"id\") is not None assert item.get(\"price\") > 0 Output: None Checked: 15 items 4. \u62a5\u544a\u4f18\u5316\u9009\u9879 \u00b6 skip-success \u529f\u80fd \u00b6 \u529f\u80fd\u8bf4\u660e\uff1a \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u62a5\u544a\u4e2d\u4f1a\u8df3\u8fc7\u6210\u529f\u7684\u7528\u4f8b\uff0c\u53ea\u663e\u793a\u5931\u8d25\u548c\u9519\u8bef\u7684\u7528\u4f8b\uff0c\u8ba9\u4f60\u4e13\u6ce8\u4e8e\u95ee\u9898\u3002 \u547d\u4ee4\u884c\u9009\u9879\uff1a # \u9ed8\u8ba4\uff1a\u8df3\u8fc7\u6210\u529f\u7528\u4f8b\uff08v2.11.1+\uff09 hrun testcases/ --html report.html # \u7b49\u4ef7\u4e8e hrun testcases/ --html report.html --skip-success # \u663e\u793a\u6240\u6709\u7528\u4f8b\uff08\u5305\u62ec\u6210\u529f\u7684\uff09 hrun testcases/ --html report.html --no-skip-success \u4f18\u52bf\uff1a - \u2705 \u805a\u7126\u5931\u8d25\u7528\u4f8b\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898 - \u2705 \u51cf\u5c11\u62a5\u544a\u4f53\u79ef\uff08\u53ef\u51cf\u5c11 50-70%\uff09 - \u2705 \u63d0\u5347\u62a5\u544a\u52a0\u8f7d\u901f\u5ea6 - \u2705 \u5411\u540e\u517c\u5bb9\uff0c\u53ef\u9009\u62e9\u663e\u793a\u5168\u90e8 \u62a5\u544a\u5bf9\u6bd4\uff1a --no-skip-success\uff08\u663e\u793a\u6240\u6709\uff09\uff1a Test Results: 100 tests, 95 passed, 3 failed, 2 errors \u2713 test_user_login \u2713 test_user_profile \u2713 test_product_list \u2713 test_product_detail ...\uff0891 more passed tests\uff09 \u2717 test_order_create \u2717 test_order_payment \u2717 test_order_query \u2717 test_refund_apply (Error) \u2717 test_refund_status (Error) --skip-success\uff08\u9ed8\u8ba4\uff0c\u53ea\u663e\u793a\u5931\u8d25\uff09\uff1a Test Results: 100 tests, 95 passed, 3 failed, 2 errors \u2717 test_order_create \u2717 test_order_payment \u2717 test_order_query \u2717 test_refund_apply (Error) \u2717 test_refund_status (Error) (95 passed tests are hidden. Use --no-skip-success to show all.) \ud83d\udcca \u62a5\u544a\u5b8c\u6574\u7ed3\u6784 \u00b6 \u62a5\u544a\u6982\u89c8 \u00b6 ApiMeter Test Report ==================== Summary: Total: 50 tests Passed: 45 (90%) Failed: 3 (6%) Errors: 2 (4%) Duration: 12.5s Start Time: 2025-10-16 10:30:00 Platform: Darwin-24.6.0-x86_64 \u6d4b\u8bd5\u8be6\u60c5 \u00b6 \u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5305\u542b\uff1a \u57fa\u672c\u4fe1\u606f \u6d4b\u8bd5\u540d\u79f0 \u6267\u884c\u72b6\u6001\uff08\u2713 / \u2717\uff09 \u6267\u884c\u65f6\u95f4 \u8bf7\u6c42\u4fe1\u606f \uff08\u53ef\u6298\u53e0\uff09 Method & URL Headers\uff08\u6811\u5f62\u5c55\u793a\uff09 Body\uff08\u6811\u5f62\u5c55\u793a\uff09 Query Parameters \u54cd\u5e94\u4fe1\u606f \uff08\u53ef\u6298\u53e0\uff09 Status Code Headers\uff08\u6811\u5f62\u5c55\u793a\uff09 Body\uff08\u6811\u5f62\u5c55\u793a\uff09 Response Time \u6821\u9a8c\u7ed3\u679c Validators\uff08\u4f20\u7edf\u6821\u9a8c\u5668\uff09 Script Validations\uff08\u811a\u672c\u6821\u9a8c\uff0c\u6811\u5f62\u5c55\u793a\uff09 \u53d8\u91cf\u63d0\u53d6 Extracted Variables \u9519\u8bef\u4fe1\u606f \uff08\u5982\u679c\u5931\u8d25\uff09 Error Type Error Message Traceback\uff08\u6811\u5f62\u5c55\u793a\uff09 \ud83c\udfa8 \u62a5\u544a\u589e\u5f3a\u524d\u540e\u5bf9\u6bd4 \u00b6 \u5bf9\u6bd4 1\uff1a\u5927 JSON \u54cd\u5e94 \u00b6 \u589e\u5f3a\u524d\uff1a - \u274c \u6240\u6709\u5185\u5bb9\u4e00\u6b21\u6027\u5c55\u793a - \u274c \u8d85\u957f JSON \u5360\u636e\u5927\u91cf\u7a7a\u95f4 - \u274c \u6eda\u52a8\u56f0\u96be\uff0c\u96be\u4ee5\u5b9a\u4f4d - \u274c \u62a5\u544a\u52a0\u8f7d\u6162 \u589e\u5f3a\u540e\uff1a - \u2705 \u81ea\u52a8\u6298\u53e0\u8d85\u8fc7 15 \u884c\u7684\u5185\u5bb9 - \u2705 \u6811\u5f62\u7ed3\u6784\uff0c\u8282\u70b9\u7ea7\u522b\u5c55\u5f00 - \u2705 \u5f69\u8272\u8bed\u6cd5\u9ad8\u4eae - \u2705 \u62a5\u544a\u52a0\u8f7d\u5feb \u5bf9\u6bd4 2\uff1aScript \u6821\u9a8c\u7ed3\u679c \u00b6 \u589e\u5f3a\u524d\uff1a - \u274c Script \u6267\u884c\u7ed3\u679c\u4e0d\u53ef\u89c1 - \u274c \u53ea\u80fd\u770b\u5230\"Script \u6821\u9a8c\u5931\u8d25\" - \u274c \u65e0\u6cd5\u77e5\u9053\u54ea\u6761\u811a\u672c\u5931\u8d25 - \u274c \u8c03\u8bd5\u56f0\u96be \u589e\u5f3a\u540e\uff1a - \u2705 \u6bcf\u6761\u811a\u672c\u72ec\u7acb\u663e\u793a\u72b6\u6001 - \u2705 \u6e05\u6670\u7684\u6210\u529f/\u5931\u8d25\u6807\u8bb0 - \u2705 \u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\u548c\u5806\u6808 - \u2705 \u8c03\u8bd5\u53cb\u597d \u5bf9\u6bd4 3\uff1a\u62a5\u544a\u4f53\u79ef \u00b6 \u6d4b\u8bd5\u573a\u666f\uff1a 100 \u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6bcf\u4e2a\u7528\u4f8b\u54cd\u5e94 500 \u884c JSON \u7248\u672c \u62a5\u544a\u5927\u5c0f \u52a0\u8f7d\u65f6\u95f4 \u589e\u5f3a\u524d 25 MB 5-8 \u79d2 \u589e\u5f3a\u540e\uff08--no-skip-success\uff09 12 MB 2-3 \u79d2 \u589e\u5f3a\u540e\uff08--skip-success\uff09 3 MB < 1 \u79d2 \ud83d\udca1 \u6700\u4f73\u5b9e\u8df5 \u00b6 1. \u5f00\u53d1\u9636\u6bb5\uff1a\u663e\u793a\u6240\u6709\u7528\u4f8b \u00b6 # \u5f00\u53d1\u9636\u6bb5\uff0c\u67e5\u770b\u6240\u6709\u7528\u4f8b\u8be6\u60c5 hrun testcases/ --html report.html --no-skip-success 2. CI/CD \u9636\u6bb5\uff1a\u53ea\u663e\u793a\u5931\u8d25 \u00b6 # CI/CD \u7ba1\u9053\u4e2d\uff0c\u805a\u7126\u5931\u8d25\u7528\u4f8b hrun testcases/ --html report.html --skip-success 3. \u6027\u80fd\u6d4b\u8bd5\uff1a\u542f\u7528\u6240\u6709\u4f18\u5316 \u00b6 # \u5927\u91cf\u7528\u4f8b\u65f6\uff0c\u4f7f\u7528\u6240\u6709\u4f18\u5316 hrun testcases/ --html report.html --skip-success 4. \u8c03\u8bd5\u5355\u4e2a\u7528\u4f8b\uff1a\u5b8c\u6574\u5c55\u793a \u00b6 # \u8c03\u8bd5\u7279\u5b9a\u7528\u4f8b\uff0c\u67e5\u770b\u6240\u6709\u7ec6\u8282 hrun testcases/test_specific.yml --html report.html --no-skip-success --log-level debug \ud83d\udd27 \u6280\u672f\u5b9e\u73b0 \u00b6 \u6298\u53e0\u673a\u5236 \u00b6 // \u4f2a\u4ee3\u7801\u793a\u4f8b function renderContent ( content ) { const lines = content . split ( '\\n' ); if ( lines . length > 15 ) { // \u81ea\u52a8\u6298\u53e0 return ` <div class=\"collapsible collapsed\"> <button class=\"toggle\">\u5c55\u5f00 ( ${ lines . length } \u884c)</button> <button class=\"copy\">\u590d\u5236</button> <pre class=\"content hidden\"> ${ content } </pre> </div> ` ; } else { // \u76f4\u63a5\u663e\u793a return `<pre> ${ content } </pre>` ; } } \u6811\u5f62\u5c55\u793a \u00b6 // \u4f2a\u4ee3\u7801\u793a\u4f8b function renderTree ( data ) { if ( isJSON ( data )) { return createTreeView ( parseJSON ( data )); } else if ( isPythonDict ( data )) { return createTreeView ( parsePythonDict ( data )); } else { return `<pre> ${ data } </pre>` ; } } \u61d2\u52a0\u8f7d \u00b6 // \u5927\u578b\u6570\u636e\u8282\u70b9\u61d2\u52a0\u8f7d function loadNode ( node ) { if ( node . childCount > 100 ) { // \u5ef6\u8fdf\u52a0\u8f7d\u5b50\u8282\u70b9 node . children = () => fetchChildren ( node . path ); } } \ud83d\udcdd \u603b\u7ed3 \u00b6 ApiMeter \u62a5\u544a\u589e\u5f3a\u7279\u6027\u5bf9\u6bd4\uff1a \u7279\u6027 \u589e\u5f3a\u524d \u589e\u5f3a\u540e \u63d0\u5347 \u5927 JSON \u53ef\u8bfb\u6027 \u2605\u2606\u2606\u2606\u2606 \u2605\u2605\u2605\u2605\u2605 +400% \u62a5\u544a\u4f53\u79ef \u5927 \u5c0f -50~70% \u52a0\u8f7d\u901f\u5ea6 \u6162 \u5feb +300% Script \u7ed3\u679c\u53ef\u89c1\u6027 \u65e0 \u5b8c\u6574 \u65b0\u529f\u80fd \u8c03\u8bd5\u53cb\u597d\u5ea6 \u2605\u2605\u2606\u2606\u2606 \u2605\u2605\u2605\u2605\u2605 +150% \u6838\u5fc3\u4ef7\u503c\uff1a - \u2705 \u53ef\u8bfb\u6027 - \u6811\u5f62\u7ed3\u6784\u8ba9\u590d\u6742\u6570\u636e\u4e00\u76ee\u4e86\u7136 - \u2705 \u6027\u80fd - \u667a\u80fd\u6298\u53e0\u548c\u61d2\u52a0\u8f7d\u5927\u5e45\u63d0\u5347\u52a0\u8f7d\u901f\u5ea6 - \u2705 \u8c03\u8bd5 - Script \u6267\u884c\u8be6\u60c5\u8ba9\u95ee\u9898\u6392\u67e5\u66f4\u7b80\u5355 - \u2705 \u7075\u6d3b - skip-success \u8ba9\u4f60\u4e13\u6ce8\u4e8e\u5931\u8d25\u7528\u4f8b \u4e0b\u4e00\u6b65\u5b66\u4e60\uff1a - 10\u5206\u949f\u5feb\u901f\u4e0a\u624b - \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c - \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b \u6709\u95ee\u9898\uff1f \u67e5\u770b FAQ \u6216 \u63d0\u4ea4 Issue","title":"\u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a\u7279\u6027"},{"location":"features/report-enhancements/#_1","text":"ApiMeter \u5bf9\u6d4b\u8bd5\u62a5\u544a\u8fdb\u884c\u4e86\u5927\u5e45\u4f18\u5316\uff0c\u7279\u522b\u662f\u5728\u5927\u6570\u636e\u91cf\u573a\u666f\u4e0b\u7684\u53ef\u8bfb\u6027\u548c\u6027\u80fd\u8868\u73b0\u3002\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u62a5\u544a\u7684\u5404\u9879\u589e\u5f3a\u7279\u6027\u3002","title":"\u6d4b\u8bd5\u62a5\u544a\u589e\u5f3a\u7279\u6027"},{"location":"features/report-enhancements/#_2","text":"","title":"\ud83c\udfaf \u6838\u5fc3\u589e\u5f3a\u7279\u6027"},{"location":"features/report-enhancements/#1","text":"","title":"1. \u667a\u80fd\u5185\u5bb9\u6298\u53e0"},{"location":"features/report-enhancements/#2-json","text":"","title":"2. JSON \u6811\u5f62\u5c55\u793a"},{"location":"features/report-enhancements/#3-script","text":"","title":"3. Script \u6267\u884c\u7ed3\u679c\u5c55\u793a"},{"location":"features/report-enhancements/#4","text":"","title":"4. \u62a5\u544a\u4f18\u5316\u9009\u9879"},{"location":"features/report-enhancements/#1_1","text":"","title":"1. \u667a\u80fd\u5185\u5bb9\u6298\u53e0"},{"location":"features/report-enhancements/#_3","text":"\u5f53\u5185\u5bb9\u8d85\u8fc7 15 \u884c \u65f6\uff0c\u81ea\u52a8\u6298\u53e0\u663e\u793a\uff0c\u63d0\u4f9b\u66f4\u6e05\u723d\u7684\u62a5\u544a\u754c\u9762\u3002 \u4f18\u52bf\uff1a - \u2705 \u81ea\u52a8\u8bc6\u522b\u957f\u5185\u5bb9 - \u2705 \u4e00\u952e\u5c55\u5f00/\u6298\u53e0 - \u2705 \u4e00\u952e\u590d\u5236\u6309\u94ae - \u2705 \u5927\u5e45\u63d0\u5347\u62a5\u544a\u52a0\u8f7d\u901f\u5ea6 - \u2705 \u51cf\u5c11\u62a5\u544a\u6587\u4ef6\u4f53\u79ef\uff08\u53ef\u51cf\u5c11 30-50%\uff09","title":"\u7279\u6027\u8bf4\u660e"},{"location":"features/report-enhancements/#_4","text":"\u667a\u80fd\u6298\u53e0\u5e94\u7528\u4e8e\u4ee5\u4e0b\u6240\u6709\u5185\u5bb9\uff1a - Request Body\uff08\u8bf7\u6c42\u4f53\uff09 - Response Body\uff08\u54cd\u5e94\u4f53\uff09 - Request Headers\uff08\u8bf7\u6c42\u5934\uff09 - Response Headers\uff08\u54cd\u5e94\u5934\uff09 - Validator Expect/Actual\uff08\u6821\u9a8c\u5668\u671f\u671b\u503c/\u5b9e\u9645\u503c\uff09 - Script\uff08\u81ea\u5b9a\u4e49\u811a\u672c\uff09 - Script Output\uff08\u811a\u672c\u6267\u884c\u7ed3\u679c\uff09","title":"\u5e94\u7528\u573a\u666f"},{"location":"features/report-enhancements/#_5","text":"\u957f JSON \u54cd\u5e94\u81ea\u52a8\u6298\u53e0\uff1a { \"code\" : 0 , \"message\" : \"success\" , \"data\" : { \"user\" : { ... }, \"products\" : [ ... ], // ... \u66f4\u591a\u6570\u636e\uff08\u8d85\u8fc715\u884c\uff09 } } \u5728\u62a5\u544a\u4e2d\u663e\u793a\u4e3a\uff1a Response Body: (\u5df2\u6298\u53e0 - \u5171 127 \u884c) [\u70b9\u51fb\u5c55\u5f00] [\u590d\u5236] \u70b9\u51fb\u5c55\u5f00\u540e\u5b8c\u6574\u663e\u793a\u6240\u6709\u5185\u5bb9\u3002","title":"\u4f7f\u7528\u793a\u4f8b"},{"location":"features/report-enhancements/#2-json_1","text":"","title":"2. JSON \u6811\u5f62\u5c55\u793a"},{"location":"features/report-enhancements/#_6","text":"\u81ea\u52a8\u8bc6\u522b JSON \u548c Python \u5b57\u5178\u6570\u636e\uff0c\u4ee5\u6811\u5f62\u7ed3\u6784\u5c55\u793a\uff0c\u652f\u6301\u8282\u70b9\u7ea7\u522b\u7684\u5c55\u5f00/\u6298\u53e0\u3002 \u4f18\u52bf\uff1a - \u2705 \u5f69\u8272\u8bed\u6cd5\u9ad8\u4eae - \u2705 \u8282\u70b9\u7ea7\u522b\u5c55\u5f00/\u6298\u53e0 - \u2705 \u652f\u6301\u5927\u578b JSON\uff08\u61d2\u52a0\u8f7d\uff09 - \u2705 \u66f4\u76f4\u89c2\u7684\u6570\u636e\u7ed3\u6784\u5c55\u793a - \u2705 \u652f\u6301 JSON \u548c Python \u5b57\u5178\u683c\u5f0f","title":"\u7279\u6027\u8bf4\u660e"},{"location":"features/report-enhancements/#_7","text":"\u4f20\u7edf\u7eaf\u6587\u672c\u663e\u793a\uff1a {\"code\":0,\"message\":\"success\",\"data\":{\"user\":{\"id\":123,\"name\":\"Alice\",\"email\":\"alice@example.com\",\"profile\":{\"age\":25,\"city\":\"Beijing\"}},\"products\":[{\"id\":1,\"name\":\"Product 1\",\"price\":99.99},{\"id\":2,\"name\":\"Product 2\",\"price\":199.99}]}} \u6811\u5f62\u5c55\u793a\uff1a \u25bc { code: 0 message: \"success\" \u25b6 data: {...} } \u70b9\u51fb\u5c55\u5f00 data : \u25bc { code: 0 message: \"success\" \u25bc data: { \u25b6 user: {...} \u25b6 products: [...] } }","title":"\u89c6\u89c9\u6548\u679c"},{"location":"features/report-enhancements/#_8","text":"\u6807\u51c6 JSON\uff1a { \"name\" : \"Alice\" , \"age\" : 25 , \"skills\" : [ \"Python\" , \"Java\" ] } Python \u5b57\u5178\uff08\u5355\u5f15\u53f7\uff09\uff1a { 'name' : 'Alice' , 'age' : 25 , 'skills' : [ 'Python' , 'Java' ] } \u6df7\u5408\u683c\u5f0f\uff1a { \"name\" : 'Alice' , # \u53cc\u5f15\u53f7\u952e\uff0c\u5355\u5f15\u53f7\u503c 'age' : 25 , \"skills\" : [ 'Python' , \"Java\" ] }","title":"\u652f\u6301\u7684\u6570\u636e\u683c\u5f0f"},{"location":"features/report-enhancements/#3-script_1","text":"","title":"3. Script \u6267\u884c\u7ed3\u679c\u5c55\u793a"},{"location":"features/report-enhancements/#_9","text":"\u5728\u62a5\u544a\u4e2d\u8be6\u7ec6\u5c55\u793a\u6bcf\u6761 script \u811a\u672c\u7684\u6267\u884c\u72b6\u6001\u548c\u7ed3\u679c\u3002 \u663e\u793a\u5185\u5bb9\uff1a - \u2705 \u6bcf\u6761\u811a\u672c\u7684\u6267\u884c\u72b6\u6001\uff08\u2713 \u6210\u529f / \u2717 \u5931\u8d25\uff09 - \u2705 \u811a\u672c\u8fd4\u56de\u503c\u548c\u8f93\u51fa - \u2705 \u5931\u8d25\u811a\u672c\u7684\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f - \u2705 \u5b8c\u6574\u7684\u9519\u8bef\u5806\u6808 - \u2705 \u652f\u6301\u6811\u5f62\u5c55\u793a\u590d\u6742\u8f93\u51fa","title":"\u7279\u6027\u8bf4\u660e"},{"location":"features/report-enhancements/#_10","text":"\u6210\u529f\u7684\u811a\u672c\uff1a Script Validations: \u2713 assert status_code == 200 Output: None \u2713 assert content.success is True Output: None \u2713 ${validate_token(content.token)} Output: True \u5931\u8d25\u7684\u811a\u672c\uff1a Script Validations: \u2713 assert status_code == 200 Output: None \u2717 assert content.user.age > 18 Error: AssertionError Message: assert 15 > 18 Traceback: File \"<script>\", line 1, in <module> AssertionError \u2713 ${validate_token(content.token)} Output: True \u591a\u884c\u811a\u672c\u8f93\u51fa\uff1a Script Validations: \u2713 | for item in content.items: assert item.get(\"id\") is not None assert item.get(\"price\") > 0 Output: None Checked: 15 items","title":"\u62a5\u544a\u5c55\u793a\u793a\u4f8b"},{"location":"features/report-enhancements/#4_1","text":"","title":"4. \u62a5\u544a\u4f18\u5316\u9009\u9879"},{"location":"features/report-enhancements/#skip-success","text":"\u529f\u80fd\u8bf4\u660e\uff1a \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u62a5\u544a\u4e2d\u4f1a\u8df3\u8fc7\u6210\u529f\u7684\u7528\u4f8b\uff0c\u53ea\u663e\u793a\u5931\u8d25\u548c\u9519\u8bef\u7684\u7528\u4f8b\uff0c\u8ba9\u4f60\u4e13\u6ce8\u4e8e\u95ee\u9898\u3002 \u547d\u4ee4\u884c\u9009\u9879\uff1a # \u9ed8\u8ba4\uff1a\u8df3\u8fc7\u6210\u529f\u7528\u4f8b\uff08v2.11.1+\uff09 hrun testcases/ --html report.html # \u7b49\u4ef7\u4e8e hrun testcases/ --html report.html --skip-success # \u663e\u793a\u6240\u6709\u7528\u4f8b\uff08\u5305\u62ec\u6210\u529f\u7684\uff09 hrun testcases/ --html report.html --no-skip-success \u4f18\u52bf\uff1a - \u2705 \u805a\u7126\u5931\u8d25\u7528\u4f8b\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898 - \u2705 \u51cf\u5c11\u62a5\u544a\u4f53\u79ef\uff08\u53ef\u51cf\u5c11 50-70%\uff09 - \u2705 \u63d0\u5347\u62a5\u544a\u52a0\u8f7d\u901f\u5ea6 - \u2705 \u5411\u540e\u517c\u5bb9\uff0c\u53ef\u9009\u62e9\u663e\u793a\u5168\u90e8 \u62a5\u544a\u5bf9\u6bd4\uff1a --no-skip-success\uff08\u663e\u793a\u6240\u6709\uff09\uff1a Test Results: 100 tests, 95 passed, 3 failed, 2 errors \u2713 test_user_login \u2713 test_user_profile \u2713 test_product_list \u2713 test_product_detail ...\uff0891 more passed tests\uff09 \u2717 test_order_create \u2717 test_order_payment \u2717 test_order_query \u2717 test_refund_apply (Error) \u2717 test_refund_status (Error) --skip-success\uff08\u9ed8\u8ba4\uff0c\u53ea\u663e\u793a\u5931\u8d25\uff09\uff1a Test Results: 100 tests, 95 passed, 3 failed, 2 errors \u2717 test_order_create \u2717 test_order_payment \u2717 test_order_query \u2717 test_refund_apply (Error) \u2717 test_refund_status (Error) (95 passed tests are hidden. Use --no-skip-success to show all.)","title":"skip-success \u529f\u80fd"},{"location":"features/report-enhancements/#_11","text":"","title":"\ud83d\udcca \u62a5\u544a\u5b8c\u6574\u7ed3\u6784"},{"location":"features/report-enhancements/#_12","text":"ApiMeter Test Report ==================== Summary: Total: 50 tests Passed: 45 (90%) Failed: 3 (6%) Errors: 2 (4%) Duration: 12.5s Start Time: 2025-10-16 10:30:00 Platform: Darwin-24.6.0-x86_64","title":"\u62a5\u544a\u6982\u89c8"},{"location":"features/report-enhancements/#_13","text":"\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5305\u542b\uff1a \u57fa\u672c\u4fe1\u606f \u6d4b\u8bd5\u540d\u79f0 \u6267\u884c\u72b6\u6001\uff08\u2713 / \u2717\uff09 \u6267\u884c\u65f6\u95f4 \u8bf7\u6c42\u4fe1\u606f \uff08\u53ef\u6298\u53e0\uff09 Method & URL Headers\uff08\u6811\u5f62\u5c55\u793a\uff09 Body\uff08\u6811\u5f62\u5c55\u793a\uff09 Query Parameters \u54cd\u5e94\u4fe1\u606f \uff08\u53ef\u6298\u53e0\uff09 Status Code Headers\uff08\u6811\u5f62\u5c55\u793a\uff09 Body\uff08\u6811\u5f62\u5c55\u793a\uff09 Response Time \u6821\u9a8c\u7ed3\u679c Validators\uff08\u4f20\u7edf\u6821\u9a8c\u5668\uff09 Script Validations\uff08\u811a\u672c\u6821\u9a8c\uff0c\u6811\u5f62\u5c55\u793a\uff09 \u53d8\u91cf\u63d0\u53d6 Extracted Variables \u9519\u8bef\u4fe1\u606f \uff08\u5982\u679c\u5931\u8d25\uff09 Error Type Error Message Traceback\uff08\u6811\u5f62\u5c55\u793a\uff09","title":"\u6d4b\u8bd5\u8be6\u60c5"},{"location":"features/report-enhancements/#_14","text":"","title":"\ud83c\udfa8 \u62a5\u544a\u589e\u5f3a\u524d\u540e\u5bf9\u6bd4"},{"location":"features/report-enhancements/#1-json","text":"\u589e\u5f3a\u524d\uff1a - \u274c \u6240\u6709\u5185\u5bb9\u4e00\u6b21\u6027\u5c55\u793a - \u274c \u8d85\u957f JSON \u5360\u636e\u5927\u91cf\u7a7a\u95f4 - \u274c \u6eda\u52a8\u56f0\u96be\uff0c\u96be\u4ee5\u5b9a\u4f4d - \u274c \u62a5\u544a\u52a0\u8f7d\u6162 \u589e\u5f3a\u540e\uff1a - \u2705 \u81ea\u52a8\u6298\u53e0\u8d85\u8fc7 15 \u884c\u7684\u5185\u5bb9 - \u2705 \u6811\u5f62\u7ed3\u6784\uff0c\u8282\u70b9\u7ea7\u522b\u5c55\u5f00 - \u2705 \u5f69\u8272\u8bed\u6cd5\u9ad8\u4eae - \u2705 \u62a5\u544a\u52a0\u8f7d\u5feb","title":"\u5bf9\u6bd4 1\uff1a\u5927 JSON \u54cd\u5e94"},{"location":"features/report-enhancements/#2script","text":"\u589e\u5f3a\u524d\uff1a - \u274c Script \u6267\u884c\u7ed3\u679c\u4e0d\u53ef\u89c1 - \u274c \u53ea\u80fd\u770b\u5230\"Script \u6821\u9a8c\u5931\u8d25\" - \u274c \u65e0\u6cd5\u77e5\u9053\u54ea\u6761\u811a\u672c\u5931\u8d25 - \u274c \u8c03\u8bd5\u56f0\u96be \u589e\u5f3a\u540e\uff1a - \u2705 \u6bcf\u6761\u811a\u672c\u72ec\u7acb\u663e\u793a\u72b6\u6001 - \u2705 \u6e05\u6670\u7684\u6210\u529f/\u5931\u8d25\u6807\u8bb0 - \u2705 \u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\u548c\u5806\u6808 - \u2705 \u8c03\u8bd5\u53cb\u597d","title":"\u5bf9\u6bd4 2\uff1aScript \u6821\u9a8c\u7ed3\u679c"},{"location":"features/report-enhancements/#3","text":"\u6d4b\u8bd5\u573a\u666f\uff1a 100 \u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6bcf\u4e2a\u7528\u4f8b\u54cd\u5e94 500 \u884c JSON \u7248\u672c \u62a5\u544a\u5927\u5c0f \u52a0\u8f7d\u65f6\u95f4 \u589e\u5f3a\u524d 25 MB 5-8 \u79d2 \u589e\u5f3a\u540e\uff08--no-skip-success\uff09 12 MB 2-3 \u79d2 \u589e\u5f3a\u540e\uff08--skip-success\uff09 3 MB < 1 \u79d2","title":"\u5bf9\u6bd4 3\uff1a\u62a5\u544a\u4f53\u79ef"},{"location":"features/report-enhancements/#_15","text":"","title":"\ud83d\udca1 \u6700\u4f73\u5b9e\u8df5"},{"location":"features/report-enhancements/#1_2","text":"# \u5f00\u53d1\u9636\u6bb5\uff0c\u67e5\u770b\u6240\u6709\u7528\u4f8b\u8be6\u60c5 hrun testcases/ --html report.html --no-skip-success","title":"1. \u5f00\u53d1\u9636\u6bb5\uff1a\u663e\u793a\u6240\u6709\u7528\u4f8b"},{"location":"features/report-enhancements/#2-cicd","text":"# CI/CD \u7ba1\u9053\u4e2d\uff0c\u805a\u7126\u5931\u8d25\u7528\u4f8b hrun testcases/ --html report.html --skip-success","title":"2. CI/CD \u9636\u6bb5\uff1a\u53ea\u663e\u793a\u5931\u8d25"},{"location":"features/report-enhancements/#3_1","text":"# \u5927\u91cf\u7528\u4f8b\u65f6\uff0c\u4f7f\u7528\u6240\u6709\u4f18\u5316 hrun testcases/ --html report.html --skip-success","title":"3. \u6027\u80fd\u6d4b\u8bd5\uff1a\u542f\u7528\u6240\u6709\u4f18\u5316"},{"location":"features/report-enhancements/#4_2","text":"# \u8c03\u8bd5\u7279\u5b9a\u7528\u4f8b\uff0c\u67e5\u770b\u6240\u6709\u7ec6\u8282 hrun testcases/test_specific.yml --html report.html --no-skip-success --log-level debug","title":"4. \u8c03\u8bd5\u5355\u4e2a\u7528\u4f8b\uff1a\u5b8c\u6574\u5c55\u793a"},{"location":"features/report-enhancements/#_16","text":"","title":"\ud83d\udd27 \u6280\u672f\u5b9e\u73b0"},{"location":"features/report-enhancements/#_17","text":"// \u4f2a\u4ee3\u7801\u793a\u4f8b function renderContent ( content ) { const lines = content . split ( '\\n' ); if ( lines . length > 15 ) { // \u81ea\u52a8\u6298\u53e0 return ` <div class=\"collapsible collapsed\"> <button class=\"toggle\">\u5c55\u5f00 ( ${ lines . length } \u884c)</button> <button class=\"copy\">\u590d\u5236</button> <pre class=\"content hidden\"> ${ content } </pre> </div> ` ; } else { // \u76f4\u63a5\u663e\u793a return `<pre> ${ content } </pre>` ; } }","title":"\u6298\u53e0\u673a\u5236"},{"location":"features/report-enhancements/#_18","text":"// \u4f2a\u4ee3\u7801\u793a\u4f8b function renderTree ( data ) { if ( isJSON ( data )) { return createTreeView ( parseJSON ( data )); } else if ( isPythonDict ( data )) { return createTreeView ( parsePythonDict ( data )); } else { return `<pre> ${ data } </pre>` ; } }","title":"\u6811\u5f62\u5c55\u793a"},{"location":"features/report-enhancements/#_19","text":"// \u5927\u578b\u6570\u636e\u8282\u70b9\u61d2\u52a0\u8f7d function loadNode ( node ) { if ( node . childCount > 100 ) { // \u5ef6\u8fdf\u52a0\u8f7d\u5b50\u8282\u70b9 node . children = () => fetchChildren ( node . path ); } }","title":"\u61d2\u52a0\u8f7d"},{"location":"features/report-enhancements/#_20","text":"ApiMeter \u62a5\u544a\u589e\u5f3a\u7279\u6027\u5bf9\u6bd4\uff1a \u7279\u6027 \u589e\u5f3a\u524d \u589e\u5f3a\u540e \u63d0\u5347 \u5927 JSON \u53ef\u8bfb\u6027 \u2605\u2606\u2606\u2606\u2606 \u2605\u2605\u2605\u2605\u2605 +400% \u62a5\u544a\u4f53\u79ef \u5927 \u5c0f -50~70% \u52a0\u8f7d\u901f\u5ea6 \u6162 \u5feb +300% Script \u7ed3\u679c\u53ef\u89c1\u6027 \u65e0 \u5b8c\u6574 \u65b0\u529f\u80fd \u8c03\u8bd5\u53cb\u597d\u5ea6 \u2605\u2605\u2606\u2606\u2606 \u2605\u2605\u2605\u2605\u2605 +150% \u6838\u5fc3\u4ef7\u503c\uff1a - \u2705 \u53ef\u8bfb\u6027 - \u6811\u5f62\u7ed3\u6784\u8ba9\u590d\u6742\u6570\u636e\u4e00\u76ee\u4e86\u7136 - \u2705 \u6027\u80fd - \u667a\u80fd\u6298\u53e0\u548c\u61d2\u52a0\u8f7d\u5927\u5e45\u63d0\u5347\u52a0\u8f7d\u901f\u5ea6 - \u2705 \u8c03\u8bd5 - Script \u6267\u884c\u8be6\u60c5\u8ba9\u95ee\u9898\u6392\u67e5\u66f4\u7b80\u5355 - \u2705 \u7075\u6d3b - skip-success \u8ba9\u4f60\u4e13\u6ce8\u4e8e\u5931\u8d25\u7528\u4f8b \u4e0b\u4e00\u6b65\u5b66\u4e60\uff1a - 10\u5206\u949f\u5feb\u901f\u4e0a\u624b - \u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c - \u9ad8\u7ea7\u7528\u6cd5\u793a\u4f8b \u6709\u95ee\u9898\uff1f \u67e5\u770b FAQ \u6216 \u63d0\u4ea4 Issue","title":"\ud83d\udcdd \u603b\u7ed3"},{"location":"prepare/dot-env/","text":"\u73af\u5883\u53d8\u91cf \u00b6 \u73af\u5883\u53d8\u91cf\u7684\u4f5c\u7528 \u00b6 \u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u6709\u65f6\u9700\u8981\u501f\u52a9\u73af\u5883\u53d8\u91cf\u5b9e\u73b0\u67d0\u4e9b\u7279\u5b9a\u7684\u76ee\u7684\uff0c\u5e38\u89c1\u7684\u573a\u666f\u5305\u62ec\uff1a \u5207\u6362\u6d4b\u8bd5\u73af\u5883 \u5207\u6362\u6d4b\u8bd5\u914d\u7f6e \u5b58\u50a8\u654f\u611f\u6570\u636e\uff08\u4ece \u4fe1\u606f\u5b89\u5168 \u7684\u89d2\u5ea6\u51fa\u53d1\uff09 \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf \u00b6 \u5728\u7ec8\u7aef\u4e2d\u9884\u8bbe\u73af\u5883\u53d8\u91cf \u00b6 \u4f7f\u7528\u73af\u5883\u53d8\u91cf\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5728\u7cfb\u7edf\u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540d\u79f0\u548c\u503c\uff0c\u4f20\u7edf\u7684\u65b9\u5f0f\u4e3a\u4f7f\u7528 export \u547d\u4ee4\uff08Windows\u7cfb\u7edf\u4e2d\u4f7f\u7528 set \u547d\u4ee4\uff09\uff1a $ export UserName = admin $ echo $UserName admin $ export Password = 123456 $ echo $Password 123456 \u7136\u540e\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5c31\u53ef\u4ee5\u5bf9\u7cfb\u7edf\u4e2d\u7684\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u8bfb\u53d6\u3002 $ python >>> import os >>> os.environ [ \"UserName\" ] 'admin' \u901a\u8fc7 .env \u6587\u4ef6\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf \u00b6 \u9664\u4e86\u8fd9\u79cd\u65b9\u5f0f\uff0cHttpRunner \u8fd8\u501f\u9274\u4e86 pipenv \u52a0\u8f7d .env \u7684\u65b9\u5f0f \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e2d\uff0c\u521b\u5efa .env \u6587\u4ef6\uff0c\u5e76\u5c06\u654f\u611f\u6570\u636e\u4fe1\u606f\u653e\u7f6e\u5230\u5176\u4e2d\uff0c\u5b58\u50a8\u91c7\u7528 name=value \u7684\u683c\u5f0f\uff1a $ cat .env UserName = admin Password = 123456 PROJECT_KEY = ABCDEFGH \u540c\u65f6\uff0c .env \u6587\u4ef6\u4e0d\u5e94\u8be5\u6dfb\u52a0\u5230\u4ee3\u7801\u4ed3\u5e93\u4e2d\uff0c\u5efa\u8bae\u5c06 .env \u52a0\u5165\u5230 .gitignore \u4e2d\u3002 HttpRunner \u8fd0\u884c\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06 .env \u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u52a0\u8f7d\u5230\u8fd0\u884c\u65f6\uff08RunTime\uff09\u7684\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u7136\u540e\u5728\u8fd0\u884c\u65f6\u4e2d\u5c31\u53ef\u4ee5\u5bf9\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u8bfb\u53d6\u4e86\u3002 \u82e5\u9700\u52a0\u8f7d\u4e0d\u4f4d\u4e8e\u81ea\u52a8\u5316\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u7684 .env \uff0c\u6216\u8005\u5176\u5b83\u540d\u79f0\u7684 .env \u6587\u4ef6\uff08\u4f8b\u5982 production.env \uff09\uff0c\u53ef\u4ee5\u91c7\u7528 --dot-env-path \u53c2\u6570\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\uff1a $ hrun /path/to/testcase.yml --dot-env-path /path/to/.env --log-level debug INFO Loading environment variables from /path/to/.env DEBUG Loaded variable: UserName DEBUG Loaded variable: Password DEBUG Loaded variable: PROJECT_KEY ... \u5f15\u7528\u73af\u5883\u53d8\u91cf \u00b6 \u5728 HttpRunner \u4e2d\u5185\u7f6e\u4e86\u51fd\u6570 environ \uff08\u7b80\u79f0 ENV \uff09\uff0c\u53ef\u7528\u4e8e\u5728 YAML/JSON \u811a\u672c\u4e2d\u76f4\u63a5\u5f15\u7528\u73af\u5883\u53d8\u91cf\u3002 - test : name : login request : url : http://host/api/login method : POST headers : Content-Type : application/json json : username : ${ENV(UserName)} password : ${ENV(Password)} validate : - eq : [ status_code , 200 ] \u82e5\u8fd8\u9700\u5bf9\u8bfb\u53d6\u7684\u73af\u5883\u53d8\u91cf\u505a\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u5219\u53ef\u4ee5\u5728 debugtalk.py \u901a\u8fc7 Python \u5185\u7f6e\u7684\u51fd\u6570 os.environ \u5bf9\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u5f15\u7528\uff0c\u7136\u540e\u518d\u5b9e\u73b0\u5904\u7406\u903b\u8f91\u3002 \u4f8b\u5982\uff0c\u82e5\u53d1\u8d77\u8bf7\u6c42\u7684\u5bc6\u7801\u9700\u8981\u5148\u4e0e\u5bc6\u94a5\u8fdb\u884c\u62fc\u63a5\u5e76\u751f\u6210 MD5\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728 debugtalk.py \u6587\u4ef6\u4e2d\u5b9e\u73b0\u5982\u4e0b\u51fd\u6570\uff1a import os def get_encrypt_password (): raw_passwd = os . environ [ \"Password\" ] PROJECT_KEY = os . environ [ \"PROJECT_KEY\" ]) password = ( raw_passwd + PROJECT_KEY ) . encode ( 'ascii' ) return hmac . new ( password , hashlib . sha1 ) . hexdigest () \u7136\u540e\uff0c\u5728 YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 ${func()} \u7684\u65b9\u5f0f\u5f15\u7528\u73af\u5883\u53d8\u91cf\u7684\u503c\u4e86\u3002 - test : name : login request : url : http://host/api/login method : POST headers : Content-Type : application/json json : username : ${ENV(UserName)} password : ${get_encrypt_password()} validate : - eq : [ status_code , 200 ]","title":"\u73af\u5883\u53d8\u91cf"},{"location":"prepare/dot-env/#_1","text":"","title":"\u73af\u5883\u53d8\u91cf"},{"location":"prepare/dot-env/#_2","text":"\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u6709\u65f6\u9700\u8981\u501f\u52a9\u73af\u5883\u53d8\u91cf\u5b9e\u73b0\u67d0\u4e9b\u7279\u5b9a\u7684\u76ee\u7684\uff0c\u5e38\u89c1\u7684\u573a\u666f\u5305\u62ec\uff1a \u5207\u6362\u6d4b\u8bd5\u73af\u5883 \u5207\u6362\u6d4b\u8bd5\u914d\u7f6e \u5b58\u50a8\u654f\u611f\u6570\u636e\uff08\u4ece \u4fe1\u606f\u5b89\u5168 \u7684\u89d2\u5ea6\u51fa\u53d1\uff09","title":"\u73af\u5883\u53d8\u91cf\u7684\u4f5c\u7528"},{"location":"prepare/dot-env/#_3","text":"","title":"\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"prepare/dot-env/#_4","text":"\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5728\u7cfb\u7edf\u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540d\u79f0\u548c\u503c\uff0c\u4f20\u7edf\u7684\u65b9\u5f0f\u4e3a\u4f7f\u7528 export \u547d\u4ee4\uff08Windows\u7cfb\u7edf\u4e2d\u4f7f\u7528 set \u547d\u4ee4\uff09\uff1a $ export UserName = admin $ echo $UserName admin $ export Password = 123456 $ echo $Password 123456 \u7136\u540e\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5c31\u53ef\u4ee5\u5bf9\u7cfb\u7edf\u4e2d\u7684\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u8bfb\u53d6\u3002 $ python >>> import os >>> os.environ [ \"UserName\" ] 'admin'","title":"\u5728\u7ec8\u7aef\u4e2d\u9884\u8bbe\u73af\u5883\u53d8\u91cf"},{"location":"prepare/dot-env/#env","text":"\u9664\u4e86\u8fd9\u79cd\u65b9\u5f0f\uff0cHttpRunner \u8fd8\u501f\u9274\u4e86 pipenv \u52a0\u8f7d .env \u7684\u65b9\u5f0f \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e2d\uff0c\u521b\u5efa .env \u6587\u4ef6\uff0c\u5e76\u5c06\u654f\u611f\u6570\u636e\u4fe1\u606f\u653e\u7f6e\u5230\u5176\u4e2d\uff0c\u5b58\u50a8\u91c7\u7528 name=value \u7684\u683c\u5f0f\uff1a $ cat .env UserName = admin Password = 123456 PROJECT_KEY = ABCDEFGH \u540c\u65f6\uff0c .env \u6587\u4ef6\u4e0d\u5e94\u8be5\u6dfb\u52a0\u5230\u4ee3\u7801\u4ed3\u5e93\u4e2d\uff0c\u5efa\u8bae\u5c06 .env \u52a0\u5165\u5230 .gitignore \u4e2d\u3002 HttpRunner \u8fd0\u884c\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06 .env \u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u52a0\u8f7d\u5230\u8fd0\u884c\u65f6\uff08RunTime\uff09\u7684\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u7136\u540e\u5728\u8fd0\u884c\u65f6\u4e2d\u5c31\u53ef\u4ee5\u5bf9\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u8bfb\u53d6\u4e86\u3002 \u82e5\u9700\u52a0\u8f7d\u4e0d\u4f4d\u4e8e\u81ea\u52a8\u5316\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u7684 .env \uff0c\u6216\u8005\u5176\u5b83\u540d\u79f0\u7684 .env \u6587\u4ef6\uff08\u4f8b\u5982 production.env \uff09\uff0c\u53ef\u4ee5\u91c7\u7528 --dot-env-path \u53c2\u6570\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\uff1a $ hrun /path/to/testcase.yml --dot-env-path /path/to/.env --log-level debug INFO Loading environment variables from /path/to/.env DEBUG Loaded variable: UserName DEBUG Loaded variable: Password DEBUG Loaded variable: PROJECT_KEY ...","title":"\u901a\u8fc7 .env \u6587\u4ef6\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"prepare/dot-env/#_5","text":"\u5728 HttpRunner \u4e2d\u5185\u7f6e\u4e86\u51fd\u6570 environ \uff08\u7b80\u79f0 ENV \uff09\uff0c\u53ef\u7528\u4e8e\u5728 YAML/JSON \u811a\u672c\u4e2d\u76f4\u63a5\u5f15\u7528\u73af\u5883\u53d8\u91cf\u3002 - test : name : login request : url : http://host/api/login method : POST headers : Content-Type : application/json json : username : ${ENV(UserName)} password : ${ENV(Password)} validate : - eq : [ status_code , 200 ] \u82e5\u8fd8\u9700\u5bf9\u8bfb\u53d6\u7684\u73af\u5883\u53d8\u91cf\u505a\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u5219\u53ef\u4ee5\u5728 debugtalk.py \u901a\u8fc7 Python \u5185\u7f6e\u7684\u51fd\u6570 os.environ \u5bf9\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u5f15\u7528\uff0c\u7136\u540e\u518d\u5b9e\u73b0\u5904\u7406\u903b\u8f91\u3002 \u4f8b\u5982\uff0c\u82e5\u53d1\u8d77\u8bf7\u6c42\u7684\u5bc6\u7801\u9700\u8981\u5148\u4e0e\u5bc6\u94a5\u8fdb\u884c\u62fc\u63a5\u5e76\u751f\u6210 MD5\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728 debugtalk.py \u6587\u4ef6\u4e2d\u5b9e\u73b0\u5982\u4e0b\u51fd\u6570\uff1a import os def get_encrypt_password (): raw_passwd = os . environ [ \"Password\" ] PROJECT_KEY = os . environ [ \"PROJECT_KEY\" ]) password = ( raw_passwd + PROJECT_KEY ) . encode ( 'ascii' ) return hmac . new ( password , hashlib . sha1 ) . hexdigest () \u7136\u540e\uff0c\u5728 YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 ${func()} \u7684\u65b9\u5f0f\u5f15\u7528\u73af\u5883\u53d8\u91cf\u7684\u503c\u4e86\u3002 - test : name : login request : url : http://host/api/login method : POST headers : Content-Type : application/json json : username : ${ENV(UserName)} password : ${get_encrypt_password()} validate : - eq : [ status_code , 200 ]","title":"\u5f15\u7528\u73af\u5883\u53d8\u91cf"},{"location":"prepare/parameters/","text":"\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8 \u00b6 \u4ecb\u7ecd \u00b6 \u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u5982\u4e0b\u573a\u666f\uff1a \u6d4b\u8bd5\u641c\u7d22\u529f\u80fd\uff0c\u53ea\u6709\u4e00\u4e2a\u641c\u7d22\u8f93\u5165\u6846\uff0c\u4f46\u6709 10 \u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u641c\u7d22\u5173\u952e\u5b57\uff1b \u6d4b\u8bd5\u8d26\u53f7\u767b\u5f55\u529f\u80fd\uff0c\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6309\u7167\u7b49\u4ef7\u7c7b\u5212\u5206\u540e\u6709 20 \u79cd\u7ec4\u5408\u60c5\u51b5\u3002 \u8fd9\u91cc\u53ea\u662f\u968f\u610f\u627e\u4e86\u4e24\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u6709\u9047\u5230\u8fc7\u5f88\u591a\u7c7b\u4f3c\u7684\u573a\u666f\u3002\u603b\u7ed3\u4e0b\u6765\uff0c\u5c31\u662f\u5728\u6211\u4eec\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u811a\u672c\u4e2d\u5b58\u5728\u53c2\u6570\uff0c\u5e76\u4e14\u6211\u4eec\u9700\u8981\u91c7\u7528\u4e0d\u540c\u7684\u53c2\u6570\u53bb\u8fd0\u884c\u3002 \u7ecf\u8fc7\u6982\u62ec\uff0c\u53c2\u6570\u57fa\u672c\u4e0a\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a \u5355\u4e2a\u72ec\u7acb\u53c2\u6570\uff1a\u4f8b\u5982\u524d\u9762\u7684\u7b2c\u4e00\u79cd\u573a\u666f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53d8\u6362\u641c\u7d22\u5173\u952e\u5b57\u8fd9\u4e00\u4e2a\u53c2\u6570 \u591a\u4e2a\u5177\u6709\u5173\u8054\u6027\u7684\u53c2\u6570\uff1a\u4f8b\u5982\u524d\u9762\u7684\u7b2c\u4e8c\u79cd\u573a\u666f\uff0c\u6211\u4eec\u9700\u8981\u53d8\u6362\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e24\u4e2a\u53c2\u6570\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u53c2\u6570\u9700\u8981\u5173\u8054\u7ec4\u5408 \u7136\u540e\uff0c\u5bf9\u4e8e\u53c2\u6570\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u80fd\u5177\u6709\u4e00\u4e2a\u53c2\u6570\u5217\u8868\uff0c\u5728\u811a\u672c\u8fd0\u884c\u65f6\u9700\u8981\u6309\u7167\u4e0d\u540c\u7684\u89c4\u5219\u53bb\u53d6\u503c\uff0c\u4f8b\u5982\u987a\u5e8f\u53d6\u503c\u3001\u968f\u673a\u53d6\u503c\u3001\u5faa\u73af\u53d6\u503c\u7b49\u7b49\u3002 \u8fd9\u5c31\u662f\u5178\u578b\u7684\u53c2\u6570\u5316\u548c\u6570\u636e\u9a71\u52a8\u3002 \u5982\u9700\u4e86\u89e3 HttpRunner \u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u673a\u5236\u7684\u5b9e\u73b0\u539f\u7406\u548c\u6280\u672f\u7ec6\u8282\uff0c\u53ef\u524d\u5f80\u9605\u8bfb \u300aHttpRunner \u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u673a\u5236\u300b \u3002 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u51c6\u5907 \u00b6 \u4ece 2.0.0 \u7248\u672c\u5f00\u59cb\uff0cHttpRunner \u4e0d\u518d\u652f\u6301\u5728\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u8fdb\u884c\u53c2\u6570\u5316\u914d\u7f6e\uff1b\u53c2\u6570\u5316\u7684\u529f\u80fd\u9700\u8981\u5728 testsuite \u4e2d\u5b9e\u73b0\u3002\u53d8\u66f4\u7684\u76ee\u7684\u662f\u8ba9\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u7684\u6982\u5ff5\u66f4\u7eaf\u7cb9\uff0c\u5173\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u548c\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u6982\u5ff5\u5b9a\u4e49\uff0c\u8be6\u89c1 \u300a\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7\u300b \u3002 \u53c2\u6570\u5316\u673a\u5236\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u4e2d\u5b9e\u73b0\u3002\u5982\u9700\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\u673a\u5236\uff0c\u9700\u8981\u521b\u5efa\u4e00\u4e2a testsuite\uff0c\u5728 testsuite \u4e2d\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u5b9a\u4e49\u53c2\u6570\u5316\u914d\u7f6e\u3002 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u7684\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a config : name : testsuite description testcases : testcase1_name : testcase : /path/to/testcase1 testcase2_name : testcase : /path/to/testcase2 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0ctestsuite \u548c testcase \u7684\u683c\u5f0f\u5b58\u5728\u8f83\u5927\u533a\u522b\uff0c\u8be6\u89c1 \u300a\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7\u300b \u3002 \u53c2\u6570\u914d\u7f6e\u6982\u8ff0 \u00b6 \u5982\u9700\u5bf9\u67d0\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u9700\u8981\u4f7f\u7528 parameters \u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u53c2\u6570\u540d\u79f0\u5e76\u6307\u5b9a\u6570\u636e\u6e90\u53d6\u503c\u65b9\u5f0f\u3002 \u53c2\u6570\u540d\u79f0\u7684\u5b9a\u4e49\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a \u72ec\u7acb\u53c2\u6570\u5355\u72ec\u8fdb\u884c\u5b9a\u4e49\uff1b \u591a\u4e2a\u53c2\u6570\u5177\u6709\u5173\u8054\u6027\u7684\u53c2\u6570\u9700\u8981\u5c06\u5176\u5b9a\u4e49\u5728\u4e00\u8d77\uff0c\u91c7\u7528\u77ed\u6a2a\u7ebf\uff08 - \uff09\u8fdb\u884c\u8fde\u63a5\u3002 \u6570\u636e\u6e90\u6307\u5b9a\u652f\u6301\u4e09\u79cd\u65b9\u5f0f\uff1a \u5728 YAML/JSON \u4e2d\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868\uff1a\u8be5\u79cd\u65b9\u5f0f\u6700\u4e3a\u7b80\u5355\u6613\u7528\uff0c\u9002\u5408\u53c2\u6570\u5217\u8868\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5 \u901a\u8fc7\u5185\u7f6e\u7684 parameterize\uff08\u53ef\u7b80\u5199\u4e3aP\uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\uff1a\u8be5\u79cd\u65b9\u5f0f\u9700\u8981\u51c6\u5907 CSV \u6570\u636e\u6587\u4ef6\uff0c\u9002\u5408\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u60c5\u51b5 \u8c03\u7528 debugtalk.py \u4e2d\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u751f\u6210\u53c2\u6570\u5217\u8868\uff1a\u8be5\u79cd\u65b9\u5f0f\u6700\u4e3a\u7075\u6d3b\uff0c\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49 Python \u51fd\u6570\u5b9e\u73b0\u4efb\u610f\u573a\u666f\u7684\u6570\u636e\u9a71\u52a8\u673a\u5236\uff0c\u5f53\u9700\u8981\u52a8\u6001\u751f\u6210\u53c2\u6570\u5217\u8868\u65f6\u4e5f\u9700\u8981\u9009\u62e9\u8be5\u79cd\u65b9\u5f0f \u4e09\u79cd\u65b9\u5f0f\u53ef\u6839\u636e\u5b9e\u9645\u9879\u76ee\u9700\u6c42\u8fdb\u884c\u7075\u6d3b\u9009\u62e9\uff0c\u540c\u65f6\u652f\u6301\u591a\u79cd\u65b9\u5f0f\u7684\u7ec4\u5408\u4f7f\u7528\u3002\u5047\u5982\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u4e86\u591a\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u4f1a\u5bf9\u53c2\u6570\u8fdb\u884c\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\uff0c\u8986\u76d6\u6240\u6709\u53c2\u6570\u7ec4\u5408\u60c5\u51b5\u3002 \u4f7f\u7528\u65b9\u5f0f\u6982\u89c8\u5982\u4e0b\uff1a config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : user_agent : [ \"iOS/10.1\" , \"iOS/10.2\" , \"iOS/10.3\" ] user_id : ${P(user_id.csv)} username-password : ${get_account(10)} \u53c2\u6570\u914d\u7f6e\u8be6\u89e3 \u00b6 \u5c06\u53c2\u6570\u540d\u79f0\u5b9a\u4e49\u548c\u6570\u636e\u6e90\u6307\u5b9a\u65b9\u5f0f\u8fdb\u884c\u7ec4\u5408\uff0c\u5171\u6709 6 \u79cd\u5f62\u5f0f\u3002\u73b0\u5206\u522b\u9488\u5bf9\u6bcf\u4e00\u7c7b\u60c5\u51b5\u8fdb\u884c\u8be6\u7ec6\u8bf4\u660e\u3002 \u72ec\u7acb\u53c2\u6570 & \u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868 \u00b6 \u5bf9\u4e8e\u53c2\u6570\u5217\u8868\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u76f4\u63a5\u5728 YAML/JSON \u4e2d\u6307\u5b9a\u53c2\u6570\u5217\u8868\u5185\u5bb9\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u72ec\u7acb\u53c2\u6570 user_id \uff0c\u53c2\u6570\u5217\u8868\u4e3a [1001, 1002, 1003, 1004] \uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a config : name : testcase description testcases : create user : testcase : demo-quickstart-6.yml parameters : user_id : [ 1001 , 1002 , 1003 , 1004 ] \u8fdb\u884c\u8be5\u914d\u7f6e\u540e\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u5c31\u4f1a\u5bf9 user_id \u5b9e\u73b0\u6570\u636e\u9a71\u52a8\uff0c\u5373\u5206\u522b\u4f7f\u7528 [1001, 1002, 1003, 1004] \u56db\u4e2a\u503c\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002 \u70b9\u51fb\u67e5\u770b\u8fd0\u884c\u65e5\u5fd7 $ hrun docs/data/demo-quickstart-7.json INFO Start to run testcase: create user 1001 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 8.95 ms, response_length: 46 bytes . /api/users/1001 INFO POST http://127.0.0.1:5000/api/users/1001 INFO status_code: 201, response_time(ms): 3.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.021s OK INFO Start to run testcase: create user 1002 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 2.78 ms, response_length: 46 bytes . /api/users/1002 INFO POST http://127.0.0.1:5000/api/users/1002 INFO status_code: 201, response_time(ms): 2.84 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.007s OK INFO Start to run testcase: create user 1003 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 2.92 ms, response_length: 46 bytes . /api/users/1003 INFO POST http://127.0.0.1:5000/api/users/1003 INFO status_code: 201, response_time(ms): 5.56 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.011s OK INFO Start to run testcase: create user 1004 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 5.25 ms, response_length: 46 bytes . /api/users/1004 INFO POST http://127.0.0.1:5000/api/users/1004 INFO status_code: 201, response_time(ms): 7.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.016s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548518757.html \u53ef\u4ee5\u770b\u51fa\uff0c\u6d4b\u8bd5\u7528\u4f8b\u603b\u5171\u8fd0\u884c\u4e86 4 \u6b21\uff0c\u5e76\u4e14\u6bcf\u6b21\u8fd0\u884c\u65f6\u90fd\u662f\u91c7\u7528\u7684\u4e0d\u540c user_id\u3002 \u5173\u8054\u53c2\u6570 & \u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868 \u00b6 \u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 username \u548c password\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : username-password : - [ \"user1\" , \"111111\" ] - [ \"user2\" , \"222222\" ] - [ \"user3\" , \"333333\" ] \u8fdb\u884c\u8be5\u914d\u7f6e\u540e\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u5c31\u4f1a\u5bf9 username \u548c password \u5b9e\u73b0\u6570\u636e\u9a71\u52a8\uff0c\u5373\u5206\u522b\u4f7f\u7528 {\"username\": \"user1\", \"password\": \"111111\"} \u3001 {\"username\": \"user2\", \"password\": \"222222\"} \u3001 {\"username\": \"user3\", \"password\": \"333333\"} \u8fd0\u884c 3 \u6b21\u6d4b\u8bd5\uff0c\u5e76\u4e14\u4fdd\u8bc1\u53c2\u6570\u503c\u603b\u662f\u6210\u5bf9\u4f7f\u7528\u3002 \u72ec\u7acb\u53c2\u6570 & \u5f15\u7528 CSV \u6587\u4ef6 \u00b6 \u5bf9\u4e8e\u5df2\u6709\u53c2\u6570\u5217\u8868\uff0c\u5e76\u4e14\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\uff0c\u6bd4\u8f83\u9002\u5408\u7684\u65b9\u5f0f\u662f\u5c06\u53c2\u6570\u5217\u8868\u503c\u5b58\u50a8\u5728 CSV \u6570\u636e\u6587\u4ef6\u4e2d\u3002 \u5bf9\u4e8e CSV \u6570\u636e\u6587\u4ef6\uff0c\u9700\u8981\u9075\u5faa\u5982\u4e0b\u51e0\u9879\u7ea6\u5b9a\u7684\u89c4\u5219\uff1a CSV \u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u4e3a\u53c2\u6570\u540d\u79f0\uff0c\u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\u4e3a\u53c2\u6570\u503c\uff0c\u6bcf\u4e2a\uff08\u7ec4\uff09\u503c\u5360\u4e00\u884c\uff1b \u82e5\u540c\u4e00\u4e2a CSV \u6587\u4ef6\u4e2d\u5177\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5219\u53c2\u6570\u540d\u79f0\u548c\u6570\u503c\u7684\u95f4\u9694\u7b26\u9700\u5b9e\u7528\u82f1\u6587\u9017\u53f7\uff1b \u5728 YAML/JSON \u6587\u4ef6\u5f15\u7528 CSV \u6587\u4ef6\u65f6\uff0c\u6587\u4ef6\u8def\u5f84\u4e3a\u57fa\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff08debugtalk.py \u6240\u5728\u8def\u5f84\uff09\u7684\u76f8\u5bf9\u8def\u5f84\u3002 \u4f8b\u5982\uff0cuser_id \u7684\u53c2\u6570\u53d6\u503c\u8303\u56f4\u4e3a 1001\uff5e2000\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa user_id.csv\uff0c\u5e76\u4e14\u5728\u6587\u4ef6\u4e2d\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u63cf\u8ff0\u3002 user_id 1001 1002 ... 1999 2000 \u7136\u540e\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684 parameterize \uff08\u53ef\u7b80\u5199\u4e3a P \uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\u3002 \u5047\u8bbe\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u6709 data \u6587\u4ef6\u5939\uff0cuser_id.csv \u4f4d\u4e8e\u5176\u4e2d\uff0c\u90a3\u4e48 user_id.csv \u7684\u5f15\u7528\u63cf\u8ff0\u5982\u4e0b\uff1a config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : user_id : ${P(data/user_id.csv)} \u5373 P \u51fd\u6570\u7684\u53c2\u6570\uff08CSV \u6587\u4ef6\u8def\u5f84\uff09\u662f\u76f8\u5bf9\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u5f53\u7136\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4f7f\u7528 CSV \u6587\u4ef6\u5728\u7cfb\u7edf\u4e2d\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u4e0d\u8fc7\u8fd9\u6837\u7684\u8bdd\u5728\u9879\u76ee\u8def\u5f84\u53d8\u52a8\u65f6\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u6b64\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u7684\u5f62\u5f0f\u3002 \u5173\u8054\u53c2\u6570 & \u5f15\u7528 CSV \u6587\u4ef6 \u00b6 \u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 username \u548c password\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u521b\u5efa account.csv \uff0c\u5e76\u5728\u6587\u4ef6\u4e2d\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u63cf\u8ff0\u3002 username,password test1,111111 test2,222222 test3,333333 \u7136\u540e\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684 parameterize \uff08\u53ef\u7b80\u5199\u4e3a P \uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\u3002 \u5047\u8bbe\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u6709 data \u6587\u4ef6\u5939\uff0caccount.csv \u4f4d\u4e8e\u5176\u4e2d\uff0c\u90a3\u4e48 account.csv \u7684\u5f15\u7528\u63cf\u8ff0\u5982\u4e0b\uff1a config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : username-password : ${P(data/account.csv)} \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5728 parameters \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u540d\u79f0\u5fc5\u987b\u4e0e CSV \u6587\u4ef6\u4e2d\u7b2c\u4e00\u884c\u7684\u53c2\u6570\u540d\u79f0\u4e00\u81f4\uff0c\u987a\u5e8f\u53ef\u4ee5\u4e0d\u4e00\u81f4\uff0c\u53c2\u6570\u4e2a\u6570\u4e5f\u53ef\u4ee5\u4e0d\u4e00\u81f4\u3002 \u4f8b\u5982\uff0c\u5728 account.csv \u6587\u4ef6\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u53c2\u6570\uff0cusername\u3001password\u3001phone\u3001age\uff1a username,password,phone,age test1,111111,18600000001,21 test2,222222,18600000002,22 test3,333333,18600000003,23 \u800c\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u6307\u5b9a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u53ea\u4f7f\u7528\u90e8\u5206\u53c2\u6570\uff0c\u5e76\u4e14\u53c2\u6570\u987a\u5e8f\u65e0\u9700\u4e0e CSV \u6587\u4ef6\u4e2d\u53c2\u6570\u540d\u79f0\u7684\u987a\u5e8f\u4e00\u81f4\u3002 config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : phone-username : ${P(account.csv)} \u72ec\u7acb\u53c2\u6570 & \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 \u00b6 \u5bf9\u4e8e\u6ca1\u6709\u73b0\u6210\u53c2\u6570\u5217\u8868\uff0c\u6216\u8005\u9700\u8981\u66f4\u7075\u6d3b\u7684\u65b9\u5f0f\u52a8\u6001\u751f\u6210\u53c2\u6570\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728 debugtalk.py \u4e2d\u81ea\u5b9a\u4e49\u51fd\u6570\u751f\u6210\u53c2\u6570\u5217\u8868\uff0c\u5e76\u5728 YAML/JSON \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u65b9\u5f0f\u3002 \u4f8b\u5982\uff0c\u82e5\u9700\u5bf9 user_id \u8fdb\u884c\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u53c2\u6570\u53d6\u503c\u8303\u56f4\u4e3a 1001\uff5e1004\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u53c2\u6570\u5217\u8868\u3002 def get_user_id (): return [ { \"user_id\" : 1001 }, { \"user_id\" : 1002 }, { \"user_id\" : 1003 }, { \"user_id\" : 1004 } ] \u7136\u540e\uff0c\u5728 YAML/JSON \u7684 parameters \u4e2d\u5c31\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u5f62\u5f0f\u6765\u6307\u5b9a\u6570\u636e\u6e90\u3002 config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : user_id : ${get_user_id()} \u53e6\u5916\uff0c\u901a\u8fc7\u51fd\u6570\u7684\u4f20\u53c2\u673a\u5236\uff0c\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u66f4\u7075\u6d3b\u7684\u53c2\u6570\u751f\u6210\u529f\u80fd\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u6307\u5b9a\u9700\u8981\u751f\u6210\u7684\u53c2\u6570\u4e2a\u6570\u3002 \u5173\u8054\u53c2\u6570 & \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 \u00b6 \u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u7c7b\u4f3c\u3002 \u4f8b\u5982\uff0c\u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u51fd\u6570 get_account\uff0c\u751f\u6210\u6307\u5b9a\u6570\u91cf\u7684\u8d26\u53f7\u5bc6\u7801\u53c2\u6570\u5217\u8868\u3002 def get_account ( num ): accounts = [] for index in range ( 1 , num + 1 ): accounts . append ( { \"username\" : \"user %s \" % index , \"password\" : str ( index ) * 6 }, ) return accounts \u90a3\u4e48\u5728 YAML/JSON \u7684 parameters \u4e2d\u5c31\u53ef\u4ee5\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u751f\u6210\u6307\u5b9a\u6570\u91cf\u7684\u53c2\u6570\u5217\u8868\u3002 config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : username-password : ${get_account(10)} \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\uff0c\u751f\u6210\u7684\u53c2\u6570\u5217\u8868\u5fc5\u987b\u4e3a list of dict \u7684\u6570\u636e\u7ed3\u6784\uff0c\u8be5\u8bbe\u8ba1\u4e3b\u8981\u662f\u4e3a\u4e86\u4e0e CSV \u6587\u4ef6\u7684\u5904\u7406\u673a\u5236\u4fdd\u6301\u4e00\u81f4\u3002 \u53c2\u6570\u5316\u8fd0\u884c \u00b6 \u5b8c\u6210\u4ee5\u4e0a\u53c2\u6570\u5b9a\u4e49\u548c\u6570\u636e\u6e90\u51c6\u5907\u5de5\u4f5c\u4e4b\u540e\uff0c\u53c2\u6570\u5316\u8fd0\u884c\u4e0e\u666e\u901a\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u5b8c\u5168\u4e00\u81f4\u3002 \u91c7\u7528 hrun \u547d\u4ee4\u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1a $ hrun tests/data/demo_parameters.yml \u91c7\u7528 locusts \u547d\u4ee4\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\uff1a $ locusts -f tests/data/demo_parameters.yml \u533a\u522b\u5728\u4e8e\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u65f6\u904d\u5386\u4e00\u904d\u540e\u4f1a\u7ec8\u6b62\u6267\u884c\uff0c\u6027\u80fd\u6d4b\u8bd5\u65f6\u6bcf\u4e2a\u5e76\u53d1\u7528\u6237\u90fd\u4f1a\u5faa\u73af\u904d\u5386\u6240\u6709\u53c2\u6570\u3002 \u6848\u4f8b\u6f14\u793a \u00b6 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u83b7\u53d6 token \u7684 \u6d4b\u8bd5\u7528\u4f8b \u3002 \u70b9\u51fb\u67e5\u770b YAML \u6d4b\u8bd5\u7528\u4f8b - config : name : get token base_url : http://127.0.0.1:5000 variables : device_sn : ${gen_random_string(15)} os_platform : 'ios' app_version : '2.8.6' - test : name : get token with $device_sn, $os_platform, $app_version request : headers : Content-Type : application/json User-Agent : python-requests/2.18.4 app_version : $app_version device_sn : $device_sn os_platform : $os_platform json : sign : ${get_sign($device_sn, $os_platform, $app_version)} method : POST url : /api/get-token extract : token : content.token validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , application/json ] - eq : [ content.success , true ] \u5982\u679c\u6211\u4eec\u9700\u8981\u4f7f\u7528 device_sn\u3001app_version \u548c os_platform \u8fd9\u4e09\u4e2a\u53c2\u6570\u6765\u8fdb\u884c\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a testsuite \uff0c\u5e76\u4e14\u8fdb\u884c\u53c2\u6570\u5316\u914d\u7f6e\u3002 config : name : get token with parameters testcases : get token with $user_agent, $app_version, $os_platform : testcase : demo-testcase-get-token.yml parameters : user_agent : [ \"iOS/10.1\" , \"iOS/10.2\" , \"iOS/10.3\" ] app_version : ${P(app_version.csv)} os_platform : ${get_os_platform()} \u5176\u4e2d\uff0c user_agent \u4f7f\u7528\u4e86\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868\u7684\u5f62\u5f0f\u3002 app_version \u901a\u8fc7 CSV \u6587\u4ef6\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5bf9\u5e94\u7684\u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a app_version 2.8.5 2.8.6 os_platform \u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u5f62\u5f0f\u751f\u6210\u53c2\u6570\u5217\u8868\uff0c\u5bf9\u5e94\u7684\u51fd\u6570\u5185\u5bb9\u4e3a\uff1a def get_os_platform (): return [ { \"os_platform\" : \"ios\" }, { \"os_platform\" : \"android\" } ] \u90a3\u4e48\uff0c\u7ecf\u8fc7\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\uff0c\u5e94\u8be5\u603b\u5171\u6709 3*2*2=12 \u79cd\u53c2\u6570\u7ec4\u5408\u60c5\u51b5\u3002 \u70b9\u51fb\u67e5\u770b\u5b8c\u6574\u8fd0\u884c\u65e5\u5fd7 $ hrun docs/data/demo-parameters-get-token.yml INFO Start to run testcase: get token with iOS/10.1, 2.8.5, ios get token with PBJda7SXM2ReWlu, ios, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 10.66 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.026s OK INFO Start to run testcase: get token with iOS/10.1, 2.8.5, android get token with PBJda7SXM2ReWlu, android, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 3.03 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.004s OK INFO Start to run testcase: get token with iOS/10.1, 2.8.6, ios get token with PBJda7SXM2ReWlu, ios, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 10.76 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.012s OK INFO Start to run testcase: get token with iOS/10.1, 2.8.6, android get token with PBJda7SXM2ReWlu, android, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.49 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.006s OK INFO Start to run testcase: get token with iOS/10.2, 2.8.5, ios get token with PBJda7SXM2ReWlu, ios, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.39 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.006s OK INFO Start to run testcase: get token with iOS/10.2, 2.8.5, android get token with PBJda7SXM2ReWlu, android, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.04 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.005s OK INFO Start to run testcase: get token with iOS/10.2, 2.8.6, ios get token with PBJda7SXM2ReWlu, ios, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 3.44 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.004s OK INFO Start to run testcase: get token with iOS/10.2, 2.8.6, android get token with PBJda7SXM2ReWlu, android, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.03 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.005s OK INFO Start to run testcase: get token with iOS/10.3, 2.8.5, ios get token with PBJda7SXM2ReWlu, ios, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 5.14 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.008s OK INFO Start to run testcase: get token with iOS/10.3, 2.8.5, android get token with PBJda7SXM2ReWlu, android, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 7.62 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.010s OK INFO Start to run testcase: get token with iOS/10.3, 2.8.6, ios get token with PBJda7SXM2ReWlu, ios, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.88 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.006s OK INFO Start to run testcase: get token with iOS/10.3, 2.8.6, android get token with PBJda7SXM2ReWlu, android, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 5.41 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.008s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1551950193.html","title":"\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8"},{"location":"prepare/parameters/#_1","text":"","title":"\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8"},{"location":"prepare/parameters/#_2","text":"\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u5982\u4e0b\u573a\u666f\uff1a \u6d4b\u8bd5\u641c\u7d22\u529f\u80fd\uff0c\u53ea\u6709\u4e00\u4e2a\u641c\u7d22\u8f93\u5165\u6846\uff0c\u4f46\u6709 10 \u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u641c\u7d22\u5173\u952e\u5b57\uff1b \u6d4b\u8bd5\u8d26\u53f7\u767b\u5f55\u529f\u80fd\uff0c\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6309\u7167\u7b49\u4ef7\u7c7b\u5212\u5206\u540e\u6709 20 \u79cd\u7ec4\u5408\u60c5\u51b5\u3002 \u8fd9\u91cc\u53ea\u662f\u968f\u610f\u627e\u4e86\u4e24\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u6709\u9047\u5230\u8fc7\u5f88\u591a\u7c7b\u4f3c\u7684\u573a\u666f\u3002\u603b\u7ed3\u4e0b\u6765\uff0c\u5c31\u662f\u5728\u6211\u4eec\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u811a\u672c\u4e2d\u5b58\u5728\u53c2\u6570\uff0c\u5e76\u4e14\u6211\u4eec\u9700\u8981\u91c7\u7528\u4e0d\u540c\u7684\u53c2\u6570\u53bb\u8fd0\u884c\u3002 \u7ecf\u8fc7\u6982\u62ec\uff0c\u53c2\u6570\u57fa\u672c\u4e0a\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a \u5355\u4e2a\u72ec\u7acb\u53c2\u6570\uff1a\u4f8b\u5982\u524d\u9762\u7684\u7b2c\u4e00\u79cd\u573a\u666f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53d8\u6362\u641c\u7d22\u5173\u952e\u5b57\u8fd9\u4e00\u4e2a\u53c2\u6570 \u591a\u4e2a\u5177\u6709\u5173\u8054\u6027\u7684\u53c2\u6570\uff1a\u4f8b\u5982\u524d\u9762\u7684\u7b2c\u4e8c\u79cd\u573a\u666f\uff0c\u6211\u4eec\u9700\u8981\u53d8\u6362\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e24\u4e2a\u53c2\u6570\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u53c2\u6570\u9700\u8981\u5173\u8054\u7ec4\u5408 \u7136\u540e\uff0c\u5bf9\u4e8e\u53c2\u6570\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u80fd\u5177\u6709\u4e00\u4e2a\u53c2\u6570\u5217\u8868\uff0c\u5728\u811a\u672c\u8fd0\u884c\u65f6\u9700\u8981\u6309\u7167\u4e0d\u540c\u7684\u89c4\u5219\u53bb\u53d6\u503c\uff0c\u4f8b\u5982\u987a\u5e8f\u53d6\u503c\u3001\u968f\u673a\u53d6\u503c\u3001\u5faa\u73af\u53d6\u503c\u7b49\u7b49\u3002 \u8fd9\u5c31\u662f\u5178\u578b\u7684\u53c2\u6570\u5316\u548c\u6570\u636e\u9a71\u52a8\u3002 \u5982\u9700\u4e86\u89e3 HttpRunner \u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u673a\u5236\u7684\u5b9e\u73b0\u539f\u7406\u548c\u6280\u672f\u7ec6\u8282\uff0c\u53ef\u524d\u5f80\u9605\u8bfb \u300aHttpRunner \u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u673a\u5236\u300b \u3002","title":"\u4ecb\u7ecd"},{"location":"prepare/parameters/#testsuite","text":"\u4ece 2.0.0 \u7248\u672c\u5f00\u59cb\uff0cHttpRunner \u4e0d\u518d\u652f\u6301\u5728\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u8fdb\u884c\u53c2\u6570\u5316\u914d\u7f6e\uff1b\u53c2\u6570\u5316\u7684\u529f\u80fd\u9700\u8981\u5728 testsuite \u4e2d\u5b9e\u73b0\u3002\u53d8\u66f4\u7684\u76ee\u7684\u662f\u8ba9\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u7684\u6982\u5ff5\u66f4\u7eaf\u7cb9\uff0c\u5173\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u548c\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u6982\u5ff5\u5b9a\u4e49\uff0c\u8be6\u89c1 \u300a\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7\u300b \u3002 \u53c2\u6570\u5316\u673a\u5236\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u4e2d\u5b9e\u73b0\u3002\u5982\u9700\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\u673a\u5236\uff0c\u9700\u8981\u521b\u5efa\u4e00\u4e2a testsuite\uff0c\u5728 testsuite \u4e2d\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u5b9a\u4e49\u53c2\u6570\u5316\u914d\u7f6e\u3002 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u7684\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a config : name : testsuite description testcases : testcase1_name : testcase : /path/to/testcase1 testcase2_name : testcase : /path/to/testcase2 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0ctestsuite \u548c testcase \u7684\u683c\u5f0f\u5b58\u5728\u8f83\u5927\u533a\u522b\uff0c\u8be6\u89c1 \u300a\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7\u300b \u3002","title":"\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u51c6\u5907"},{"location":"prepare/parameters/#_3","text":"\u5982\u9700\u5bf9\u67d0\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u9700\u8981\u4f7f\u7528 parameters \u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u53c2\u6570\u540d\u79f0\u5e76\u6307\u5b9a\u6570\u636e\u6e90\u53d6\u503c\u65b9\u5f0f\u3002 \u53c2\u6570\u540d\u79f0\u7684\u5b9a\u4e49\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a \u72ec\u7acb\u53c2\u6570\u5355\u72ec\u8fdb\u884c\u5b9a\u4e49\uff1b \u591a\u4e2a\u53c2\u6570\u5177\u6709\u5173\u8054\u6027\u7684\u53c2\u6570\u9700\u8981\u5c06\u5176\u5b9a\u4e49\u5728\u4e00\u8d77\uff0c\u91c7\u7528\u77ed\u6a2a\u7ebf\uff08 - \uff09\u8fdb\u884c\u8fde\u63a5\u3002 \u6570\u636e\u6e90\u6307\u5b9a\u652f\u6301\u4e09\u79cd\u65b9\u5f0f\uff1a \u5728 YAML/JSON \u4e2d\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868\uff1a\u8be5\u79cd\u65b9\u5f0f\u6700\u4e3a\u7b80\u5355\u6613\u7528\uff0c\u9002\u5408\u53c2\u6570\u5217\u8868\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5 \u901a\u8fc7\u5185\u7f6e\u7684 parameterize\uff08\u53ef\u7b80\u5199\u4e3aP\uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\uff1a\u8be5\u79cd\u65b9\u5f0f\u9700\u8981\u51c6\u5907 CSV \u6570\u636e\u6587\u4ef6\uff0c\u9002\u5408\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u60c5\u51b5 \u8c03\u7528 debugtalk.py \u4e2d\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u751f\u6210\u53c2\u6570\u5217\u8868\uff1a\u8be5\u79cd\u65b9\u5f0f\u6700\u4e3a\u7075\u6d3b\uff0c\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49 Python \u51fd\u6570\u5b9e\u73b0\u4efb\u610f\u573a\u666f\u7684\u6570\u636e\u9a71\u52a8\u673a\u5236\uff0c\u5f53\u9700\u8981\u52a8\u6001\u751f\u6210\u53c2\u6570\u5217\u8868\u65f6\u4e5f\u9700\u8981\u9009\u62e9\u8be5\u79cd\u65b9\u5f0f \u4e09\u79cd\u65b9\u5f0f\u53ef\u6839\u636e\u5b9e\u9645\u9879\u76ee\u9700\u6c42\u8fdb\u884c\u7075\u6d3b\u9009\u62e9\uff0c\u540c\u65f6\u652f\u6301\u591a\u79cd\u65b9\u5f0f\u7684\u7ec4\u5408\u4f7f\u7528\u3002\u5047\u5982\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u4e86\u591a\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u4f1a\u5bf9\u53c2\u6570\u8fdb\u884c\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\uff0c\u8986\u76d6\u6240\u6709\u53c2\u6570\u7ec4\u5408\u60c5\u51b5\u3002 \u4f7f\u7528\u65b9\u5f0f\u6982\u89c8\u5982\u4e0b\uff1a config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : user_agent : [ \"iOS/10.1\" , \"iOS/10.2\" , \"iOS/10.3\" ] user_id : ${P(user_id.csv)} username-password : ${get_account(10)}","title":"\u53c2\u6570\u914d\u7f6e\u6982\u8ff0"},{"location":"prepare/parameters/#_4","text":"\u5c06\u53c2\u6570\u540d\u79f0\u5b9a\u4e49\u548c\u6570\u636e\u6e90\u6307\u5b9a\u65b9\u5f0f\u8fdb\u884c\u7ec4\u5408\uff0c\u5171\u6709 6 \u79cd\u5f62\u5f0f\u3002\u73b0\u5206\u522b\u9488\u5bf9\u6bcf\u4e00\u7c7b\u60c5\u51b5\u8fdb\u884c\u8be6\u7ec6\u8bf4\u660e\u3002","title":"\u53c2\u6570\u914d\u7f6e\u8be6\u89e3"},{"location":"prepare/parameters/#_5","text":"\u5bf9\u4e8e\u53c2\u6570\u5217\u8868\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u76f4\u63a5\u5728 YAML/JSON \u4e2d\u6307\u5b9a\u53c2\u6570\u5217\u8868\u5185\u5bb9\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u72ec\u7acb\u53c2\u6570 user_id \uff0c\u53c2\u6570\u5217\u8868\u4e3a [1001, 1002, 1003, 1004] \uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a config : name : testcase description testcases : create user : testcase : demo-quickstart-6.yml parameters : user_id : [ 1001 , 1002 , 1003 , 1004 ] \u8fdb\u884c\u8be5\u914d\u7f6e\u540e\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u5c31\u4f1a\u5bf9 user_id \u5b9e\u73b0\u6570\u636e\u9a71\u52a8\uff0c\u5373\u5206\u522b\u4f7f\u7528 [1001, 1002, 1003, 1004] \u56db\u4e2a\u503c\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002 \u70b9\u51fb\u67e5\u770b\u8fd0\u884c\u65e5\u5fd7 $ hrun docs/data/demo-quickstart-7.json INFO Start to run testcase: create user 1001 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 8.95 ms, response_length: 46 bytes . /api/users/1001 INFO POST http://127.0.0.1:5000/api/users/1001 INFO status_code: 201, response_time(ms): 3.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.021s OK INFO Start to run testcase: create user 1002 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 2.78 ms, response_length: 46 bytes . /api/users/1002 INFO POST http://127.0.0.1:5000/api/users/1002 INFO status_code: 201, response_time(ms): 2.84 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.007s OK INFO Start to run testcase: create user 1003 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 2.92 ms, response_length: 46 bytes . /api/users/1003 INFO POST http://127.0.0.1:5000/api/users/1003 INFO status_code: 201, response_time(ms): 5.56 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.011s OK INFO Start to run testcase: create user 1004 /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 5.25 ms, response_length: 46 bytes . /api/users/1004 INFO POST http://127.0.0.1:5000/api/users/1004 INFO status_code: 201, response_time(ms): 7.02 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.016s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548518757.html \u53ef\u4ee5\u770b\u51fa\uff0c\u6d4b\u8bd5\u7528\u4f8b\u603b\u5171\u8fd0\u884c\u4e86 4 \u6b21\uff0c\u5e76\u4e14\u6bcf\u6b21\u8fd0\u884c\u65f6\u90fd\u662f\u91c7\u7528\u7684\u4e0d\u540c user_id\u3002","title":"\u72ec\u7acb\u53c2\u6570 &amp; \u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868"},{"location":"prepare/parameters/#_6","text":"\u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 username \u548c password\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : username-password : - [ \"user1\" , \"111111\" ] - [ \"user2\" , \"222222\" ] - [ \"user3\" , \"333333\" ] \u8fdb\u884c\u8be5\u914d\u7f6e\u540e\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u5c31\u4f1a\u5bf9 username \u548c password \u5b9e\u73b0\u6570\u636e\u9a71\u52a8\uff0c\u5373\u5206\u522b\u4f7f\u7528 {\"username\": \"user1\", \"password\": \"111111\"} \u3001 {\"username\": \"user2\", \"password\": \"222222\"} \u3001 {\"username\": \"user3\", \"password\": \"333333\"} \u8fd0\u884c 3 \u6b21\u6d4b\u8bd5\uff0c\u5e76\u4e14\u4fdd\u8bc1\u53c2\u6570\u503c\u603b\u662f\u6210\u5bf9\u4f7f\u7528\u3002","title":"\u5173\u8054\u53c2\u6570 &amp; \u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868"},{"location":"prepare/parameters/#csv","text":"\u5bf9\u4e8e\u5df2\u6709\u53c2\u6570\u5217\u8868\uff0c\u5e76\u4e14\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\uff0c\u6bd4\u8f83\u9002\u5408\u7684\u65b9\u5f0f\u662f\u5c06\u53c2\u6570\u5217\u8868\u503c\u5b58\u50a8\u5728 CSV \u6570\u636e\u6587\u4ef6\u4e2d\u3002 \u5bf9\u4e8e CSV \u6570\u636e\u6587\u4ef6\uff0c\u9700\u8981\u9075\u5faa\u5982\u4e0b\u51e0\u9879\u7ea6\u5b9a\u7684\u89c4\u5219\uff1a CSV \u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u4e3a\u53c2\u6570\u540d\u79f0\uff0c\u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\u4e3a\u53c2\u6570\u503c\uff0c\u6bcf\u4e2a\uff08\u7ec4\uff09\u503c\u5360\u4e00\u884c\uff1b \u82e5\u540c\u4e00\u4e2a CSV \u6587\u4ef6\u4e2d\u5177\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5219\u53c2\u6570\u540d\u79f0\u548c\u6570\u503c\u7684\u95f4\u9694\u7b26\u9700\u5b9e\u7528\u82f1\u6587\u9017\u53f7\uff1b \u5728 YAML/JSON \u6587\u4ef6\u5f15\u7528 CSV \u6587\u4ef6\u65f6\uff0c\u6587\u4ef6\u8def\u5f84\u4e3a\u57fa\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff08debugtalk.py \u6240\u5728\u8def\u5f84\uff09\u7684\u76f8\u5bf9\u8def\u5f84\u3002 \u4f8b\u5982\uff0cuser_id \u7684\u53c2\u6570\u53d6\u503c\u8303\u56f4\u4e3a 1001\uff5e2000\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa user_id.csv\uff0c\u5e76\u4e14\u5728\u6587\u4ef6\u4e2d\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u63cf\u8ff0\u3002 user_id 1001 1002 ... 1999 2000 \u7136\u540e\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684 parameterize \uff08\u53ef\u7b80\u5199\u4e3a P \uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\u3002 \u5047\u8bbe\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u6709 data \u6587\u4ef6\u5939\uff0cuser_id.csv \u4f4d\u4e8e\u5176\u4e2d\uff0c\u90a3\u4e48 user_id.csv \u7684\u5f15\u7528\u63cf\u8ff0\u5982\u4e0b\uff1a config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : user_id : ${P(data/user_id.csv)} \u5373 P \u51fd\u6570\u7684\u53c2\u6570\uff08CSV \u6587\u4ef6\u8def\u5f84\uff09\u662f\u76f8\u5bf9\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u5f53\u7136\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4f7f\u7528 CSV \u6587\u4ef6\u5728\u7cfb\u7edf\u4e2d\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u4e0d\u8fc7\u8fd9\u6837\u7684\u8bdd\u5728\u9879\u76ee\u8def\u5f84\u53d8\u52a8\u65f6\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u6b64\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u7684\u5f62\u5f0f\u3002","title":"\u72ec\u7acb\u53c2\u6570 &amp; \u5f15\u7528 CSV \u6587\u4ef6"},{"location":"prepare/parameters/#csv_1","text":"\u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 username \u548c password\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u521b\u5efa account.csv \uff0c\u5e76\u5728\u6587\u4ef6\u4e2d\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u63cf\u8ff0\u3002 username,password test1,111111 test2,222222 test3,333333 \u7136\u540e\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684 parameterize \uff08\u53ef\u7b80\u5199\u4e3a P \uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\u3002 \u5047\u8bbe\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u6709 data \u6587\u4ef6\u5939\uff0caccount.csv \u4f4d\u4e8e\u5176\u4e2d\uff0c\u90a3\u4e48 account.csv \u7684\u5f15\u7528\u63cf\u8ff0\u5982\u4e0b\uff1a config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : username-password : ${P(data/account.csv)} \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5728 parameters \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u540d\u79f0\u5fc5\u987b\u4e0e CSV \u6587\u4ef6\u4e2d\u7b2c\u4e00\u884c\u7684\u53c2\u6570\u540d\u79f0\u4e00\u81f4\uff0c\u987a\u5e8f\u53ef\u4ee5\u4e0d\u4e00\u81f4\uff0c\u53c2\u6570\u4e2a\u6570\u4e5f\u53ef\u4ee5\u4e0d\u4e00\u81f4\u3002 \u4f8b\u5982\uff0c\u5728 account.csv \u6587\u4ef6\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u53c2\u6570\uff0cusername\u3001password\u3001phone\u3001age\uff1a username,password,phone,age test1,111111,18600000001,21 test2,222222,18600000002,22 test3,333333,18600000003,23 \u800c\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u6307\u5b9a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u53ea\u4f7f\u7528\u90e8\u5206\u53c2\u6570\uff0c\u5e76\u4e14\u53c2\u6570\u987a\u5e8f\u65e0\u9700\u4e0e CSV \u6587\u4ef6\u4e2d\u53c2\u6570\u540d\u79f0\u7684\u987a\u5e8f\u4e00\u81f4\u3002 config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : phone-username : ${P(account.csv)}","title":"\u5173\u8054\u53c2\u6570 &amp; \u5f15\u7528 CSV \u6587\u4ef6"},{"location":"prepare/parameters/#_7","text":"\u5bf9\u4e8e\u6ca1\u6709\u73b0\u6210\u53c2\u6570\u5217\u8868\uff0c\u6216\u8005\u9700\u8981\u66f4\u7075\u6d3b\u7684\u65b9\u5f0f\u52a8\u6001\u751f\u6210\u53c2\u6570\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728 debugtalk.py \u4e2d\u81ea\u5b9a\u4e49\u51fd\u6570\u751f\u6210\u53c2\u6570\u5217\u8868\uff0c\u5e76\u5728 YAML/JSON \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u65b9\u5f0f\u3002 \u4f8b\u5982\uff0c\u82e5\u9700\u5bf9 user_id \u8fdb\u884c\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u53c2\u6570\u53d6\u503c\u8303\u56f4\u4e3a 1001\uff5e1004\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u53c2\u6570\u5217\u8868\u3002 def get_user_id (): return [ { \"user_id\" : 1001 }, { \"user_id\" : 1002 }, { \"user_id\" : 1003 }, { \"user_id\" : 1004 } ] \u7136\u540e\uff0c\u5728 YAML/JSON \u7684 parameters \u4e2d\u5c31\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u5f62\u5f0f\u6765\u6307\u5b9a\u6570\u636e\u6e90\u3002 config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : user_id : ${get_user_id()} \u53e6\u5916\uff0c\u901a\u8fc7\u51fd\u6570\u7684\u4f20\u53c2\u673a\u5236\uff0c\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u66f4\u7075\u6d3b\u7684\u53c2\u6570\u751f\u6210\u529f\u80fd\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u6307\u5b9a\u9700\u8981\u751f\u6210\u7684\u53c2\u6570\u4e2a\u6570\u3002","title":"\u72ec\u7acb\u53c2\u6570 &amp; \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570"},{"location":"prepare/parameters/#_8","text":"\u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u7c7b\u4f3c\u3002 \u4f8b\u5982\uff0c\u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u51fd\u6570 get_account\uff0c\u751f\u6210\u6307\u5b9a\u6570\u91cf\u7684\u8d26\u53f7\u5bc6\u7801\u53c2\u6570\u5217\u8868\u3002 def get_account ( num ): accounts = [] for index in range ( 1 , num + 1 ): accounts . append ( { \"username\" : \"user %s \" % index , \"password\" : str ( index ) * 6 }, ) return accounts \u90a3\u4e48\u5728 YAML/JSON \u7684 parameters \u4e2d\u5c31\u53ef\u4ee5\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u751f\u6210\u6307\u5b9a\u6570\u91cf\u7684\u53c2\u6570\u5217\u8868\u3002 config : name : \"demo\" testcases : testcase1_name : testcase : /path/to/testcase1 parameters : username-password : ${get_account(10)} \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\uff0c\u751f\u6210\u7684\u53c2\u6570\u5217\u8868\u5fc5\u987b\u4e3a list of dict \u7684\u6570\u636e\u7ed3\u6784\uff0c\u8be5\u8bbe\u8ba1\u4e3b\u8981\u662f\u4e3a\u4e86\u4e0e CSV \u6587\u4ef6\u7684\u5904\u7406\u673a\u5236\u4fdd\u6301\u4e00\u81f4\u3002","title":"\u5173\u8054\u53c2\u6570 &amp; \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570"},{"location":"prepare/parameters/#_9","text":"\u5b8c\u6210\u4ee5\u4e0a\u53c2\u6570\u5b9a\u4e49\u548c\u6570\u636e\u6e90\u51c6\u5907\u5de5\u4f5c\u4e4b\u540e\uff0c\u53c2\u6570\u5316\u8fd0\u884c\u4e0e\u666e\u901a\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u5b8c\u5168\u4e00\u81f4\u3002 \u91c7\u7528 hrun \u547d\u4ee4\u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1a $ hrun tests/data/demo_parameters.yml \u91c7\u7528 locusts \u547d\u4ee4\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\uff1a $ locusts -f tests/data/demo_parameters.yml \u533a\u522b\u5728\u4e8e\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u65f6\u904d\u5386\u4e00\u904d\u540e\u4f1a\u7ec8\u6b62\u6267\u884c\uff0c\u6027\u80fd\u6d4b\u8bd5\u65f6\u6bcf\u4e2a\u5e76\u53d1\u7528\u6237\u90fd\u4f1a\u5faa\u73af\u904d\u5386\u6240\u6709\u53c2\u6570\u3002","title":"\u53c2\u6570\u5316\u8fd0\u884c"},{"location":"prepare/parameters/#_10","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u83b7\u53d6 token \u7684 \u6d4b\u8bd5\u7528\u4f8b \u3002 \u70b9\u51fb\u67e5\u770b YAML \u6d4b\u8bd5\u7528\u4f8b - config : name : get token base_url : http://127.0.0.1:5000 variables : device_sn : ${gen_random_string(15)} os_platform : 'ios' app_version : '2.8.6' - test : name : get token with $device_sn, $os_platform, $app_version request : headers : Content-Type : application/json User-Agent : python-requests/2.18.4 app_version : $app_version device_sn : $device_sn os_platform : $os_platform json : sign : ${get_sign($device_sn, $os_platform, $app_version)} method : POST url : /api/get-token extract : token : content.token validate : - eq : [ status_code , 200 ] - eq : [ headers.Content-Type , application/json ] - eq : [ content.success , true ] \u5982\u679c\u6211\u4eec\u9700\u8981\u4f7f\u7528 device_sn\u3001app_version \u548c os_platform \u8fd9\u4e09\u4e2a\u53c2\u6570\u6765\u8fdb\u884c\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a testsuite \uff0c\u5e76\u4e14\u8fdb\u884c\u53c2\u6570\u5316\u914d\u7f6e\u3002 config : name : get token with parameters testcases : get token with $user_agent, $app_version, $os_platform : testcase : demo-testcase-get-token.yml parameters : user_agent : [ \"iOS/10.1\" , \"iOS/10.2\" , \"iOS/10.3\" ] app_version : ${P(app_version.csv)} os_platform : ${get_os_platform()} \u5176\u4e2d\uff0c user_agent \u4f7f\u7528\u4e86\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868\u7684\u5f62\u5f0f\u3002 app_version \u901a\u8fc7 CSV \u6587\u4ef6\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5bf9\u5e94\u7684\u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a app_version 2.8.5 2.8.6 os_platform \u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u5f62\u5f0f\u751f\u6210\u53c2\u6570\u5217\u8868\uff0c\u5bf9\u5e94\u7684\u51fd\u6570\u5185\u5bb9\u4e3a\uff1a def get_os_platform (): return [ { \"os_platform\" : \"ios\" }, { \"os_platform\" : \"android\" } ] \u90a3\u4e48\uff0c\u7ecf\u8fc7\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\uff0c\u5e94\u8be5\u603b\u5171\u6709 3*2*2=12 \u79cd\u53c2\u6570\u7ec4\u5408\u60c5\u51b5\u3002 \u70b9\u51fb\u67e5\u770b\u5b8c\u6574\u8fd0\u884c\u65e5\u5fd7 $ hrun docs/data/demo-parameters-get-token.yml INFO Start to run testcase: get token with iOS/10.1, 2.8.5, ios get token with PBJda7SXM2ReWlu, ios, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 10.66 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.026s OK INFO Start to run testcase: get token with iOS/10.1, 2.8.5, android get token with PBJda7SXM2ReWlu, android, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 3.03 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.004s OK INFO Start to run testcase: get token with iOS/10.1, 2.8.6, ios get token with PBJda7SXM2ReWlu, ios, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 10.76 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.012s OK INFO Start to run testcase: get token with iOS/10.1, 2.8.6, android get token with PBJda7SXM2ReWlu, android, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.49 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.006s OK INFO Start to run testcase: get token with iOS/10.2, 2.8.5, ios get token with PBJda7SXM2ReWlu, ios, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.39 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.006s OK INFO Start to run testcase: get token with iOS/10.2, 2.8.5, android get token with PBJda7SXM2ReWlu, android, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.04 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.005s OK INFO Start to run testcase: get token with iOS/10.2, 2.8.6, ios get token with PBJda7SXM2ReWlu, ios, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 3.44 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.004s OK INFO Start to run testcase: get token with iOS/10.2, 2.8.6, android get token with PBJda7SXM2ReWlu, android, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.03 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.005s OK INFO Start to run testcase: get token with iOS/10.3, 2.8.5, ios get token with PBJda7SXM2ReWlu, ios, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 5.14 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.008s OK INFO Start to run testcase: get token with iOS/10.3, 2.8.5, android get token with PBJda7SXM2ReWlu, android, 2.8.5 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 7.62 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.010s OK INFO Start to run testcase: get token with iOS/10.3, 2.8.6, ios get token with PBJda7SXM2ReWlu, ios, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 4.88 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.006s OK INFO Start to run testcase: get token with iOS/10.3, 2.8.6, android get token with PBJda7SXM2ReWlu, android, 2.8.6 INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 5.41 ms, response_length: 46 bytes . ---------------------------------------------------------------------- Ran 1 test in 0.008s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1551950193.html","title":"\u6848\u4f8b\u6f14\u793a"},{"location":"prepare/pretty/","text":"\u7528\u4f8b\u683c\u5f0f\u5316 \u00b6 \u652f\u6301\u5bf9 JSON \u683c\u5f0f\u6d4b\u8bd5\u7528\u4f8b\u7684\u5185\u5bb9\u8fdb\u884c\u683c\u5f0f\u6b63\u786e\u6027\u68c0\u6d4b\u548c\u6837\u5f0f\u7f8e\u5316\u529f\u80fd\u3002 JSON \u683c\u5f0f\u6b63\u786e\u6027\u68c0\u6d4b \u00b6 \u82e5\u9700\u5bf9 JSON \u683c\u5f0f\u7528\u4f8b\u6587\u4ef6\u7684\u5185\u5bb9\u8fdb\u884c\u6b63\u786e\u6027\u68c0\u6d4b\uff0c\u53ef\u4f7f\u7528 --validate \u53c2\u6570\u3002 \u53ef\u6307\u5b9a\u5355\u4e2a JSON \u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u3002 $ hrun --validate docs/data/demo-quickstart.json Start to validate JSON file: docs/data/demo-quickstart.json OK \u4e5f\u53ef\u6307\u5b9a\u591a\u4e2a JSON \u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u3002 $ hrun --validate docs/data/demo-quickstart.json docs/data/demo-quickstart.yml docs/data/demo-quickstart-0.json Start to validate JSON file: docs/data/demo-quickstart.json OK WARNING Only JSON file format can be validated, skip docs/data/demo-quickstart.yml Start to validate JSON file: docs/data/demo-quickstart-0.json OK \u5982\u4e0a\u6240\u793a\uff0c\u5f53\u4f20\u5165\u7684\u6587\u4ef6\u540e\u7f00\u4e0d\u662f .json \uff0cHttpRunner \u4f1a\u6253\u5370 WARNING \u4fe1\u606f\uff0c\u5e76\u8df3\u8fc7\u68c0\u6d4b\u3002 \u82e5 JSON \u6587\u4ef6\u683c\u5f0f\u6b63\u786e\uff0c\u5219\u6253\u5370 OK\u3002 \u82e5 JSON \u6587\u4ef6\u683c\u5f0f\u5b58\u5728\u5f02\u5e38\uff0c\u5219\u6253\u5370\u8be6\u7ec6\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u7cbe\u786e\u5230\u9519\u8bef\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u884c\u548c\u5217\u3002 $ hrun --validate docs/data/demo-quickstart.json Start to validate JSON file: docs/data/demo-quickstart.json Expecting ',' delimiter: line 5 column 13 ( char 82 ) JSON \u683c\u5f0f\u7f8e\u5316 \u00b6 \u4e0e YAML \u683c\u5f0f\u4e0d\u540c\uff0cJSON \u683c\u5f0f\u4e0d\u5f3a\u5236\u8981\u6c42\u7f29\u8fdb\u548c\u6362\u884c\uff0c\u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e C \u8bed\u8a00\u548c Python \u8bed\u8a00\u7684\u5dee\u5f02\u3002 \u4f8b\u5982\uff0c demo-quickstart.json \u6587\u4ef6\u4e5f\u53ef\u4ee5\u6539\u5199\u4e3a\u5982\u4e0b\u5f62\u5f0f\u3002 [{ \"config\" : { \"name\" : \"testcase description\" , \"variables\" : [], \"request\" : { \"base_url\" : \"\" , \"headers\" : { \"User-Agent\" : \"python-requests/2.18.4\" }}}},{ \"test\" : { \"name\" : \"/api/get-token\" , \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/get-token\" , \"headers\" : { \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"user_agent\" : \"iOS/10.3\" , \"os_platform\" : \"ios\" , \"app_version\" : \"2.8.6\" , \"Content-Type\" : \"application/json\" }, \"method\" : \"POST\" , \"json\" : { \"sign\" : \"9c0c7e51c91ae963c833a4ccbab8d683c4a90c98\" }}, \"validate\" : [{ \"eq\" : [ \"status_code\" , 200 ]},{ \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]},{ \"eq\" : [ \"content.success\" , true ]},{ \"eq\" : [ \"content.token\" , \"baNLX1zhFYP11Seb\" ]}]}},{ \"test\" : { \"name\" : \"/api/users/1000\" , \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/users/1000\" , \"headers\" : { \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"token\" : \"baNLX1zhFYP11Seb\" , \"Content-Type\" : \"application/json\" }, \"method\" : \"POST\" , \"json\" : { \"name\" : \"user1\" , \"password\" : \"123456\" }}, \"validate\" : [{ \"eq\" : [ \"status_code\" , 201 ]},{ \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]},{ \"eq\" : [ \"content.success\" , true ]},{ \"eq\" : [ \"content.msg\" , \"user created successfully.\" ]}]}}] \u867d\u7136\u4e0a\u9762 JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u80fd\u6b63\u5e38\u6267\u884c\uff0c\u4f46\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u53ef\u8bfb\u6027\u592a\u5dee\uff0c\u4e0d\u5229\u4e8e\u9605\u8bfb\u548c\u7ef4\u62a4\u3002 \u9488\u5bf9\u8be5\u9700\u6c42\uff0c\u53ef\u4f7f\u7528 --prettify \u53c2\u6570\u5bf9 JSON \u683c\u5f0f\u7528\u4f8b\u6587\u4ef6\u8fdb\u884c\u6837\u5f0f\u7f8e\u5316\u3002 \u53ef\u6307\u5b9a\u5355\u4e2a JSON \u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u3002 $ hrun --prettify docs/data/demo-quickstart.json Start to prettify JSON file: docs/data/demo-quickstart.json success: docs/data/demo-quickstart.pretty.json \u4e5f\u53ef\u6307\u5b9a\u591a\u4e2a JSON \u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u3002 $ hrun --prettify docs/data/demo-quickstart.json docs/data/demo-quickstart.yml docs/data/demo-quickstart-0.json WARNING Only JSON file format can be prettified, skip: docs/data/demo-quickstart.yml Start to prettify JSON file: docs/data/demo-quickstart.json success: docs/data/demo-quickstart.pretty.json Start to prettify JSON file: docs/data/demo-quickstart-0.json success: docs/data/demo-quickstart-0.pretty.json \u5982\u4e0a\u6240\u793a\uff0c\u5f53\u4f20\u5165\u7684\u6587\u4ef6\u540e\u7f00\u4e0d\u662f .json \uff0cHttpRunner \u4f1a\u6253\u5370 WARNING \u4fe1\u606f\uff0c\u5e76\u8df3\u8fc7\u68c0\u6d4b\u3002 \u82e5\u8f6c\u6362\u6210\u529f\uff0c\u5219\u6253\u5370\u7f8e\u5316\u540e\u7684\u6587\u4ef6\u8def\u5f84\uff1b\u82e5 JSON \u6587\u4ef6\u683c\u5f0f\u5b58\u5728\u5f02\u5e38\uff0c\u5219\u6253\u5370\u8be6\u7ec6\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u7cbe\u786e\u5230\u9519\u8bef\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u884c\u548c\u5217\u3002","title":"\u7528\u4f8b\u683c\u5f0f\u5316"},{"location":"prepare/pretty/#_1","text":"\u652f\u6301\u5bf9 JSON \u683c\u5f0f\u6d4b\u8bd5\u7528\u4f8b\u7684\u5185\u5bb9\u8fdb\u884c\u683c\u5f0f\u6b63\u786e\u6027\u68c0\u6d4b\u548c\u6837\u5f0f\u7f8e\u5316\u529f\u80fd\u3002","title":"\u7528\u4f8b\u683c\u5f0f\u5316"},{"location":"prepare/pretty/#json","text":"\u82e5\u9700\u5bf9 JSON \u683c\u5f0f\u7528\u4f8b\u6587\u4ef6\u7684\u5185\u5bb9\u8fdb\u884c\u6b63\u786e\u6027\u68c0\u6d4b\uff0c\u53ef\u4f7f\u7528 --validate \u53c2\u6570\u3002 \u53ef\u6307\u5b9a\u5355\u4e2a JSON \u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u3002 $ hrun --validate docs/data/demo-quickstart.json Start to validate JSON file: docs/data/demo-quickstart.json OK \u4e5f\u53ef\u6307\u5b9a\u591a\u4e2a JSON \u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u3002 $ hrun --validate docs/data/demo-quickstart.json docs/data/demo-quickstart.yml docs/data/demo-quickstart-0.json Start to validate JSON file: docs/data/demo-quickstart.json OK WARNING Only JSON file format can be validated, skip docs/data/demo-quickstart.yml Start to validate JSON file: docs/data/demo-quickstart-0.json OK \u5982\u4e0a\u6240\u793a\uff0c\u5f53\u4f20\u5165\u7684\u6587\u4ef6\u540e\u7f00\u4e0d\u662f .json \uff0cHttpRunner \u4f1a\u6253\u5370 WARNING \u4fe1\u606f\uff0c\u5e76\u8df3\u8fc7\u68c0\u6d4b\u3002 \u82e5 JSON \u6587\u4ef6\u683c\u5f0f\u6b63\u786e\uff0c\u5219\u6253\u5370 OK\u3002 \u82e5 JSON \u6587\u4ef6\u683c\u5f0f\u5b58\u5728\u5f02\u5e38\uff0c\u5219\u6253\u5370\u8be6\u7ec6\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u7cbe\u786e\u5230\u9519\u8bef\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u884c\u548c\u5217\u3002 $ hrun --validate docs/data/demo-quickstart.json Start to validate JSON file: docs/data/demo-quickstart.json Expecting ',' delimiter: line 5 column 13 ( char 82 )","title":"JSON \u683c\u5f0f\u6b63\u786e\u6027\u68c0\u6d4b"},{"location":"prepare/pretty/#json_1","text":"\u4e0e YAML \u683c\u5f0f\u4e0d\u540c\uff0cJSON \u683c\u5f0f\u4e0d\u5f3a\u5236\u8981\u6c42\u7f29\u8fdb\u548c\u6362\u884c\uff0c\u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e C \u8bed\u8a00\u548c Python \u8bed\u8a00\u7684\u5dee\u5f02\u3002 \u4f8b\u5982\uff0c demo-quickstart.json \u6587\u4ef6\u4e5f\u53ef\u4ee5\u6539\u5199\u4e3a\u5982\u4e0b\u5f62\u5f0f\u3002 [{ \"config\" : { \"name\" : \"testcase description\" , \"variables\" : [], \"request\" : { \"base_url\" : \"\" , \"headers\" : { \"User-Agent\" : \"python-requests/2.18.4\" }}}},{ \"test\" : { \"name\" : \"/api/get-token\" , \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/get-token\" , \"headers\" : { \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"user_agent\" : \"iOS/10.3\" , \"os_platform\" : \"ios\" , \"app_version\" : \"2.8.6\" , \"Content-Type\" : \"application/json\" }, \"method\" : \"POST\" , \"json\" : { \"sign\" : \"9c0c7e51c91ae963c833a4ccbab8d683c4a90c98\" }}, \"validate\" : [{ \"eq\" : [ \"status_code\" , 200 ]},{ \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]},{ \"eq\" : [ \"content.success\" , true ]},{ \"eq\" : [ \"content.token\" , \"baNLX1zhFYP11Seb\" ]}]}},{ \"test\" : { \"name\" : \"/api/users/1000\" , \"request\" : { \"url\" : \"http://127.0.0.1:5000/api/users/1000\" , \"headers\" : { \"device_sn\" : \"FwgRiO7CNA50DSU\" , \"token\" : \"baNLX1zhFYP11Seb\" , \"Content-Type\" : \"application/json\" }, \"method\" : \"POST\" , \"json\" : { \"name\" : \"user1\" , \"password\" : \"123456\" }}, \"validate\" : [{ \"eq\" : [ \"status_code\" , 201 ]},{ \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]},{ \"eq\" : [ \"content.success\" , true ]},{ \"eq\" : [ \"content.msg\" , \"user created successfully.\" ]}]}}] \u867d\u7136\u4e0a\u9762 JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u80fd\u6b63\u5e38\u6267\u884c\uff0c\u4f46\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u53ef\u8bfb\u6027\u592a\u5dee\uff0c\u4e0d\u5229\u4e8e\u9605\u8bfb\u548c\u7ef4\u62a4\u3002 \u9488\u5bf9\u8be5\u9700\u6c42\uff0c\u53ef\u4f7f\u7528 --prettify \u53c2\u6570\u5bf9 JSON \u683c\u5f0f\u7528\u4f8b\u6587\u4ef6\u8fdb\u884c\u6837\u5f0f\u7f8e\u5316\u3002 \u53ef\u6307\u5b9a\u5355\u4e2a JSON \u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u3002 $ hrun --prettify docs/data/demo-quickstart.json Start to prettify JSON file: docs/data/demo-quickstart.json success: docs/data/demo-quickstart.pretty.json \u4e5f\u53ef\u6307\u5b9a\u591a\u4e2a JSON \u7528\u4f8b\u6587\u4ef6\u8def\u5f84\u3002 $ hrun --prettify docs/data/demo-quickstart.json docs/data/demo-quickstart.yml docs/data/demo-quickstart-0.json WARNING Only JSON file format can be prettified, skip: docs/data/demo-quickstart.yml Start to prettify JSON file: docs/data/demo-quickstart.json success: docs/data/demo-quickstart.pretty.json Start to prettify JSON file: docs/data/demo-quickstart-0.json success: docs/data/demo-quickstart-0.pretty.json \u5982\u4e0a\u6240\u793a\uff0c\u5f53\u4f20\u5165\u7684\u6587\u4ef6\u540e\u7f00\u4e0d\u662f .json \uff0cHttpRunner \u4f1a\u6253\u5370 WARNING \u4fe1\u606f\uff0c\u5e76\u8df3\u8fc7\u68c0\u6d4b\u3002 \u82e5\u8f6c\u6362\u6210\u529f\uff0c\u5219\u6253\u5370\u7f8e\u5316\u540e\u7684\u6587\u4ef6\u8def\u5f84\uff1b\u82e5 JSON \u6587\u4ef6\u683c\u5f0f\u5b58\u5728\u5f02\u5e38\uff0c\u5219\u6253\u5370\u8be6\u7ec6\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u7cbe\u786e\u5230\u9519\u8bef\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u884c\u548c\u5217\u3002","title":"JSON \u683c\u5f0f\u7f8e\u5316"},{"location":"prepare/project-structure/","text":"\u9879\u76ee\u6587\u4ef6\u7ec4\u7ec7 \u00b6 \u6587\u4ef6\u7c7b\u578b\u8bf4\u660e \u00b6 \u5728 HttpRunner \u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\u4e2d\uff0c\u4e3b\u8981\u5b58\u5728\u5982\u4e0b\u51e0\u7c7b\u6587\u4ef6\uff1a YAML/JSON \uff08\u5fc5\u987b\uff09\uff1a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\uff0c\u5b58\u50a8\u63a5\u53e3\u6d4b\u8bd5\u76f8\u5173\u4fe1\u606f debugtalk.py \uff08\u53ef\u9009\uff09\uff1a\u5b58\u50a8\u9879\u76ee\u4e2d\u903b\u8f91\u8fd0\u7b97\u8f85\u52a9\u51fd\u6570 \u8be5\u6587\u4ef6\u5b58\u5728\u65f6\uff0c\u5c06\u4f5c\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\u5b9a\u4f4d\u6807\u8bb0\uff0c\u5176\u6240\u5728\u76ee\u5f55\u5373\u88ab\u89c6\u4e3a\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd0\u884c\u6d4b\u8bd5\u7684\u6240\u5728\u8def\u5f84\uff08 CWD \uff09\u5c06\u88ab\u89c6\u4e3a\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u4f8b\u5982 .csv \uff09\u5747\u9700\u57fa\u4e8e\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u8fd0\u884c\u6d4b\u8bd5\u540e\uff0c\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\u5939\uff08 reports \uff09\u4f1a\u751f\u6210\u5728\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 .env \uff08\u53ef\u9009\uff09\uff1a\u5b58\u50a8\u9879\u76ee\u73af\u5883\u53d8\u91cf\uff0c\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u9879\u76ee\u654f\u611f\u4fe1\u606f .csv \uff08\u53ef\u9009\uff09\uff1a\u9879\u76ee\u6570\u636e\u6587\u4ef6\uff0c\u7528\u4e8e\u8fdb\u884c\u6570\u636e\u9a71\u52a8 reports \uff1a\u9ed8\u8ba4\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\u7684\u5b58\u50a8\u6587\u4ef6\u5939 \u9879\u76ee\u6587\u4ef6\u7ed3\u6784 \u00b6 \u5bf9\u4e8e\u63a5\u53e3\u6570\u6bd4\u8f83\u5c11\uff0c\u6216\u8005\u6d4b\u8bd5\u573a\u666f\u6bd4\u8f83\u7b80\u5355\u7684\u9879\u76ee\uff0c\u7ec4\u7ec7\u6d4b\u8bd5\u7528\u4f8b\u65f6\u65e0\u9700\u5206\u5c42\u3002\u5728\u6b64\u79cd\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u6587\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u6ca1\u6709\u4efb\u4f55\u8981\u6c42\uff0c\u5728\u9879\u76ee\u4e2d\u53ea\u9700\u8981\u4e00\u5806 YAML/JSON \u6587\u4ef6\u5373\u53ef\uff0c\u6bcf\u4e00\u4e2a\u6587\u4ef6\u5355\u72ec\u5bf9\u5e94\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\uff1b\u6839\u636e\u9700\u8981\uff0c\u9879\u76ee\u4e2d\u53ef\u80fd\u8fd8\u4f1a\u6709 debugtalk.py \u3001 .env \u7b49\u6587\u4ef6\u3002 \u63a8\u8350\u7684\u9879\u76ee\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\u5982\u4e0b\uff1a $ tree demo -a demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 reports \u251c\u2500\u2500 testcase1.yml \u2514\u2500\u2500 testcase2.json","title":"\u9879\u76ee\u6587\u4ef6\u7ec4\u7ec7"},{"location":"prepare/project-structure/#_1","text":"","title":"\u9879\u76ee\u6587\u4ef6\u7ec4\u7ec7"},{"location":"prepare/project-structure/#_2","text":"\u5728 HttpRunner \u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\u4e2d\uff0c\u4e3b\u8981\u5b58\u5728\u5982\u4e0b\u51e0\u7c7b\u6587\u4ef6\uff1a YAML/JSON \uff08\u5fc5\u987b\uff09\uff1a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\uff0c\u5b58\u50a8\u63a5\u53e3\u6d4b\u8bd5\u76f8\u5173\u4fe1\u606f debugtalk.py \uff08\u53ef\u9009\uff09\uff1a\u5b58\u50a8\u9879\u76ee\u4e2d\u903b\u8f91\u8fd0\u7b97\u8f85\u52a9\u51fd\u6570 \u8be5\u6587\u4ef6\u5b58\u5728\u65f6\uff0c\u5c06\u4f5c\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\u5b9a\u4f4d\u6807\u8bb0\uff0c\u5176\u6240\u5728\u76ee\u5f55\u5373\u88ab\u89c6\u4e3a\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd0\u884c\u6d4b\u8bd5\u7684\u6240\u5728\u8def\u5f84\uff08 CWD \uff09\u5c06\u88ab\u89c6\u4e3a\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u4f8b\u5982 .csv \uff09\u5747\u9700\u57fa\u4e8e\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u8fd0\u884c\u6d4b\u8bd5\u540e\uff0c\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\u5939\uff08 reports \uff09\u4f1a\u751f\u6210\u5728\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 .env \uff08\u53ef\u9009\uff09\uff1a\u5b58\u50a8\u9879\u76ee\u73af\u5883\u53d8\u91cf\uff0c\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u9879\u76ee\u654f\u611f\u4fe1\u606f .csv \uff08\u53ef\u9009\uff09\uff1a\u9879\u76ee\u6570\u636e\u6587\u4ef6\uff0c\u7528\u4e8e\u8fdb\u884c\u6570\u636e\u9a71\u52a8 reports \uff1a\u9ed8\u8ba4\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\u7684\u5b58\u50a8\u6587\u4ef6\u5939","title":"\u6587\u4ef6\u7c7b\u578b\u8bf4\u660e"},{"location":"prepare/project-structure/#_3","text":"\u5bf9\u4e8e\u63a5\u53e3\u6570\u6bd4\u8f83\u5c11\uff0c\u6216\u8005\u6d4b\u8bd5\u573a\u666f\u6bd4\u8f83\u7b80\u5355\u7684\u9879\u76ee\uff0c\u7ec4\u7ec7\u6d4b\u8bd5\u7528\u4f8b\u65f6\u65e0\u9700\u5206\u5c42\u3002\u5728\u6b64\u79cd\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u6587\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u6ca1\u6709\u4efb\u4f55\u8981\u6c42\uff0c\u5728\u9879\u76ee\u4e2d\u53ea\u9700\u8981\u4e00\u5806 YAML/JSON \u6587\u4ef6\u5373\u53ef\uff0c\u6bcf\u4e00\u4e2a\u6587\u4ef6\u5355\u72ec\u5bf9\u5e94\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\uff1b\u6839\u636e\u9700\u8981\uff0c\u9879\u76ee\u4e2d\u53ef\u80fd\u8fd8\u4f1a\u6709 debugtalk.py \u3001 .env \u7b49\u6587\u4ef6\u3002 \u63a8\u8350\u7684\u9879\u76ee\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\u5982\u4e0b\uff1a $ tree demo -a demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 reports \u251c\u2500\u2500 testcase1.yml \u2514\u2500\u2500 testcase2.json","title":"\u9879\u76ee\u6587\u4ef6\u7ed3\u6784"},{"location":"prepare/record/","text":"\u5f55\u5236\u751f\u6210\u7528\u4f8b \u00b6 \u4e3a\u4e86\u7b80\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u7f16\u5199\u5de5\u4f5c\uff0cHttpRunner \u5b9e\u73b0\u4e86\u6d4b\u8bd5\u7528\u4f8b\u751f\u6210\u7684\u529f\u80fd\uff0c\u5bf9\u5e94\u7684\u8f6c\u6362\u5de5\u5177\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u9879\u76ee\uff1a har2case \u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5f53\u524d\u4e3b\u6d41\u7684\u6293\u5305\u5de5\u5177\u548c\u6d4f\u89c8\u5668\u90fd\u652f\u6301\u5c06\u6293\u53d6\u5f97\u5230\u7684\u6570\u636e\u5305\u5bfc\u51fa\u4e3a\u6807\u51c6\u901a\u7528\u7684 HAR \u683c\u5f0f\uff08HTTP Archive\uff09\uff0c\u7136\u540e HttpRunner \u5b9e\u73b0\u4e86\u5c06 HAR \u683c\u5f0f\u7684\u6570\u636e\u5305\u8f6c\u6362\u4e3a YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u529f\u80fd\u3002 \u83b7\u53d6 HAR \u6570\u636e\u5305 \u00b6 \u5728\u8f6c\u6362\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5c06\u6293\u53d6\u5f97\u5230\u7684\u6570\u636e\u5305\u5bfc\u51fa\u4e3a HAR \u683c\u5f0f\u7684\u6587\u4ef6\u3002\u5728 Charles Proxy \u4e2d\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e3a\uff0c\u9009\u4e2d\u9700\u8981\u8f6c\u6362\u7684\u63a5\u53e3\uff08\u53ef\u591a\u9009\u6216\u5168\u9009\uff09\uff0c\u70b9\u51fb\u53f3\u952e\uff0c\u5728\u60ac\u6d6e\u7684\u83dc\u5355\u76ee\u5f55\u4e2d\u70b9\u51fb\u3010Export...\u3011\uff0c\u683c\u5f0f\u9009\u62e9 HTTP Archive(.har) \u540e\u4fdd\u5b58\u5373\u53ef\uff1b\u5047\u8bbe\u6211\u4eec\u4fdd\u5b58\u7684\u6587\u4ef6\u540d\u79f0\u4e3a demo.har\u3002 \u8f6c\u6362\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b \u00b6 \u7136\u540e\uff0c\u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u4e2d\u8fd0\u884c har2case \u547d\u4ee4\uff0c\u5373\u53ef\u5c06 demo.har \u8f6c\u6362\u4e3a HttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 \u4f7f\u7528 har2case \u8f6c\u6362\u811a\u672c\u65f6\u9ed8\u8ba4\u8f6c\u6362\u4e3a JSON \u683c\u5f0f\u3002 $ har2case docs/data/demo-quickstart.har INFO:root:Start to generate testcase. INFO:root:dump testcase to JSON format. INFO:root:Generate JSON testcase successfully: docs/data/demo-quickstart.json \u52a0\u4e0a -2y / --to-yml \u53c2\u6570\u540e\u8f6c\u6362\u4e3a YAML \u683c\u5f0f\u3002 $ har2case docs/data/demo-quickstart.har -2y INFO:root:Start to generate testcase. INFO:root:dump testcase to YAML format. INFO:root:Generate YAML testcase successfully: docs/data/demo-quickstart.yml \u4e24\u79cd\u683c\u5f0f\u5b8c\u5168\u7b49\u4ef7\uff0cYAML \u683c\u5f0f\u66f4\u7b80\u6d01\uff0cJSON \u683c\u5f0f\u652f\u6301\u7684\u5de5\u5177\u66f4\u4e30\u5bcc\uff0c\u5927\u5bb6\u53ef\u6839\u636e\u4e2a\u4eba\u559c\u597d\u8fdb\u884c\u9009\u62e9\u3002","title":"\u5f55\u5236\u751f\u6210\u7528\u4f8b"},{"location":"prepare/record/#_1","text":"\u4e3a\u4e86\u7b80\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u7f16\u5199\u5de5\u4f5c\uff0cHttpRunner \u5b9e\u73b0\u4e86\u6d4b\u8bd5\u7528\u4f8b\u751f\u6210\u7684\u529f\u80fd\uff0c\u5bf9\u5e94\u7684\u8f6c\u6362\u5de5\u5177\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u9879\u76ee\uff1a har2case \u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5f53\u524d\u4e3b\u6d41\u7684\u6293\u5305\u5de5\u5177\u548c\u6d4f\u89c8\u5668\u90fd\u652f\u6301\u5c06\u6293\u53d6\u5f97\u5230\u7684\u6570\u636e\u5305\u5bfc\u51fa\u4e3a\u6807\u51c6\u901a\u7528\u7684 HAR \u683c\u5f0f\uff08HTTP Archive\uff09\uff0c\u7136\u540e HttpRunner \u5b9e\u73b0\u4e86\u5c06 HAR \u683c\u5f0f\u7684\u6570\u636e\u5305\u8f6c\u6362\u4e3a YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u529f\u80fd\u3002","title":"\u5f55\u5236\u751f\u6210\u7528\u4f8b"},{"location":"prepare/record/#har","text":"\u5728\u8f6c\u6362\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5c06\u6293\u53d6\u5f97\u5230\u7684\u6570\u636e\u5305\u5bfc\u51fa\u4e3a HAR \u683c\u5f0f\u7684\u6587\u4ef6\u3002\u5728 Charles Proxy \u4e2d\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e3a\uff0c\u9009\u4e2d\u9700\u8981\u8f6c\u6362\u7684\u63a5\u53e3\uff08\u53ef\u591a\u9009\u6216\u5168\u9009\uff09\uff0c\u70b9\u51fb\u53f3\u952e\uff0c\u5728\u60ac\u6d6e\u7684\u83dc\u5355\u76ee\u5f55\u4e2d\u70b9\u51fb\u3010Export...\u3011\uff0c\u683c\u5f0f\u9009\u62e9 HTTP Archive(.har) \u540e\u4fdd\u5b58\u5373\u53ef\uff1b\u5047\u8bbe\u6211\u4eec\u4fdd\u5b58\u7684\u6587\u4ef6\u540d\u79f0\u4e3a demo.har\u3002","title":"\u83b7\u53d6 HAR \u6570\u636e\u5305"},{"location":"prepare/record/#_2","text":"\u7136\u540e\uff0c\u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u4e2d\u8fd0\u884c har2case \u547d\u4ee4\uff0c\u5373\u53ef\u5c06 demo.har \u8f6c\u6362\u4e3a HttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 \u4f7f\u7528 har2case \u8f6c\u6362\u811a\u672c\u65f6\u9ed8\u8ba4\u8f6c\u6362\u4e3a JSON \u683c\u5f0f\u3002 $ har2case docs/data/demo-quickstart.har INFO:root:Start to generate testcase. INFO:root:dump testcase to JSON format. INFO:root:Generate JSON testcase successfully: docs/data/demo-quickstart.json \u52a0\u4e0a -2y / --to-yml \u53c2\u6570\u540e\u8f6c\u6362\u4e3a YAML \u683c\u5f0f\u3002 $ har2case docs/data/demo-quickstart.har -2y INFO:root:Start to generate testcase. INFO:root:dump testcase to YAML format. INFO:root:Generate YAML testcase successfully: docs/data/demo-quickstart.yml \u4e24\u79cd\u683c\u5f0f\u5b8c\u5168\u7b49\u4ef7\uff0cYAML \u683c\u5f0f\u66f4\u7b80\u6d01\uff0cJSON \u683c\u5f0f\u652f\u6301\u7684\u5de5\u5177\u66f4\u4e30\u5bcc\uff0c\u5927\u5bb6\u53ef\u6839\u636e\u4e2a\u4eba\u559c\u597d\u8fdb\u884c\u9009\u62e9\u3002","title":"\u8f6c\u6362\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b"},{"location":"prepare/request-hook/","text":"hook\u673a\u5236 \u00b6 \u6982\u8ff0 \u00b6 HttpRunner \u4ece 1.4.5 \u7248\u672c\u5f00\u59cb\u5b9e\u73b0\u4e86\u5168\u65b0\u7684 hook \u673a\u5236\uff0c\u53ef\u4ee5\u5728\u8bf7\u6c42\u524d\u548c\u8bf7\u6c42\u540e\u8c03\u7528\u94a9\u5b50\u51fd\u6570\u3002 \u8c03\u7528 hook \u51fd\u6570 \u00b6 hook \u673a\u5236\u5206\u4e3a\u4e24\u4e2a\u5c42\u7ea7\uff1a \u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\uff08testcase\uff09 \u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\uff08teststep\uff09 \u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\uff08testcase\uff09 \u00b6 \u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u7684 config \u4e2d\u65b0\u589e\u5173\u952e\u5b57 setup_hooks \u548c teardown_hooks \u3002 setup_hooks: \u5728\u6574\u4e2a\u7528\u4f8b\u5f00\u59cb\u6267\u884c\u524d\u89e6\u53d1 hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c\u3002 teardown_hooks: \u5728\u6574\u4e2a\u7528\u4f8b\u7ed3\u675f\u6267\u884c\u540e\u89e6\u53d1 hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c\u3002 - config : name : basic test with httpbin request : base_url : http://127.0.0.1:3458/ setup_hooks : - ${hook_print(setup)} teardown_hooks : - ${hook_print(teardown)} \u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\uff08teststep\uff09 \u00b6 \u5728 YAML/JSON \u6d4b\u8bd5\u6b65\u9aa4\u7684 test \u4e2d\u65b0\u589e\u5173\u952e\u5b57 setup_hooks \u548c teardown_hooks \u3002 setup_hooks: \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u524d\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c\uff1b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8bf7\u6c42\u7684 request \u5185\u5bb9\u8fdb\u884c\u9884\u5904\u7406\u3002 teardown_hooks: \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u540e\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c\uff1b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u54cd\u5e94\u7684 response \u8fdb\u884c\u4fee\u6539\uff0c\u4f8b\u5982\u8fdb\u884c\u52a0\u89e3\u5bc6\u7b49\u5904\u7406\u3002 \"test\" : { \"name\" : \"get token with $user_agent, $os_platform, $app_version\" , \"request\" : { \"url\" : \"/api/get-token\" , \"method\" : \"POST\" , \"headers\" : { \"app_version\" : \"$app_version\" , \"os_platform\" : \"$os_platform\" , \"user_agent\" : \"$user_agent\" }, \"json\" : { \"sign\" : \"${get_sign($user_agent, $device_sn, $os_platform, $app_version)}\" } }, \"validate\" : [ { \"eq\" : [ \"status_code\" , 200 ]} ], \"setup_hooks\" : [ \"${setup_hook_prepare_kwargs($request)}\" , \"${setup_hook_httpntlmauth($request)}\" ], \"teardown_hooks\" : [ \"${teardown_hook_sleep_N_secs($response, 2)}\" ] } \u7f16\u5199 hook \u51fd\u6570 \u00b6 hook \u51fd\u6570\u7684\u5b9a\u4e49\u653e\u7f6e\u5728\u9879\u76ee\u7684 debugtalk.py \u4e2d\uff0c\u5728 YAML/JSON \u4e2d\u8c03\u7528 hook \u51fd\u6570\u4ecd\u7136\u662f\u91c7\u7528 ${func($a, $b)} \u7684\u5f62\u5f0f\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\u7684 hook \u51fd\u6570\uff0c\u4e0e YAML/JSON \u4e2d\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49\u53c2\u6570\u4f20\u53c2\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\u7075\u6d3b\u5e94\u7528\u3002 def hook_print ( msg ): print ( msg ) \u5bf9\u4e8e\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\u7684 hook \u51fd\u6570\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165\u4e0e\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u8bf7\u6c42\u7684 $request \u548c\u54cd\u5e94\u7684 $response \uff0c\u7528\u4e8e\u5b9e\u73b0\u66f4\u590d\u6742\u573a\u666f\u7684\u7075\u6d3b\u5e94\u7528\u3002 setup_hooks \u00b6 \u5728\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\u7684 setup_hooks \u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165 $request \uff0c\u8be5\u53c2\u6570\u5bf9\u5e94\u7740\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4 request \u7684\u5168\u90e8\u5185\u5bb9\u3002\u56e0\u4e3a request \u662f\u53ef\u53d8\u53c2\u6570\u7c7b\u578b\uff08dict\uff09\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u53c2\u6570\u4e3a\u5f15\u7528\u4f20\u9012\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5bf9\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u9884\u5904\u7406\u65f6\u5c24\u5176\u6709\u7528\u3002 e.g. def setup_hook_prepare_kwargs ( request ): if request [ \"method\" ] == \"POST\" : content_type = request . get ( \"headers\" , {}) . get ( \"content-type\" ) if content_type and \"data\" in request : # if request content-type is application/json, request data should be dumped if content_type . startswith ( \"application/json\" ) and isinstance ( request [ \"data\" ], ( dict , list )): request [ \"data\" ] = json . dumps ( request [ \"data\" ]) if isinstance ( request [ \"data\" ], str ): request [ \"data\" ] = request [ \"data\" ] . encode ( 'utf-8' ) def setup_hook_httpntlmauth ( request ): if \"httpntlmauth\" in request : from requests_ntlm import HttpNtlmAuth auth_account = request . pop ( \"httpntlmauth\" ) request [ \"auth\" ] = HttpNtlmAuth ( auth_account [ \"username\" ], auth_account [ \"password\" ]) \u901a\u8fc7\u4e0a\u8ff0\u7684 setup_hook_prepare_kwargs \u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6839\u636e\u8bf7\u6c42\u65b9\u6cd5\u548c\u8bf7\u6c42\u7684 Content-Type \u6765\u5bf9\u8bf7\u6c42\u7684 data \u8fdb\u884c\u52a0\u5de5\u5904\u7406\uff1b\u901a\u8fc7 setup_hook_httpntlmauth \u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0 HttpNtlmAuth \u6743\u9650\u6388\u6743\u3002 teardown_hooks \u00b6 \u5728\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\u7684 teardown_hooks \u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165 $response \uff0c\u8be5\u53c2\u6570\u5bf9\u5e94\u7740\u5f53\u524d\u8bf7\u6c42\u7684\u54cd\u5e94\u5b9e\u4f8b\uff08requests.Response\uff09\u3002 e.g. def teardown_hook_sleep_N_secs ( response , n_secs ): \"\"\" sleep n seconds after request \"\"\" if response . status_code == 200 : time . sleep ( 0.1 ) else : time . sleep ( n_secs ) \u901a\u8fc7\u4e0a\u8ff0\u7684 teardown_hook_sleep_N_secs \u51fd\u6570\uff0c\u53ef\u4ee5\u6839\u636e\u63a5\u53e3\u54cd\u5e94\u7684\u72b6\u6001\u7801\u6765\u8fdb\u884c\u4e0d\u540c\u65f6\u95f4\u7684\u5ef6\u8fdf\u7b49\u5f85\u3002 \u53e6\u5916\uff0c\u5728 teardown_hooks \u51fd\u6570\u4e2d\u8fd8\u53ef\u4ee5\u5bf9 response \u8fdb\u884c\u4fee\u6539\u3002\u5f53\u6211\u4eec\u9700\u8981\u5148\u5bf9\u54cd\u5e94\u5185\u5bb9\u8fdb\u884c\u5904\u7406\uff08\u4f8b\u5982\u52a0\u89e3\u5bc6\u3001\u53c2\u6570\u8fd0\u7b97\uff09\uff0c\u518d\u8fdb\u884c\u53c2\u6570\u63d0\u53d6\uff08extract\uff09\u548c\u6821\u9a8c\uff08validate\uff09\u65f6\u5c24\u5176\u6709\u7528\u3002 \u4f8b\u5982\u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\uff0c\u5728\u6267\u884c\u6d4b\u8bd5\u540e\uff0c\u901a\u8fc7 teardown_hooks \u51fd\u6570\u5c06\u54cd\u5e94\u7ed3\u679c\u7684\u72b6\u6001\u7801\u548c headers \u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4e86\u6821\u9a8c\u3002 - test : name : alter response request : url : /headers method : GET teardown_hooks : - ${alter_response($response)} validate : - eq : [ \"status_code\" , 500 ] - eq : [ \"headers.content-type\" , \"html/text\" ] def alter_response ( response ): response . status_code = 500 response . headers [ \"Content-Type\" ] = \"html/text\"","title":"hook\u673a\u5236"},{"location":"prepare/request-hook/#hook","text":"","title":"hook\u673a\u5236"},{"location":"prepare/request-hook/#_1","text":"HttpRunner \u4ece 1.4.5 \u7248\u672c\u5f00\u59cb\u5b9e\u73b0\u4e86\u5168\u65b0\u7684 hook \u673a\u5236\uff0c\u53ef\u4ee5\u5728\u8bf7\u6c42\u524d\u548c\u8bf7\u6c42\u540e\u8c03\u7528\u94a9\u5b50\u51fd\u6570\u3002","title":"\u6982\u8ff0"},{"location":"prepare/request-hook/#hook_1","text":"hook \u673a\u5236\u5206\u4e3a\u4e24\u4e2a\u5c42\u7ea7\uff1a \u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\uff08testcase\uff09 \u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\uff08teststep\uff09","title":"\u8c03\u7528 hook \u51fd\u6570"},{"location":"prepare/request-hook/#testcase","text":"\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u7684 config \u4e2d\u65b0\u589e\u5173\u952e\u5b57 setup_hooks \u548c teardown_hooks \u3002 setup_hooks: \u5728\u6574\u4e2a\u7528\u4f8b\u5f00\u59cb\u6267\u884c\u524d\u89e6\u53d1 hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c\u3002 teardown_hooks: \u5728\u6574\u4e2a\u7528\u4f8b\u7ed3\u675f\u6267\u884c\u540e\u89e6\u53d1 hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c\u3002 - config : name : basic test with httpbin request : base_url : http://127.0.0.1:3458/ setup_hooks : - ${hook_print(setup)} teardown_hooks : - ${hook_print(teardown)}","title":"\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\uff08testcase\uff09"},{"location":"prepare/request-hook/#teststep","text":"\u5728 YAML/JSON \u6d4b\u8bd5\u6b65\u9aa4\u7684 test \u4e2d\u65b0\u589e\u5173\u952e\u5b57 setup_hooks \u548c teardown_hooks \u3002 setup_hooks: \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u524d\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c\uff1b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8bf7\u6c42\u7684 request \u5185\u5bb9\u8fdb\u884c\u9884\u5904\u7406\u3002 teardown_hooks: \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u540e\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c\uff1b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u54cd\u5e94\u7684 response \u8fdb\u884c\u4fee\u6539\uff0c\u4f8b\u5982\u8fdb\u884c\u52a0\u89e3\u5bc6\u7b49\u5904\u7406\u3002 \"test\" : { \"name\" : \"get token with $user_agent, $os_platform, $app_version\" , \"request\" : { \"url\" : \"/api/get-token\" , \"method\" : \"POST\" , \"headers\" : { \"app_version\" : \"$app_version\" , \"os_platform\" : \"$os_platform\" , \"user_agent\" : \"$user_agent\" }, \"json\" : { \"sign\" : \"${get_sign($user_agent, $device_sn, $os_platform, $app_version)}\" } }, \"validate\" : [ { \"eq\" : [ \"status_code\" , 200 ]} ], \"setup_hooks\" : [ \"${setup_hook_prepare_kwargs($request)}\" , \"${setup_hook_httpntlmauth($request)}\" ], \"teardown_hooks\" : [ \"${teardown_hook_sleep_N_secs($response, 2)}\" ] }","title":"\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\uff08teststep\uff09"},{"location":"prepare/request-hook/#hook_2","text":"hook \u51fd\u6570\u7684\u5b9a\u4e49\u653e\u7f6e\u5728\u9879\u76ee\u7684 debugtalk.py \u4e2d\uff0c\u5728 YAML/JSON \u4e2d\u8c03\u7528 hook \u51fd\u6570\u4ecd\u7136\u662f\u91c7\u7528 ${func($a, $b)} \u7684\u5f62\u5f0f\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\u7684 hook \u51fd\u6570\uff0c\u4e0e YAML/JSON \u4e2d\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49\u53c2\u6570\u4f20\u53c2\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\u7075\u6d3b\u5e94\u7528\u3002 def hook_print ( msg ): print ( msg ) \u5bf9\u4e8e\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\u7684 hook \u51fd\u6570\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165\u4e0e\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u8bf7\u6c42\u7684 $request \u548c\u54cd\u5e94\u7684 $response \uff0c\u7528\u4e8e\u5b9e\u73b0\u66f4\u590d\u6742\u573a\u666f\u7684\u7075\u6d3b\u5e94\u7528\u3002","title":"\u7f16\u5199 hook \u51fd\u6570"},{"location":"prepare/request-hook/#setup_hooks","text":"\u5728\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\u7684 setup_hooks \u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165 $request \uff0c\u8be5\u53c2\u6570\u5bf9\u5e94\u7740\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4 request \u7684\u5168\u90e8\u5185\u5bb9\u3002\u56e0\u4e3a request \u662f\u53ef\u53d8\u53c2\u6570\u7c7b\u578b\uff08dict\uff09\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u53c2\u6570\u4e3a\u5f15\u7528\u4f20\u9012\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5bf9\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u9884\u5904\u7406\u65f6\u5c24\u5176\u6709\u7528\u3002 e.g. def setup_hook_prepare_kwargs ( request ): if request [ \"method\" ] == \"POST\" : content_type = request . get ( \"headers\" , {}) . get ( \"content-type\" ) if content_type and \"data\" in request : # if request content-type is application/json, request data should be dumped if content_type . startswith ( \"application/json\" ) and isinstance ( request [ \"data\" ], ( dict , list )): request [ \"data\" ] = json . dumps ( request [ \"data\" ]) if isinstance ( request [ \"data\" ], str ): request [ \"data\" ] = request [ \"data\" ] . encode ( 'utf-8' ) def setup_hook_httpntlmauth ( request ): if \"httpntlmauth\" in request : from requests_ntlm import HttpNtlmAuth auth_account = request . pop ( \"httpntlmauth\" ) request [ \"auth\" ] = HttpNtlmAuth ( auth_account [ \"username\" ], auth_account [ \"password\" ]) \u901a\u8fc7\u4e0a\u8ff0\u7684 setup_hook_prepare_kwargs \u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6839\u636e\u8bf7\u6c42\u65b9\u6cd5\u548c\u8bf7\u6c42\u7684 Content-Type \u6765\u5bf9\u8bf7\u6c42\u7684 data \u8fdb\u884c\u52a0\u5de5\u5904\u7406\uff1b\u901a\u8fc7 setup_hook_httpntlmauth \u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0 HttpNtlmAuth \u6743\u9650\u6388\u6743\u3002","title":"setup_hooks"},{"location":"prepare/request-hook/#teardown_hooks","text":"\u5728\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\u7684 teardown_hooks \u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165 $response \uff0c\u8be5\u53c2\u6570\u5bf9\u5e94\u7740\u5f53\u524d\u8bf7\u6c42\u7684\u54cd\u5e94\u5b9e\u4f8b\uff08requests.Response\uff09\u3002 e.g. def teardown_hook_sleep_N_secs ( response , n_secs ): \"\"\" sleep n seconds after request \"\"\" if response . status_code == 200 : time . sleep ( 0.1 ) else : time . sleep ( n_secs ) \u901a\u8fc7\u4e0a\u8ff0\u7684 teardown_hook_sleep_N_secs \u51fd\u6570\uff0c\u53ef\u4ee5\u6839\u636e\u63a5\u53e3\u54cd\u5e94\u7684\u72b6\u6001\u7801\u6765\u8fdb\u884c\u4e0d\u540c\u65f6\u95f4\u7684\u5ef6\u8fdf\u7b49\u5f85\u3002 \u53e6\u5916\uff0c\u5728 teardown_hooks \u51fd\u6570\u4e2d\u8fd8\u53ef\u4ee5\u5bf9 response \u8fdb\u884c\u4fee\u6539\u3002\u5f53\u6211\u4eec\u9700\u8981\u5148\u5bf9\u54cd\u5e94\u5185\u5bb9\u8fdb\u884c\u5904\u7406\uff08\u4f8b\u5982\u52a0\u89e3\u5bc6\u3001\u53c2\u6570\u8fd0\u7b97\uff09\uff0c\u518d\u8fdb\u884c\u53c2\u6570\u63d0\u53d6\uff08extract\uff09\u548c\u6821\u9a8c\uff08validate\uff09\u65f6\u5c24\u5176\u6709\u7528\u3002 \u4f8b\u5982\u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\uff0c\u5728\u6267\u884c\u6d4b\u8bd5\u540e\uff0c\u901a\u8fc7 teardown_hooks \u51fd\u6570\u5c06\u54cd\u5e94\u7ed3\u679c\u7684\u72b6\u6001\u7801\u548c headers \u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4e86\u6821\u9a8c\u3002 - test : name : alter response request : url : /headers method : GET teardown_hooks : - ${alter_response($response)} validate : - eq : [ \"status_code\" , 500 ] - eq : [ \"headers.content-type\" , \"html/text\" ] def alter_response ( response ): response . status_code = 500 response . headers [ \"Content-Type\" ] = \"html/text\"","title":"teardown_hooks"},{"location":"prepare/script/","text":"\u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c \u00b6 script \u662f HttpRunner \u63d0\u4f9b\u7684\u7b80\u6d01\u800c\u5f3a\u5927\u7684\u6821\u9a8c\u529f\u80fd\uff0c\u652f\u6301\u4f7f\u7528 Python \u811a\u672c\u8fdb\u884c\u7075\u6d3b\u7684\u54cd\u5e94\u6821\u9a8c\u3002\u5b83\u91c7\u7528 \"\u5f02\u5e38\u5373\u5931\u8d25\" \u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u4e0e Python assert \u8bed\u53e5\u5b8c\u5168\u4e00\u81f4\uff0c\u4e0d\u589e\u52a0\u7528\u6237\u8bb0\u5fc6\u8d1f\u62c5\uff0c\u7b26\u5408\u5f00\u53d1\u8005\u76f4\u89c9\u3002 \ud83c\udfaf \u6838\u5fc3\u7279\u6027 \u00b6 1. \u4e24\u79cd\u6821\u9a8c\u65b9\u5f0f \u00b6 Python \u811a\u672c - \u652f\u6301\u4efb\u610f Python \u8bed\u53e5\uff08assert\u3001\u6761\u4ef6\u5224\u65ad\u3001\u5faa\u73af\u7b49\uff09 \u81ea\u5b9a\u4e49\u51fd\u6570 - \u8c03\u7528 debugtalk.py \u4e2d\u5b9a\u4e49\u7684\u6821\u9a8c\u51fd\u6570 2. \u5f02\u5e38\u5373\u5931\u8d25\u539f\u5219 \u00b6 \u811a\u672c\u6267\u884c\u65e0\u5f02\u5e38 = \u6821\u9a8c\u901a\u8fc7 \u811a\u672c\u629b\u51fa\u5f02\u5e38 = \u6821\u9a8c\u5931\u8d25 \u4e0e Python assert \u8bed\u53e5\u8bbe\u8ba1\u7406\u5ff5\u4e00\u81f4 3. \u9010\u6761\u6267\u884c\u673a\u5236 \u00b6 \u6bcf\u6761\u811a\u672c\u72ec\u7acb\u6267\u884c \u5355\u6761\u5931\u8d25\u4e0d\u4e2d\u65ad\u5176\u4ed6\u811a\u672c\u7ee7\u7eed\u6267\u884c \u8be6\u7ec6\u7684\u9519\u8bef\u65e5\u5fd7\u548c\u6d4b\u8bd5\u62a5\u544a 4. \u4e30\u5bcc\u7684\u5185\u7f6e\u529f\u53d8\u91cf \u00b6 \u76f4\u63a5\u8bbf\u95ee\u54cd\u5e94\u6570\u636e\uff1a status_code , headers , content , json \u7b49 \u652f\u6301\u70b9\u53f7\u8bbf\u95ee\u8bed\u6cd5\uff1a content.user.name \u53d8\u91cf\u5f15\u7528\uff1a $token , $user_id \ud83d\ude80 \u57fa\u672c\u8bed\u6cd5 \u00b6 \u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u4f7f\u7528 script \u5b57\u6bb5\uff1a teststeps : - name : \u793a\u4f8b\u6d4b\u8bd5\u6b65\u9aa4 request : url : /api/example method : GET script : - assert status_code == 200 - assert content.success is True - ${custom_validation_function($token)} \ud83d\udd27 \u53ef\u7528\u53d8\u91cf \u00b6 \u5728 script \u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4ee5\u4e0b\u54cd\u5e94\u53d8\u91cf\uff1a \u53d8\u91cf\u540d \u7c7b\u578b \u8bf4\u660e \u793a\u4f8b status_code int HTTP\u72b6\u6001\u7801 assert status_code == 200 headers proxy \u54cd\u5e94\u5934\u4fe1\u606f assert headers[\"Content-Type\"] == \"application/json\" cookies proxy Cookie\u4fe1\u606f assert \"session_id\" in cookies content proxy \u54cd\u5e94\u5185\u5bb9\uff08\u81ea\u52a8\u89e3\u6790JSON\uff09 assert content.token is not None body proxy \u539f\u59cb\u54cd\u5e94\u4f53 assert \"success\" in body text proxy \u54cd\u5e94\u6587\u672c assert len(text) > 0 json proxy JSON\u54cd\u5e94\u5185\u5bb9 assert json[\"code\"] == 0 elapsed proxy \u54cd\u5e94\u65f6\u95f4\u5bf9\u8c61 assert elapsed.total_seconds < 2.0 encoding str \u54cd\u5e94\u7f16\u7801 assert encoding == \"utf-8\" ok bool \u8bf7\u6c42\u662f\u5426\u6210\u529f assert ok is True reason str \u72b6\u6001\u7801\u8bf4\u660e assert reason == \"OK\" url str \u8bf7\u6c42URL assert \"api\" in url response object \u5b8c\u6574\u54cd\u5e94\u5bf9\u8c61 assert response.status_code == 200 \ud83e\uddea \u5355\u5143\u6d4b\u8bd5 \u00b6 \u2705 Assert \u8bed\u53e5\u6821\u9a8c\uff08\u6210\u529f/\u5931\u8d25\uff09 \u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\uff08\u6210\u529f/\u5931\u8d25\uff09 \u2705 \u5f02\u5e38\u5904\u7406\uff08\u8bed\u6cd5\u9519\u8bef\u3001\u53d8\u91cf\u4e0d\u5b58\u5728\u7b49\uff09 \u2705 \u54cd\u5e94\u5b57\u6bb5\u8bbf\u95ee\uff08headers\u3001content\u3001json\u7b49\uff09 \u2705 \u53d8\u91cf\u5f15\u7528\u548c\u89e3\u6790 \u2705 \u590d\u6742\u8868\u8fbe\u5f0f\u548c\u6761\u4ef6\u6821\u9a8c \u2705 \u5f02\u5e38\u5206\u7c7b\u5904\u7406\uff08\u5173\u952e\u5f02\u5e38 vs \u8fd0\u884c\u65f6\u5f02\u5e38\uff09 # \u8fd0\u884c\u6240\u6709validator\u6d4b\u8bd5 python -m unittest tests.test_validator -v # \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5 python -m unittest tests.test_validator.TestValidator.test_validate_script_assert_success -v \ud83d\udd27 \u6838\u5fc3\u7ec4\u4ef6\u6280\u672f\u5b9e\u73b0 \u00b6 Validator.validate_script() - \u4e3b\u8981\u6821\u9a8c\u903b\u8f91 ResponseFieldProxy - \u54cd\u5e94\u5b57\u6bb5\u4ee3\u7406\u8bbf\u95ee \u5f02\u5e38\u5904\u7406\u5206\u5c42 - \u533a\u5206\u5173\u952e\u5f02\u5e38\u548c\u8fd0\u884c\u65f6\u5f02\u5e38 \u9010\u6761\u6267\u884c\u673a\u5236 - \u72ec\u7acb\u6267\u884c\u6bcf\u6761\u6821\u9a8c\u811a\u672c \ud83d\udcbc \u8be6\u7ec6\u4f7f\u7528\u8bf4\u660e \u00b6 1\ufe0f\u20e3 Python \u811a\u672c\u6821\u9a8c \u00b6 \u57fa\u7840\u65ad\u8a00 \u00b6 script : - assert status_code == 200 - assert content.success is True - assert len(content.token) == 16 - assert content.user_id > 0 \u6761\u4ef6\u5224\u65ad \u00b6 script : - assert status_code in [200, 201, 202] - assert content.status in [\"active\", \"pending\"] - assert len(content.items) > 0 and all(item.get(\"id\") for item in content.items) \u591a\u884c\u811a\u672c \u00b6 script : # \u4f7f\u7528 YAML \u7684 | \u8bed\u6cd5\u7f16\u5199\u591a\u884c\u811a\u672c - | if status_code == 200: assert content.success is True elif status_code == 400: assert content.error_code is not None else: assert False, f\"Unexpected status code: {status_code}\" # \u5faa\u73af\u6821\u9a8c - | for item in content.items: assert item.get(\"id\") is not None assert item.get(\"name\") is not None \u81ea\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f \u00b6 script : - assert status_code == 200, f\"Expected 200, got {status_code}\" - assert content.success is True, \"API call should succeed\" - assert len(content.token) == 16, f\"Token length invalid : expected 16, got {len(content.token)}\" 2\ufe0f\u20e3 \u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c \u00b6 \u51fd\u6570\u5b9a\u4e49 \u00b6 \u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u6821\u9a8c\u51fd\u6570\uff1a def validate_token ( token ): \"\"\"\u9a8c\u8bc1token\u683c\u5f0f\"\"\" if len ( token ) != 16 : raise ValueError ( f \"Token length should be 16, got { len ( token ) } \" ) if not token . isalnum (): raise ValueError ( \"Token should be alphanumeric\" ) return True def validate_user_info ( user_data ): \"\"\"\u9a8c\u8bc1\u7528\u6237\u4fe1\u606f\u5b8c\u6574\u6027\"\"\" required_fields = [ \"id\" , \"name\" , \"email\" ] for field in required_fields : if field not in user_data : raise AssertionError ( f \"Missing required field: { field } \" ) return True def check_response_time ( elapsed_seconds ): \"\"\"\u68c0\u67e5\u54cd\u5e94\u65f6\u95f4\"\"\" if elapsed_seconds >= 2.0 : raise ValueError ( f \"Response time too slow: { elapsed_seconds } s\" ) return True \u51fd\u6570\u8c03\u7528 \u00b6 script : # \u76f4\u63a5\u8c03\u7528\u51fd\u6570\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u4f5c\u4e3a\u8f93\u51fa\u663e\u793a - ${validate_token(content.token)} - ${validate_user_info(content.user)} - ${check_response_time(elapsed.total_seconds)} # \u7ed3\u5408assert\u4f7f\u7528\uff08\u63a8\u8350\uff09 - assert ${validate_token(content.token)} is True - assert ${validate_user_info(content.user)} is True \u53c2\u6570\u4f20\u9012 \u00b6 script : # \u4f20\u9012\u5355\u4e2a\u53c2\u6570 - ${validate_token($token)} - ${validate_token(content.token)} # \u4f20\u9012\u591a\u4e2a\u53c2\u6570 - ${validate_signature($device_sn, $os_platform, $app_version)} # \u4f20\u9012\u5217\u8868\u53c2\u6570 - ${validate_list_data([$device_sn, $os_platform, $app_version])} # \u4f20\u9012\u5b57\u5178\u53c2\u6570 - ${validate_dict_data({device_sn : $device_sn, platform : $os_platform})} # \u4f20\u9012\u590d\u6742\u5bf9\u8c61 - ${validate_response_data(content)} 3\ufe0f\u20e3 \u53d8\u91cf\u5f15\u7528 \u00b6 \u6d4b\u8bd5\u53d8\u91cf\u5f15\u7528 \u00b6 variables : expected_status : 200 expected_token_length : 16 script : - assert status_code == $expected_status - assert len(content.token) == $expected_token_length \u63d0\u53d6\u53d8\u91cf\u5f15\u7528 \u00b6 extract : - user_id : content.user.id - token : content.token script : - assert $user_id > 0 - assert len(\"$token\") == 16 # \u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u53d8\u91cf\u5f15\u7528\u9700\u8981\u52a0\u5f15\u53f7 - ${validate_token($token)} 4\ufe0f\u20e3 \u9519\u8bef\u5904\u7406 \u00b6 \u5bb9\u9519\u673a\u5236 \u00b6 \u5f53\u67d0\u6761\u811a\u672c\u6821\u9a8c\u5931\u8d25\u65f6\uff0c\u7cfb\u7edf\u4f1a\uff1a \u8bb0\u5f55\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f \u7ee7\u7eed\u6267\u884c\u540e\u7eed\u811a\u672c \u5728\u6d4b\u8bd5\u62a5\u544a\u4e2d\u663e\u793a\u5931\u8d25\u8be6\u60c5 script : - assert status_code == 200 # \u901a\u8fc7 - assert content.invalid_field == \"test\" # \u5931\u8d25\uff0c\u4f46\u4e0d\u4e2d\u65ad\u540e\u7eed\u6821\u9a8c - assert content.success is True # \u7ee7\u7eed\u6267\u884c - ${validate_token(content.token)} # \u7ee7\u7eed\u6267\u884c \u5f02\u5e38\u7c7b\u578b\u8bf4\u660e \u00b6 AssertionError - assert \u8bed\u53e5\u5931\u8d25 NameError - \u53d8\u91cf\u4e0d\u5b58\u5728 AttributeError - \u5c5e\u6027\u8bbf\u95ee\u9519\u8bef TypeError - \u7c7b\u578b\u9519\u8bef ValueError - \u503c\u9519\u8bef\uff08\u81ea\u5b9a\u4e49\u51fd\u6570\u5e38\u7528\uff09 SyntaxError - \u8bed\u6cd5\u9519\u8bef 5\ufe0f\u20e3 \u9ad8\u7ea7\u7528\u6cd5 \u00b6 \u54cd\u5e94\u5b57\u6bb5\u6df1\u5ea6\u8bbf\u95ee \u00b6 script : # \u5d4c\u5957\u6570\u636e\u8bbf\u95ee - assert content.user.profile.age > 0 - assert len(content.user.permissions) > 0 # \u6570\u7ec4\u8bbf\u95ee - assert len(content.items) > 0 - assert content.items[0].id is not None # \u5b57\u5178\u8bbf\u95ee - assert headers[\"Content-Type\"] == \"application/json\" - assert \"Authorization\" in headers \u52a8\u6001\u6821\u9a8c \u00b6 script : # \u6839\u636e\u54cd\u5e94\u5185\u5bb9\u52a8\u6001\u6821\u9a8c - | if content.user.type == \"vip\": assert content.user.vip_level > 0 assert content.user.vip_expires is not None else: assert content.user.vip_level == 0 \u6279\u91cf\u6821\u9a8c \u00b6 script : # \u6821\u9a8c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 - | for item in content.products: assert item.get(\"id\") is not None assert item.get(\"price\") > 0 assert item.get(\"status\") in [\"active\", \"inactive\"] 6\ufe0f\u20e3 \u6700\u4f73\u5b9e\u8df5 \u00b6 1. \u6a21\u5757\u5316\u6821\u9a8c\u51fd\u6570 - \u5c06\u590d\u6742\u903b\u8f91\u5c01\u88c5\u5230 debugtalk.py \u4e2d \u00b6 # debugtalk.py def validate_user_data ( user ): \"\"\"\u7528\u6237\u6570\u636e\u6821\u9a8c\"\"\" validate_required_fields ( user , [ \"id\" , \"name\" , \"email\" ]) validate_user_id ( user [ \"id\" ]) validate_email_format ( user [ \"email\" ]) return True def validate_required_fields ( data , fields ): \"\"\"\u5fc5\u586b\u5b57\u6bb5\u6821\u9a8c\"\"\" for field in fields : assert field in data , f \"Missing required field: { field } \" assert data [ field ] is not None , f \"Field ' { field } ' cannot be None\" def validate_user_id ( user_id ): \"\"\"\u7528\u6237ID\u6821\u9a8c\"\"\" assert isinstance ( user_id , int ), f \"User ID must be integer, got { type ( user_id ) } \" assert user_id > 0 , f \"User ID must be positive, got { user_id } \" def validate_email_format ( email ): \"\"\"\u90ae\u7bb1\u683c\u5f0f\u6821\u9a8c\"\"\" import re pattern = r '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$' assert re . match ( pattern , email ), f \"Invalid email format: { email } \" def validate_api_response ( response_data ): \"\"\" API\u54cd\u5e94\u6821\u9a8c\u7684\u6700\u4f73\u5b9e\u8df5 Args: response_data: \u54cd\u5e94\u6570\u636e Returns: bool: \u6821\u9a8c\u7ed3\u679c Raises: AssertionError: \u6821\u9a8c\u5931\u8d25\u65f6\u629b\u51fa\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f \"\"\" # \u4f7f\u7528\u65ad\u8a00\u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f assert \"code\" in response_data , \"Response missing 'code' field\" assert \"message\" in response_data , \"Response missing 'message' field\" # \u4e1a\u52a1\u903b\u8f91\u68c0\u67e5 if response_data [ \"code\" ] == 0 : assert \"data\" in response_data , \"Success response missing 'data' field\" assert response_data [ \"data\" ] is not None , \"Success response data is None\" return True 2. \u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f - \u4f7f\u7528\u81ea\u5b9a\u4e49assert\u6d88\u606f \u00b6 script : # \u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f - assert status_code == 200, f\"Expected status 200, got {status_code}\" - assert content.success is True, f\"API call failed : { content.get('message' , 'Unknown error' ) } \" - assert len(content.token) == 16, f\" Token length invalid : expected 16, got {len(content.token)}\" 3. \u811a\u672c\u7ec4\u7ec7 - \u907f\u514d\u5728YAML\u4e2d\u5199\u8fc7\u7a0b\u7684\u811a\u672c\uff0c\u540c\u65f6\u786e\u4fdd\u811a\u672c\u6765\u6e90\u53ef\u4fe1 \u00b6 script : # \u57fa\u7840\u6821\u9a8c - assert status_code == 200 - assert content.success is True # \u6570\u636e\u5b8c\u6574\u6027\u6821\u9a8c - ${validate_required_fields(content, [\"id\", \"name\", \"email\"])} # \u4e1a\u52a1\u903b\u8f91\u6821\u9a8c - ${validate_business_rules(content)} # \u6027\u80fd\u6821\u9a8c - assert elapsed.total_seconds < 2.0 7\ufe0f\u20e3 \u5b8c\u6574\u793a\u4f8b \u00b6 config : name : \"\u7528\u6237API\u6d4b\u8bd5\" variables : expected_status : 200 min_token_length : 16 teststeps : - name : \u83b7\u53d6\u7528\u6237\u4fe1\u606f request : url : /api/user/profile method : GET extract : - user_id : content.user.id - token : content.token script : # \u57fa\u7840\u6821\u9a8c - assert status_code == $expected_status - assert content.success is True - assert content.message == \"success\" # \u6570\u636e\u6821\u9a8c - assert content.user is not None - assert content.user.id > 0 - assert len(content.token) >= $min_token_length # \u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c - ${validate_user_data(content.user)} - ${validate_token_format(content.token)} - assert ${check_permissions(content.user.permissions)} is True # \u590d\u6742\u6761\u4ef6\u6821\u9a8c - | if content.user.vip_level > 0: assert content.user.vip_expires is not None else: assert content.user.vip_expires is None \ud83c\udfc6 \u603b\u7ed3 \u00b6 \u7279\u6027 \u4f20\u7edf validate script \u6821\u9a8c \u5b66\u4e60\u6210\u672c \u9700\u8981\u8bb0\u5fc6\u7279\u5b9a\u8bed\u6cd5 \u6807\u51c6Python\u8bed\u6cd5 \u7075\u6d3b\u6027 \u56fa\u5b9a\u683c\u5f0f \u4efb\u610fPython\u811a\u672c \u9519\u8bef\u5904\u7406 \u5355\u70b9\u5931\u8d25\u4e2d\u65ad \u9010\u6761\u6267\u884c\uff0c\u5bb9\u9519\u5904\u7406 \u81ea\u5b9a\u4e49\u51fd\u6570 \u6709\u9650\u652f\u6301 \u5b8c\u5168\u652f\u6301 \u590d\u6742\u903b\u8f91 \u6709\u9650\u652f\u6301 \u652f\u6301\u6761\u4ef6\u3001\u5faa\u73af\u7b49 \u8c03\u8bd5\u80fd\u529b \u57fa\u7840 \u5f3a\u5927\uff08\u9010\u6761\u7ed3\u679c\uff09 \u6570\u636e\u6821\u9a8c\u80fd\u529b \u4e0d\u901a\u7528\u4e14\u7ed3\u679c\u5355\u4e00 \u81ea\u5b9a\u4e49\u4efb\u610f\u7ed3\u679c \u901a\u8fc7\u4ee5\u4e0a\u529f\u80fd\uff0c script \u63d0\u4f9b\u4e86\u6bd4\u4f20\u7edf validate \u66f4\u52a0\u7075\u6d3b\u548c\u5f3a\u5927\u7684\u6821\u9a8c\u80fd\u529b\uff0c\u7279\u522b\u9002\u5408\u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91\u6821\u9a8c\u573a\u666f\uff0c\u800c\u4e14\u5b8c\u7f8e\u5730\u5e73\u8861\u4e86 \u7b80\u5355\u6027 \u548c \u5f3a\u5927\u6027 \u2705 \u7b80\u5355\u76f4\u89c2 - \u4f7f\u7528\u6807\u51c6Python\u8bed\u6cd5\uff0c\u96f6\u5b66\u4e60\u6210\u672c \u2705 \u529f\u80fd\u5f3a\u5927 - \u652f\u6301\u4efb\u610f\u590d\u6742\u7684\u6821\u9a8c\u903b\u8f91 \u2705 \u8bbe\u8ba1\u7cbe\u826f - \u9010\u6761\u6267\u884c\u3001\u667a\u80fd\u5f02\u5e38\u5904\u7406\u3001\u8be6\u7ec6\u62a5\u544a \u2705 \u5b9e\u73b0\u5b8c\u6574 - \u4ece\u89e3\u6790\u3001\u6267\u884c\u5230\u62a5\u544a\u7684\u5b8c\u6574\u6d41\u7a0b \u2705 \u7528\u6237\u53cb\u597d - \u4e0eassert\u4e00\u8109\u76f8\u627f\uff0c\u7b26\u5408\u5f00\u53d1\u8005\u76f4\u89c9","title":"\u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c"},{"location":"prepare/script/#_1","text":"script \u662f HttpRunner \u63d0\u4f9b\u7684\u7b80\u6d01\u800c\u5f3a\u5927\u7684\u6821\u9a8c\u529f\u80fd\uff0c\u652f\u6301\u4f7f\u7528 Python \u811a\u672c\u8fdb\u884c\u7075\u6d3b\u7684\u54cd\u5e94\u6821\u9a8c\u3002\u5b83\u91c7\u7528 \"\u5f02\u5e38\u5373\u5931\u8d25\" \u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u4e0e Python assert \u8bed\u53e5\u5b8c\u5168\u4e00\u81f4\uff0c\u4e0d\u589e\u52a0\u7528\u6237\u8bb0\u5fc6\u8d1f\u62c5\uff0c\u7b26\u5408\u5f00\u53d1\u8005\u76f4\u89c9\u3002","title":"\u81ea\u5b9a\u4e49\u811a\u672c\u6821\u9a8c"},{"location":"prepare/script/#_2","text":"","title":"\ud83c\udfaf \u6838\u5fc3\u7279\u6027"},{"location":"prepare/script/#1","text":"Python \u811a\u672c - \u652f\u6301\u4efb\u610f Python \u8bed\u53e5\uff08assert\u3001\u6761\u4ef6\u5224\u65ad\u3001\u5faa\u73af\u7b49\uff09 \u81ea\u5b9a\u4e49\u51fd\u6570 - \u8c03\u7528 debugtalk.py \u4e2d\u5b9a\u4e49\u7684\u6821\u9a8c\u51fd\u6570","title":"1. \u4e24\u79cd\u6821\u9a8c\u65b9\u5f0f"},{"location":"prepare/script/#2","text":"\u811a\u672c\u6267\u884c\u65e0\u5f02\u5e38 = \u6821\u9a8c\u901a\u8fc7 \u811a\u672c\u629b\u51fa\u5f02\u5e38 = \u6821\u9a8c\u5931\u8d25 \u4e0e Python assert \u8bed\u53e5\u8bbe\u8ba1\u7406\u5ff5\u4e00\u81f4","title":"2. \u5f02\u5e38\u5373\u5931\u8d25\u539f\u5219"},{"location":"prepare/script/#3","text":"\u6bcf\u6761\u811a\u672c\u72ec\u7acb\u6267\u884c \u5355\u6761\u5931\u8d25\u4e0d\u4e2d\u65ad\u5176\u4ed6\u811a\u672c\u7ee7\u7eed\u6267\u884c \u8be6\u7ec6\u7684\u9519\u8bef\u65e5\u5fd7\u548c\u6d4b\u8bd5\u62a5\u544a","title":"3. \u9010\u6761\u6267\u884c\u673a\u5236"},{"location":"prepare/script/#4","text":"\u76f4\u63a5\u8bbf\u95ee\u54cd\u5e94\u6570\u636e\uff1a status_code , headers , content , json \u7b49 \u652f\u6301\u70b9\u53f7\u8bbf\u95ee\u8bed\u6cd5\uff1a content.user.name \u53d8\u91cf\u5f15\u7528\uff1a $token , $user_id","title":"4. \u4e30\u5bcc\u7684\u5185\u7f6e\u529f\u53d8\u91cf"},{"location":"prepare/script/#_3","text":"\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u4f7f\u7528 script \u5b57\u6bb5\uff1a teststeps : - name : \u793a\u4f8b\u6d4b\u8bd5\u6b65\u9aa4 request : url : /api/example method : GET script : - assert status_code == 200 - assert content.success is True - ${custom_validation_function($token)}","title":"\ud83d\ude80 \u57fa\u672c\u8bed\u6cd5"},{"location":"prepare/script/#_4","text":"\u5728 script \u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4ee5\u4e0b\u54cd\u5e94\u53d8\u91cf\uff1a \u53d8\u91cf\u540d \u7c7b\u578b \u8bf4\u660e \u793a\u4f8b status_code int HTTP\u72b6\u6001\u7801 assert status_code == 200 headers proxy \u54cd\u5e94\u5934\u4fe1\u606f assert headers[\"Content-Type\"] == \"application/json\" cookies proxy Cookie\u4fe1\u606f assert \"session_id\" in cookies content proxy \u54cd\u5e94\u5185\u5bb9\uff08\u81ea\u52a8\u89e3\u6790JSON\uff09 assert content.token is not None body proxy \u539f\u59cb\u54cd\u5e94\u4f53 assert \"success\" in body text proxy \u54cd\u5e94\u6587\u672c assert len(text) > 0 json proxy JSON\u54cd\u5e94\u5185\u5bb9 assert json[\"code\"] == 0 elapsed proxy \u54cd\u5e94\u65f6\u95f4\u5bf9\u8c61 assert elapsed.total_seconds < 2.0 encoding str \u54cd\u5e94\u7f16\u7801 assert encoding == \"utf-8\" ok bool \u8bf7\u6c42\u662f\u5426\u6210\u529f assert ok is True reason str \u72b6\u6001\u7801\u8bf4\u660e assert reason == \"OK\" url str \u8bf7\u6c42URL assert \"api\" in url response object \u5b8c\u6574\u54cd\u5e94\u5bf9\u8c61 assert response.status_code == 200","title":"\ud83d\udd27 \u53ef\u7528\u53d8\u91cf"},{"location":"prepare/script/#_5","text":"\u2705 Assert \u8bed\u53e5\u6821\u9a8c\uff08\u6210\u529f/\u5931\u8d25\uff09 \u2705 \u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\uff08\u6210\u529f/\u5931\u8d25\uff09 \u2705 \u5f02\u5e38\u5904\u7406\uff08\u8bed\u6cd5\u9519\u8bef\u3001\u53d8\u91cf\u4e0d\u5b58\u5728\u7b49\uff09 \u2705 \u54cd\u5e94\u5b57\u6bb5\u8bbf\u95ee\uff08headers\u3001content\u3001json\u7b49\uff09 \u2705 \u53d8\u91cf\u5f15\u7528\u548c\u89e3\u6790 \u2705 \u590d\u6742\u8868\u8fbe\u5f0f\u548c\u6761\u4ef6\u6821\u9a8c \u2705 \u5f02\u5e38\u5206\u7c7b\u5904\u7406\uff08\u5173\u952e\u5f02\u5e38 vs \u8fd0\u884c\u65f6\u5f02\u5e38\uff09 # \u8fd0\u884c\u6240\u6709validator\u6d4b\u8bd5 python -m unittest tests.test_validator -v # \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5 python -m unittest tests.test_validator.TestValidator.test_validate_script_assert_success -v","title":"\ud83e\uddea \u5355\u5143\u6d4b\u8bd5"},{"location":"prepare/script/#_6","text":"Validator.validate_script() - \u4e3b\u8981\u6821\u9a8c\u903b\u8f91 ResponseFieldProxy - \u54cd\u5e94\u5b57\u6bb5\u4ee3\u7406\u8bbf\u95ee \u5f02\u5e38\u5904\u7406\u5206\u5c42 - \u533a\u5206\u5173\u952e\u5f02\u5e38\u548c\u8fd0\u884c\u65f6\u5f02\u5e38 \u9010\u6761\u6267\u884c\u673a\u5236 - \u72ec\u7acb\u6267\u884c\u6bcf\u6761\u6821\u9a8c\u811a\u672c","title":"\ud83d\udd27 \u6838\u5fc3\u7ec4\u4ef6\u6280\u672f\u5b9e\u73b0"},{"location":"prepare/script/#_7","text":"","title":"\ud83d\udcbc \u8be6\u7ec6\u4f7f\u7528\u8bf4\u660e"},{"location":"prepare/script/#1-python","text":"","title":"1\ufe0f\u20e3 Python \u811a\u672c\u6821\u9a8c"},{"location":"prepare/script/#_8","text":"script : - assert status_code == 200 - assert content.success is True - assert len(content.token) == 16 - assert content.user_id > 0","title":"\u57fa\u7840\u65ad\u8a00"},{"location":"prepare/script/#_9","text":"script : - assert status_code in [200, 201, 202] - assert content.status in [\"active\", \"pending\"] - assert len(content.items) > 0 and all(item.get(\"id\") for item in content.items)","title":"\u6761\u4ef6\u5224\u65ad"},{"location":"prepare/script/#_10","text":"script : # \u4f7f\u7528 YAML \u7684 | \u8bed\u6cd5\u7f16\u5199\u591a\u884c\u811a\u672c - | if status_code == 200: assert content.success is True elif status_code == 400: assert content.error_code is not None else: assert False, f\"Unexpected status code: {status_code}\" # \u5faa\u73af\u6821\u9a8c - | for item in content.items: assert item.get(\"id\") is not None assert item.get(\"name\") is not None","title":"\u591a\u884c\u811a\u672c"},{"location":"prepare/script/#_11","text":"script : - assert status_code == 200, f\"Expected 200, got {status_code}\" - assert content.success is True, \"API call should succeed\" - assert len(content.token) == 16, f\"Token length invalid : expected 16, got {len(content.token)}\"","title":"\u81ea\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f"},{"location":"prepare/script/#2_1","text":"","title":"2\ufe0f\u20e3 \u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c"},{"location":"prepare/script/#_12","text":"\u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u6821\u9a8c\u51fd\u6570\uff1a def validate_token ( token ): \"\"\"\u9a8c\u8bc1token\u683c\u5f0f\"\"\" if len ( token ) != 16 : raise ValueError ( f \"Token length should be 16, got { len ( token ) } \" ) if not token . isalnum (): raise ValueError ( \"Token should be alphanumeric\" ) return True def validate_user_info ( user_data ): \"\"\"\u9a8c\u8bc1\u7528\u6237\u4fe1\u606f\u5b8c\u6574\u6027\"\"\" required_fields = [ \"id\" , \"name\" , \"email\" ] for field in required_fields : if field not in user_data : raise AssertionError ( f \"Missing required field: { field } \" ) return True def check_response_time ( elapsed_seconds ): \"\"\"\u68c0\u67e5\u54cd\u5e94\u65f6\u95f4\"\"\" if elapsed_seconds >= 2.0 : raise ValueError ( f \"Response time too slow: { elapsed_seconds } s\" ) return True","title":"\u51fd\u6570\u5b9a\u4e49"},{"location":"prepare/script/#_13","text":"script : # \u76f4\u63a5\u8c03\u7528\u51fd\u6570\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u4f5c\u4e3a\u8f93\u51fa\u663e\u793a - ${validate_token(content.token)} - ${validate_user_info(content.user)} - ${check_response_time(elapsed.total_seconds)} # \u7ed3\u5408assert\u4f7f\u7528\uff08\u63a8\u8350\uff09 - assert ${validate_token(content.token)} is True - assert ${validate_user_info(content.user)} is True","title":"\u51fd\u6570\u8c03\u7528"},{"location":"prepare/script/#_14","text":"script : # \u4f20\u9012\u5355\u4e2a\u53c2\u6570 - ${validate_token($token)} - ${validate_token(content.token)} # \u4f20\u9012\u591a\u4e2a\u53c2\u6570 - ${validate_signature($device_sn, $os_platform, $app_version)} # \u4f20\u9012\u5217\u8868\u53c2\u6570 - ${validate_list_data([$device_sn, $os_platform, $app_version])} # \u4f20\u9012\u5b57\u5178\u53c2\u6570 - ${validate_dict_data({device_sn : $device_sn, platform : $os_platform})} # \u4f20\u9012\u590d\u6742\u5bf9\u8c61 - ${validate_response_data(content)}","title":"\u53c2\u6570\u4f20\u9012"},{"location":"prepare/script/#3_1","text":"","title":"3\ufe0f\u20e3 \u53d8\u91cf\u5f15\u7528"},{"location":"prepare/script/#_15","text":"variables : expected_status : 200 expected_token_length : 16 script : - assert status_code == $expected_status - assert len(content.token) == $expected_token_length","title":"\u6d4b\u8bd5\u53d8\u91cf\u5f15\u7528"},{"location":"prepare/script/#_16","text":"extract : - user_id : content.user.id - token : content.token script : - assert $user_id > 0 - assert len(\"$token\") == 16 # \u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u53d8\u91cf\u5f15\u7528\u9700\u8981\u52a0\u5f15\u53f7 - ${validate_token($token)}","title":"\u63d0\u53d6\u53d8\u91cf\u5f15\u7528"},{"location":"prepare/script/#4_1","text":"","title":"4\ufe0f\u20e3 \u9519\u8bef\u5904\u7406"},{"location":"prepare/script/#_17","text":"\u5f53\u67d0\u6761\u811a\u672c\u6821\u9a8c\u5931\u8d25\u65f6\uff0c\u7cfb\u7edf\u4f1a\uff1a \u8bb0\u5f55\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f \u7ee7\u7eed\u6267\u884c\u540e\u7eed\u811a\u672c \u5728\u6d4b\u8bd5\u62a5\u544a\u4e2d\u663e\u793a\u5931\u8d25\u8be6\u60c5 script : - assert status_code == 200 # \u901a\u8fc7 - assert content.invalid_field == \"test\" # \u5931\u8d25\uff0c\u4f46\u4e0d\u4e2d\u65ad\u540e\u7eed\u6821\u9a8c - assert content.success is True # \u7ee7\u7eed\u6267\u884c - ${validate_token(content.token)} # \u7ee7\u7eed\u6267\u884c","title":"\u5bb9\u9519\u673a\u5236"},{"location":"prepare/script/#_18","text":"AssertionError - assert \u8bed\u53e5\u5931\u8d25 NameError - \u53d8\u91cf\u4e0d\u5b58\u5728 AttributeError - \u5c5e\u6027\u8bbf\u95ee\u9519\u8bef TypeError - \u7c7b\u578b\u9519\u8bef ValueError - \u503c\u9519\u8bef\uff08\u81ea\u5b9a\u4e49\u51fd\u6570\u5e38\u7528\uff09 SyntaxError - \u8bed\u6cd5\u9519\u8bef","title":"\u5f02\u5e38\u7c7b\u578b\u8bf4\u660e"},{"location":"prepare/script/#5","text":"","title":"5\ufe0f\u20e3 \u9ad8\u7ea7\u7528\u6cd5"},{"location":"prepare/script/#_19","text":"script : # \u5d4c\u5957\u6570\u636e\u8bbf\u95ee - assert content.user.profile.age > 0 - assert len(content.user.permissions) > 0 # \u6570\u7ec4\u8bbf\u95ee - assert len(content.items) > 0 - assert content.items[0].id is not None # \u5b57\u5178\u8bbf\u95ee - assert headers[\"Content-Type\"] == \"application/json\" - assert \"Authorization\" in headers","title":"\u54cd\u5e94\u5b57\u6bb5\u6df1\u5ea6\u8bbf\u95ee"},{"location":"prepare/script/#_20","text":"script : # \u6839\u636e\u54cd\u5e94\u5185\u5bb9\u52a8\u6001\u6821\u9a8c - | if content.user.type == \"vip\": assert content.user.vip_level > 0 assert content.user.vip_expires is not None else: assert content.user.vip_level == 0","title":"\u52a8\u6001\u6821\u9a8c"},{"location":"prepare/script/#_21","text":"script : # \u6821\u9a8c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 - | for item in content.products: assert item.get(\"id\") is not None assert item.get(\"price\") > 0 assert item.get(\"status\") in [\"active\", \"inactive\"]","title":"\u6279\u91cf\u6821\u9a8c"},{"location":"prepare/script/#6","text":"","title":"6\ufe0f\u20e3 \u6700\u4f73\u5b9e\u8df5"},{"location":"prepare/script/#1-debugtalkpy","text":"# debugtalk.py def validate_user_data ( user ): \"\"\"\u7528\u6237\u6570\u636e\u6821\u9a8c\"\"\" validate_required_fields ( user , [ \"id\" , \"name\" , \"email\" ]) validate_user_id ( user [ \"id\" ]) validate_email_format ( user [ \"email\" ]) return True def validate_required_fields ( data , fields ): \"\"\"\u5fc5\u586b\u5b57\u6bb5\u6821\u9a8c\"\"\" for field in fields : assert field in data , f \"Missing required field: { field } \" assert data [ field ] is not None , f \"Field ' { field } ' cannot be None\" def validate_user_id ( user_id ): \"\"\"\u7528\u6237ID\u6821\u9a8c\"\"\" assert isinstance ( user_id , int ), f \"User ID must be integer, got { type ( user_id ) } \" assert user_id > 0 , f \"User ID must be positive, got { user_id } \" def validate_email_format ( email ): \"\"\"\u90ae\u7bb1\u683c\u5f0f\u6821\u9a8c\"\"\" import re pattern = r '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$' assert re . match ( pattern , email ), f \"Invalid email format: { email } \" def validate_api_response ( response_data ): \"\"\" API\u54cd\u5e94\u6821\u9a8c\u7684\u6700\u4f73\u5b9e\u8df5 Args: response_data: \u54cd\u5e94\u6570\u636e Returns: bool: \u6821\u9a8c\u7ed3\u679c Raises: AssertionError: \u6821\u9a8c\u5931\u8d25\u65f6\u629b\u51fa\u8be6\u7ec6\u9519\u8bef\u4fe1\u606f \"\"\" # \u4f7f\u7528\u65ad\u8a00\u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f assert \"code\" in response_data , \"Response missing 'code' field\" assert \"message\" in response_data , \"Response missing 'message' field\" # \u4e1a\u52a1\u903b\u8f91\u68c0\u67e5 if response_data [ \"code\" ] == 0 : assert \"data\" in response_data , \"Success response missing 'data' field\" assert response_data [ \"data\" ] is not None , \"Success response data is None\" return True","title":"1. \u6a21\u5757\u5316\u6821\u9a8c\u51fd\u6570 - \u5c06\u590d\u6742\u903b\u8f91\u5c01\u88c5\u5230 debugtalk.py \u4e2d"},{"location":"prepare/script/#2-assert","text":"script : # \u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f - assert status_code == 200, f\"Expected status 200, got {status_code}\" - assert content.success is True, f\"API call failed : { content.get('message' , 'Unknown error' ) } \" - assert len(content.token) == 16, f\" Token length invalid : expected 16, got {len(content.token)}\"","title":"2. \u6e05\u6670\u7684\u9519\u8bef\u4fe1\u606f - \u4f7f\u7528\u81ea\u5b9a\u4e49assert\u6d88\u606f"},{"location":"prepare/script/#3-yaml","text":"script : # \u57fa\u7840\u6821\u9a8c - assert status_code == 200 - assert content.success is True # \u6570\u636e\u5b8c\u6574\u6027\u6821\u9a8c - ${validate_required_fields(content, [\"id\", \"name\", \"email\"])} # \u4e1a\u52a1\u903b\u8f91\u6821\u9a8c - ${validate_business_rules(content)} # \u6027\u80fd\u6821\u9a8c - assert elapsed.total_seconds < 2.0","title":"3. \u811a\u672c\u7ec4\u7ec7 - \u907f\u514d\u5728YAML\u4e2d\u5199\u8fc7\u7a0b\u7684\u811a\u672c\uff0c\u540c\u65f6\u786e\u4fdd\u811a\u672c\u6765\u6e90\u53ef\u4fe1"},{"location":"prepare/script/#7","text":"config : name : \"\u7528\u6237API\u6d4b\u8bd5\" variables : expected_status : 200 min_token_length : 16 teststeps : - name : \u83b7\u53d6\u7528\u6237\u4fe1\u606f request : url : /api/user/profile method : GET extract : - user_id : content.user.id - token : content.token script : # \u57fa\u7840\u6821\u9a8c - assert status_code == $expected_status - assert content.success is True - assert content.message == \"success\" # \u6570\u636e\u6821\u9a8c - assert content.user is not None - assert content.user.id > 0 - assert len(content.token) >= $min_token_length # \u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c - ${validate_user_data(content.user)} - ${validate_token_format(content.token)} - assert ${check_permissions(content.user.permissions)} is True # \u590d\u6742\u6761\u4ef6\u6821\u9a8c - | if content.user.vip_level > 0: assert content.user.vip_expires is not None else: assert content.user.vip_expires is None","title":"7\ufe0f\u20e3 \u5b8c\u6574\u793a\u4f8b"},{"location":"prepare/script/#_22","text":"\u7279\u6027 \u4f20\u7edf validate script \u6821\u9a8c \u5b66\u4e60\u6210\u672c \u9700\u8981\u8bb0\u5fc6\u7279\u5b9a\u8bed\u6cd5 \u6807\u51c6Python\u8bed\u6cd5 \u7075\u6d3b\u6027 \u56fa\u5b9a\u683c\u5f0f \u4efb\u610fPython\u811a\u672c \u9519\u8bef\u5904\u7406 \u5355\u70b9\u5931\u8d25\u4e2d\u65ad \u9010\u6761\u6267\u884c\uff0c\u5bb9\u9519\u5904\u7406 \u81ea\u5b9a\u4e49\u51fd\u6570 \u6709\u9650\u652f\u6301 \u5b8c\u5168\u652f\u6301 \u590d\u6742\u903b\u8f91 \u6709\u9650\u652f\u6301 \u652f\u6301\u6761\u4ef6\u3001\u5faa\u73af\u7b49 \u8c03\u8bd5\u80fd\u529b \u57fa\u7840 \u5f3a\u5927\uff08\u9010\u6761\u7ed3\u679c\uff09 \u6570\u636e\u6821\u9a8c\u80fd\u529b \u4e0d\u901a\u7528\u4e14\u7ed3\u679c\u5355\u4e00 \u81ea\u5b9a\u4e49\u4efb\u610f\u7ed3\u679c \u901a\u8fc7\u4ee5\u4e0a\u529f\u80fd\uff0c script \u63d0\u4f9b\u4e86\u6bd4\u4f20\u7edf validate \u66f4\u52a0\u7075\u6d3b\u548c\u5f3a\u5927\u7684\u6821\u9a8c\u80fd\u529b\uff0c\u7279\u522b\u9002\u5408\u590d\u6742\u7684\u4e1a\u52a1\u903b\u8f91\u6821\u9a8c\u573a\u666f\uff0c\u800c\u4e14\u5b8c\u7f8e\u5730\u5e73\u8861\u4e86 \u7b80\u5355\u6027 \u548c \u5f3a\u5927\u6027 \u2705 \u7b80\u5355\u76f4\u89c2 - \u4f7f\u7528\u6807\u51c6Python\u8bed\u6cd5\uff0c\u96f6\u5b66\u4e60\u6210\u672c \u2705 \u529f\u80fd\u5f3a\u5927 - \u652f\u6301\u4efb\u610f\u590d\u6742\u7684\u6821\u9a8c\u903b\u8f91 \u2705 \u8bbe\u8ba1\u7cbe\u826f - \u9010\u6761\u6267\u884c\u3001\u667a\u80fd\u5f02\u5e38\u5904\u7406\u3001\u8be6\u7ec6\u62a5\u544a \u2705 \u5b9e\u73b0\u5b8c\u6574 - \u4ece\u89e3\u6790\u3001\u6267\u884c\u5230\u62a5\u544a\u7684\u5b8c\u6574\u6d41\u7a0b \u2705 \u7528\u6237\u53cb\u597d - \u4e0eassert\u4e00\u8109\u76f8\u627f\uff0c\u7b26\u5408\u5f00\u53d1\u8005\u76f4\u89c9","title":"\ud83c\udfc6 \u603b\u7ed3"},{"location":"prepare/security/","text":"\u4fe1\u606f\u5b89\u5168 \u00b6 \u80cc\u666f \u00b6 \u5f88\u591a\u65f6\u5019\u9879\u76ee\u4ee3\u7801\u5728\u8fd0\u884c\u65f6\u9700\u8981\u4f7f\u7528\u5230\u8d26\u53f7\u3001\u5bc6\u7801\u3001key\u7b49\u654f\u611f\u6570\u636e\u4fe1\u606f\uff0c\u4f46\u662f\u4ece\u4fe1\u606f\u5b89\u5168\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u6211\u4eec\u662f\u4e0d\u80fd\u5c06\u8fd9\u4e9b\u654f\u611f\u6570\u636e\u63d0\u4ea4\u5230\u4ee3\u7801\u4ed3\u5e93\u7684\uff0c\u4e3b\u8981\u539f\u56e0\u6709\u4e24\u4e2a\uff1a \u52a0\u5f3a\u6743\u9650\u7ba1\u63a7\uff1a\u53c2\u4e0e\u9879\u76ee\u7684\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\uff0c\u5927\u5bb6\u90fd\u6709\u8bfb\u53d6\u4ee3\u7801\u4ed3\u5e93\u7684\u6743\u9650\uff0c\u4f46\u662f\u50cf key \u8fd9\u7c7b\u6781\u5ea6\u654f\u611f\u7684\u4fe1\u606f\u4e0d\u5e94\u8be5\u6240\u6709\u4eba\u90fd\u6709\u6743\u9650\u83b7\u53d6\uff1b \u51cf\u5c11\u4ee3\u7801\u6cc4\u6f0f\u7684\u5371\u5bb3\u6027\uff1a\u5047\u5982\u4ee3\u7801\u51fa\u73b0\u6cc4\u6f0f\uff0c\u654f\u611f\u6570\u636e\u4fe1\u606f\u4e0d\u5e94\u8be5\u4e5f\u540c\u65f6\u6cc4\u6f0f\u3002 \u89e3\u51b3\u65b9\u6848 \u00b6 \u90a3\u4ee3\u7801\u90e8\u7f72\u5230\u670d\u52a1\u5668\u6216 Jenkins \u6267\u884c\u673a\u540e\uff0c\u8fd0\u884c\u65f6\u8981\u4f7f\u7528\u5230\u8fd9\u4e9b\u654f\u611f\u6570\u636e\u4fe1\u606f\uff0c\u8be5\u600e\u4e48\u64cd\u4f5c\u5462\uff1f \u63a8\u8350\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e3a\uff1a \u5bf9\u670d\u52a1\u5668\u8fdb\u884c\u6743\u9650\u7ba1\u63a7\uff0c\u53ea\u6709\u8fd0\u7ef4\u4eba\u5458\uff08\u6216\u8005\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\uff09\u624d\u6709\u767b\u5f55\u670d\u52a1\u5668\u7684\u6743\u9650\uff1b \u8fd0\u7ef4\u4eba\u5458\uff08\u6216\u8005\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\uff09\uff1a\u5728\u8fd0\u884c\u7684\u673a\u5668\u4e0a\u5c06\u654f\u611f\u6570\u636e\u8bbe\u7f6e\u5230\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e2d\uff1b \u666e\u901a\u5f00\u53d1\u4eba\u5458\uff1a\u53ea\u9700\u8981\u77e5\u9053\u654f\u611f\u4fe1\u606f\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u5728\u4ee3\u7801\u4e2d\u901a\u8fc7\u8bfb\u53d6\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u83b7\u53d6\u654f\u611f\u6570\u636e\u3002 \u5b58\u50a8\u654f\u611f\u6570\u636e\uff08\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff09\u548c\u4f7f\u7528\u654f\u611f\u6570\u636e\uff08\u5f15\u7528\u73af\u5883\u53d8\u91cf\uff09\u7684\u5177\u4f53\u65b9\u6cd5\uff0c\u53ef\u53c2\u8003 \u73af\u5883\u53d8\u91cf \u4f7f\u7528\u8bf4\u660e\u6587\u6863\u3002","title":"\u4fe1\u606f\u5b89\u5168"},{"location":"prepare/security/#_1","text":"","title":"\u4fe1\u606f\u5b89\u5168"},{"location":"prepare/security/#_2","text":"\u5f88\u591a\u65f6\u5019\u9879\u76ee\u4ee3\u7801\u5728\u8fd0\u884c\u65f6\u9700\u8981\u4f7f\u7528\u5230\u8d26\u53f7\u3001\u5bc6\u7801\u3001key\u7b49\u654f\u611f\u6570\u636e\u4fe1\u606f\uff0c\u4f46\u662f\u4ece\u4fe1\u606f\u5b89\u5168\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u6211\u4eec\u662f\u4e0d\u80fd\u5c06\u8fd9\u4e9b\u654f\u611f\u6570\u636e\u63d0\u4ea4\u5230\u4ee3\u7801\u4ed3\u5e93\u7684\uff0c\u4e3b\u8981\u539f\u56e0\u6709\u4e24\u4e2a\uff1a \u52a0\u5f3a\u6743\u9650\u7ba1\u63a7\uff1a\u53c2\u4e0e\u9879\u76ee\u7684\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\uff0c\u5927\u5bb6\u90fd\u6709\u8bfb\u53d6\u4ee3\u7801\u4ed3\u5e93\u7684\u6743\u9650\uff0c\u4f46\u662f\u50cf key \u8fd9\u7c7b\u6781\u5ea6\u654f\u611f\u7684\u4fe1\u606f\u4e0d\u5e94\u8be5\u6240\u6709\u4eba\u90fd\u6709\u6743\u9650\u83b7\u53d6\uff1b \u51cf\u5c11\u4ee3\u7801\u6cc4\u6f0f\u7684\u5371\u5bb3\u6027\uff1a\u5047\u5982\u4ee3\u7801\u51fa\u73b0\u6cc4\u6f0f\uff0c\u654f\u611f\u6570\u636e\u4fe1\u606f\u4e0d\u5e94\u8be5\u4e5f\u540c\u65f6\u6cc4\u6f0f\u3002","title":"\u80cc\u666f"},{"location":"prepare/security/#_3","text":"\u90a3\u4ee3\u7801\u90e8\u7f72\u5230\u670d\u52a1\u5668\u6216 Jenkins \u6267\u884c\u673a\u540e\uff0c\u8fd0\u884c\u65f6\u8981\u4f7f\u7528\u5230\u8fd9\u4e9b\u654f\u611f\u6570\u636e\u4fe1\u606f\uff0c\u8be5\u600e\u4e48\u64cd\u4f5c\u5462\uff1f \u63a8\u8350\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e3a\uff1a \u5bf9\u670d\u52a1\u5668\u8fdb\u884c\u6743\u9650\u7ba1\u63a7\uff0c\u53ea\u6709\u8fd0\u7ef4\u4eba\u5458\uff08\u6216\u8005\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\uff09\u624d\u6709\u767b\u5f55\u670d\u52a1\u5668\u7684\u6743\u9650\uff1b \u8fd0\u7ef4\u4eba\u5458\uff08\u6216\u8005\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\uff09\uff1a\u5728\u8fd0\u884c\u7684\u673a\u5668\u4e0a\u5c06\u654f\u611f\u6570\u636e\u8bbe\u7f6e\u5230\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e2d\uff1b \u666e\u901a\u5f00\u53d1\u4eba\u5458\uff1a\u53ea\u9700\u8981\u77e5\u9053\u654f\u611f\u4fe1\u606f\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u5728\u4ee3\u7801\u4e2d\u901a\u8fc7\u8bfb\u53d6\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u83b7\u53d6\u654f\u611f\u6570\u636e\u3002 \u5b58\u50a8\u654f\u611f\u6570\u636e\uff08\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff09\u548c\u4f7f\u7528\u654f\u611f\u6570\u636e\uff08\u5f15\u7528\u73af\u5883\u53d8\u91cf\uff09\u7684\u5177\u4f53\u65b9\u6cd5\uff0c\u53ef\u53c2\u8003 \u73af\u5883\u53d8\u91cf \u4f7f\u7528\u8bf4\u660e\u6587\u6863\u3002","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"prepare/testcase-layer/","text":"\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42 \u00b6 \u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b \u00b6 \u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9886\u57df\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u53ef\u7ef4\u62a4\u6027\u662f\u6781\u5176\u91cd\u8981\u7684\u56e0\u7d20\uff0c\u76f4\u63a5\u5173\u7cfb\u5230\u81ea\u52a8\u5316\u6d4b\u8bd5\u80fd\u5426\u6301\u7eed\u6709\u6548\u5730\u5728\u9879\u76ee\u4e2d\u5f00\u5c55\u3002 \u6982\u62ec\u6765\u8bf4\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u673a\u5236\u7684\u6838\u5fc3\u662f\u5c06\u63a5\u53e3\u5b9a\u4e49\u3001\u6d4b\u8bd5\u6b65\u9aa4\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u6d4b\u8bd5\u573a\u666f\u8fdb\u884c\u5206\u79bb\uff0c\u5355\u72ec\u8fdb\u884c\u63cf\u8ff0\u548c\u7ef4\u62a4\uff0c\u4ece\u800c\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ef4\u62a4\u6210\u672c\u3002 \u903b\u8f91\u5173\u7cfb\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u540c\u65f6\uff0c\u5f3a\u8c03\u5982\u4e0b\u51e0\u70b9\u6838\u5fc3\u6982\u5ff5\uff1a \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5e94\u8be5\u662f\u5b8c\u6574\u4e14\u72ec\u7acb\u7684\uff0c\u6bcf\u6761\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684 \u6d4b\u8bd5\u7528\u4f8b\u662f\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u7684 \u6709\u5e8f \u96c6\u5408\uff0c\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5bf9\u5e94\u4e00\u4e2a API \u7684\u8bf7\u6c42\u63cf\u8ff0 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\uff1b\u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\uff0c\u90a3\u5c31\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b8c\u6210\u4f9d\u8d56\u7684\u5904\u7406 \u5982\u679c\u5bf9\u4e8e\u4e0a\u8ff0\u7b2c\u4e09\u70b9\u611f\u89c9\u96be\u4ee5\u7406\u89e3\uff0c\u4e0d\u59a8\u770b\u4e0b\u4e0a\u56fe\u4e2d\u7684\u793a\u4f8b\uff1a testcase1 \u4f9d\u8d56\u4e8e testcase2\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep12\uff09\u4e2d\u5bf9 testcase2 \u8fdb\u884c\u5f15\u7528\uff0c\u7136\u540e testcase1 \u5c31\u662f\u5b8c\u6574\u4e14\u53ef\u72ec\u7acb\u8fd0\u884c\u7684\uff1b \u5728 testsuite \u4e2d\uff0ctestcase1 \u4e0e testcase2 \u76f8\u4e92\u72ec\u7acb\uff0c\u8fd0\u884c\u987a\u5e8f\u5c31\u4e0d\u518d\u6709\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u4e86\u3002 \u5206\u5c42\u63cf\u8ff0\u8be6\u89e3 \u00b6 \u7406\u89e3\u4e86\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u6765\u770b\u4e0b\u5728\u5206\u5c42\u6a21\u578b\u4e0b\uff0c\u63a5\u53e3\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u63cf\u8ff0\u5f62\u5f0f\u3002 \u63a5\u53e3\u5b9a\u4e49\uff08API\uff09 \u00b6 \u4e3a\u4e86\u66f4\u597d\u5730\u5bf9\u63a5\u53e3\u63cf\u8ff0\u8fdb\u884c\u7ba1\u7406\uff0c\u63a8\u8350\u4f7f\u7528\u72ec\u7acb\u7684\u6587\u4ef6\u5bf9\u63a5\u53e3\u63cf\u8ff0\u8fdb\u884c\u5b58\u50a8\uff0c\u5373\u6bcf\u4e2a\u6587\u4ef6\u5bf9\u5e94\u4e00\u4e2a\u63a5\u53e3\u63cf\u8ff0\u3002 \u63a5\u53e3\u5b9a\u4e49\u63cf\u8ff0\u7684\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a name \u3001variables\u3001 request \u3001base_url\u3001validate \u7b49\uff0c\u5f62\u5f0f\u5982\u4e0b\uff1a name : get headers base_url : http://httpbin.org variables : expected_status_code : 200 request : url : /headers method : GET validate : - eq : [ \"status_code\" , $expected_status_code ] - eq : [ content.headers.Host , \"httpbin.org\" ] \u5176\u4e2d\uff0cname \u548c request \u90e8\u5206\u662f\u5fc5\u987b\u7684\uff0crequest \u4e2d\u7684\u63cf\u8ff0\u5f62\u5f0f\u4e0e requests.request \u5b8c\u5168\u76f8\u540c\u3002 \u53e6\u5916\uff0cAPI \u63cf\u8ff0\u9700\u8981\u5c3d\u91cf\u4fdd\u6301\u5b8c\u6574\uff0c\u505a\u5230\u53ef\u4ee5\u5355\u72ec\u8fd0\u884c\u3002\u5982\u679c\u5728\u63a5\u53e3\u63cf\u8ff0\u4e2d\u5b58\u5728\u53d8\u91cf\u5f15\u7528\u7684\u60c5\u51b5\uff0c\u53ef\u5728 variables \u4e2d\u5bf9\u53c2\u6570\u8fdb\u884c\u5b9a\u4e49\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u5b9e\u73b0\u5355\u4e2a\u63a5\u53e3\u7684\u8c03\u8bd5\u3002 $ hrun api/get_headers.yml INFO Start to run testcase: get headers headers INFO GET http://httpbin.org/headers INFO status_code: 200 , response_time ( ms ) : 477 .32 ms, response_length: 157 bytes . ---------------------------------------------------------------------- Ran 1 test in 0 .478s OK \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09 \u00b6 \u5f15\u7528\u63a5\u53e3\u5b9a\u4e49 \u00b6 \u6709\u4e86\u63a5\u53e3\u7684\u5b9a\u4e49\u63cf\u8ff0\u540e\uff0c\u6211\u4eec\u7f16\u5199\u6d4b\u8bd5\u573a\u666f\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\u63a5\u53e3\u5b9a\u4e49\u4e86\u3002 \u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u4e2d\uff0c\u53ef\u901a\u8fc7 api \u5b57\u6bb5\u5f15\u7528\u63a5\u53e3\u5b9a\u4e49\uff0c\u5f15\u7528\u65b9\u5f0f\u4e3a\u5bf9\u5e94 API \u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u5747\u53ef\u3002\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u8def\u5f84\u57fa\u51c6\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u5373 debugtalk.py \u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\u3002 - config : name : \"setup and reset all.\" variables : user_agent : 'iOS/10.3' device_sn : \"TESTCASE_SETUP_XXX\" os_platform : 'ios' app_version : '2.8.6' base_url : \"http://127.0.0.1:5000\" verify : False output : - session_token - test : name : get token (setup) api : api/get_token.yml variables : user_agent : 'iOS/10.3' device_sn : $device_sn os_platform : 'ios' app_version : '2.8.6' extract : - session_token : content.token validate : - eq : [ \"status_code\" , 200 ] - len_eq : [ \"content.token\" , 16 ] - test : name : reset all users api : api/reset_all.yml variables : token : $session_token \u82e5\u9700\u8981\u63a7\u5236\u6216\u6539\u53d8\u63a5\u53e3\u5b9a\u4e49\u4e2d\u7684\u53c2\u6570\u503c\uff0c\u53ef\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u6307\u5b9a variables \u53c2\u6570\uff0c\u8986\u76d6 API \u4e2d\u7684 variables \u5b9e\u73b0\u3002 \u540c\u6837\u5730\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5b9a\u4e49 validate \u540e\uff0c\u4e5f\u4f1a\u4e0e API \u4e2d\u7684 validate \u5408\u5e76\u8986\u76d6\u3002\u56e0\u6b64\u63a8\u8350\u7684\u505a\u6cd5\u662f\uff0c\u5728 API \u5b9a\u4e49\u4e2d\u7684 validate \u53ea\u63cf\u8ff0\u6700\u57fa\u672c\u7684\u6821\u9a8c\u9879\uff0c\u4f8b\u5982 status_code\uff0c\u5bf9\u4e8e\u4e0e\u4e1a\u52a1\u903b\u8f91\u76f8\u5173\u7684\u66f4\u591a\u6821\u9a8c\u9879\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u7684 validate \u4e2d\u8fdb\u884c\u63cf\u8ff0\u3002 \u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b \u00b6 \u5728\u6d4b\u8bd5\u7528\u4f8b\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\uff0c\u9664\u4e86\u53ef\u4ee5\u5f15\u7528\u63a5\u53e3\u5b9a\u4e49\uff0c\u8fd8\u53ef\u4ee5\u5f15\u7528\u5176\u5b83\u6d4b\u8bd5\u7528\u4f8b\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u907f\u514d\u91cd\u590d\u63cf\u8ff0\u7684\u540c\u65f6\uff0c\u89e3\u51b3\u6d4b\u8bd5\u7528\u4f8b\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u800c\u4fdd\u8bc1\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u662f\u72ec\u7acb\u53ef\u8fd0\u884c\u7684\u3002 \u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u4e2d\uff0c\u53ef\u901a\u8fc7 testcase \u5b57\u6bb5\u5f15\u7528\u5176\u5b83\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5f15\u7528\u65b9\u5f0f\u4e3a\u5bf9\u5e94\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u5747\u53ef\u3002\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u8def\u5f84\u57fa\u51c6\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u5373 debugtalk.py \u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08\"setup and reset all.\"\uff09\u4e2d\uff0c\u5b9e\u73b0\u4e86\u5bf9\u83b7\u53d6 token \u529f\u80fd\u7684\u6d4b\u8bd5\uff1b\u540c\u65f6\uff0c\u5728\u5f88\u591a\u5176\u5b83\u529f\u80fd\u4e2d\u90fd\u4f1a\u4f9d\u8d56\u4e8e\u83b7\u53d6 token \u7684\u529f\u80fd\uff0c\u5982\u679c\u5c06\u8be5\u529f\u80fd\u7684\u6d4b\u8bd5\u6b65\u9aa4\u811a\u672c\u62f7\u8d1d\u5230\u5176\u5b83\u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u90a3\u4e48\u5c31\u4f1a\u5b58\u5728\u5927\u91cf\u91cd\u590d\uff0c\u5f53\u9700\u8981\u5bf9\u8be5\u90e8\u5206\u8fdb\u884c\u4fee\u6539\u65f6\u5c31\u9700\u8981\u4fee\u6539\u6240\u6709\u5730\u65b9\uff0c\u663e\u7136\u4e0d\u4fbf\u4e8e\u7ef4\u62a4\u3002 \u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\uff0c\u5728\u5176\u5b83\u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08\u5982\u521b\u5efa\u7528\u6237\uff09\u4e2d\uff0c\u5f15\u7528\u83b7\u53d6 token \u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08testcases/setup.yml\uff09\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff0c\u4ece\u800c\u521b\u5efa\u7528\u6237\uff08\"create user and check result.\"\uff09\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u53d8\u5f97\u72ec\u7acb\u53ef\u8fd0\u884c\u4e86\u3002 - config : name : \"create user and check result.\" id : create_user base_url : \"http://127.0.0.1:5000\" variables : uid : 9001 device_sn : \"TESTCASE_CREATE_XXX\" output : - session_token - test : name : setup and reset all (override) for $device_sn. testcase : testcases/setup.yml output : - session_token - test : name : create user and check result. variables : token : $session_token testcase : testcases/deps/check_and_create.yml \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09 \u00b6 \u5f53\u6d4b\u8bd5\u7528\u4f8b\u6570\u91cf\u6bd4\u8f83\u591a\u4ee5\u540e\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u548c\u5b9e\u73b0\u6279\u91cf\u8fd0\u884c\uff0c\u901a\u5e38\u9700\u8981\u4f7f\u7528\u6d4b\u8bd5\u7528\u4f8b\u96c6\u6765\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u7ec4\u7ec7\u3002 \u5728\u524d\u6587\u7684\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b\u4e2d\u4e5f\u5f3a\u8c03\u4e86\uff0c\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\uff1b\u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\uff0c\u90a3\u5c31\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b8c\u6210\u4f9d\u8d56\u7684\u5904\u7406\u3002 \u56e0\u4e3a\u662f \u65e0\u5e8f \u96c6\u5408\uff0c\u56e0\u6b64\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u63cf\u8ff0\u5f62\u5f0f\u4f1a\u4e0e\u6d4b\u8bd5\u7528\u4f8b\u6709\u4e9b\u4e0d\u540c\uff0c\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u96c6\u6587\u4ef6\u4e2d\uff0c\u7b2c\u4e00\u5c42\u7ea7\u5b58\u5728\u4e24\u7c7b\u5b57\u6bb5\uff1a config: \u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u603b\u4f53\u914d\u7f6e\u53c2\u6570 testcases: \u503c\u4e3a\u5b57\u5178\u7ed3\u6784\uff08\u65e0\u5e8f\uff09\uff0ckey \u4e3a\u6d4b\u8bd5\u7528\u4f8b\u7684\u540d\u79f0\uff0cvalue \u4e3a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5185\u5bb9\uff1b\u5728\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u65f6\u4e5f\u53ef\u4ee5\u6307\u5b9a variables\uff0c\u5b9e\u73b0\u5bf9\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u4e2d variables \u7684\u8986\u76d6\u3002 \u975e\u53c2\u6570\u5316\u573a\u666f \u00b6 config : name : create users with uid variables : device_sn : ${gen_random_string(15)} var_a : ${gen_random_string(5)} var_b : $var_a base_url : \"http://127.0.0.1:5000\" testcases : create user 1000 and check result. : testcase : testcases/create_user.yml variables : uid : 1000 var_c : ${gen_random_string(5)} var_d : $var_c create user 1001 and check result. : testcase : testcases/create_user.yml variables : uid : 1001 var_c : ${gen_random_string(5)} var_d : $var_c \u53c2\u6570\u5316\u573a\u666f\uff08parameters\uff09 \u00b6 \u5bf9\u4e8e\u53c2\u6570\u5316\u573a\u666f\uff0c\u53ef\u901a\u8fc7 parameters \u5b9e\u73b0\uff0c\u63cf\u8ff0\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\u3002 config : name : create users with parameters variables : device_sn : ${gen_random_string(15)} base_url : \"http://127.0.0.1:5000\" testcases : create user $uid and check result for $device_sn. : testcase : testcases/create_user.yml variables : uid : 1000 device_sn : TESTSUITE_XXX parameters : uid : [ 101 , 102 , 103 ] device_sn : [ TESTSUITE_X1 , TESTSUITE_X2 ] \u53c2\u6570\u5316\u540e\uff0cparameters \u4e2d\u7684\u53d8\u91cf\u5c06\u91c7\u7528\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\u5f62\u6210\u53c2\u6570\u5217\u8868\uff0c\u4f9d\u6b21\u8986\u76d6 variables \u4e2d\u7684\u53c2\u6570\uff0c\u9a71\u52a8\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u3002 \u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u7ba1\u7406 && \u811a\u624b\u67b6\u5de5\u5177 \u00b6 \u5728\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8fdb\u884c\u7ec4\u7ec7\u7ba1\u7406\u65f6\uff0c\u5bf9\u4e8e\u6587\u4ef6\u7684\u5b58\u50a8\u4f4d\u7f6e\u5747\u6ca1\u6709\u8981\u6c42\u548c\u9650\u5236\uff0c\u5728\u5f15\u7528\u65f6\u53ea\u9700\u8981\u6307\u5b9a\u5bf9\u5e94\u7684\u6587\u4ef6\u8def\u5f84\u5373\u53ef\u3002\u4f46\u4ece\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\u7684\u89d2\u5ea6\uff0c\u6700\u597d\u662f\u6309\u7167\u63a8\u8350\u7684\u6587\u4ef6\u5939\u540d\u79f0\u8fdb\u884c\u5b58\u50a8\u7ba1\u7406\uff0c\u5e76\u53ef\u901a\u8fc7\u5b50\u76ee\u5f55\u5b9e\u73b0\u9879\u76ee\u6a21\u5757\u5206\u7c7b\u7ba1\u7406\u3002 \u63a8\u8350\u7684\u65b9\u5f0f\u6c47\u603b\u5982\u4e0b\uff1a debugtalk.py \u653e\u7f6e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\uff0c\u5047\u8bbe\u4e3a PRJ_ROOT_DIR .env \u653e\u7f6e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\uff0c\u8def\u5f84\u4e3a PRJ_ROOT_DIR/.env \u63a5\u53e3\u5b9a\u4e49\uff08API\uff09\u653e\u7f6e\u5728 PRJ_ROOT_DIR/api/ \u76ee\u5f55\u4e0b \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u653e\u7f6e\u5728 PRJ_ROOT_DIR/testcases/ \u76ee\u5f55\u4e0b \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u6587\u4ef6\u5fc5\u987b\u653e\u7f6e\u5728 PRJ_ROOT_DIR/testsuites/ \u76ee\u5f55\u4e0b data \u6587\u4ef6\u5939\uff1a\u5b58\u50a8\u53c2\u6570\u5316\u6587\u4ef6\uff0c\u6216\u8005\u9879\u76ee\u4f9d\u8d56\u7684\u6587\u4ef6\uff0c\u8def\u5f84\u4e3a PRJ_ROOT_DIR/data/ reports \u6587\u4ef6\u5939\uff1a\u5b58\u50a8 \bHTML \u6d4b\u8bd5\u62a5\u544a\uff0c\u751f\u6210\u8def\u5f84\u4e3a PRJ_ROOT_DIR/reports/ \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a $ tree tests tests \u251c\u2500\u2500 .env \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 app_version.csv \u2502 \u2514\u2500\u2500 account.csv \u251c\u2500\u2500 api \u2502 \u251c\u2500\u2500 create_user.yml \u2502 \u251c\u2500\u2500 get_headers.yml \u2502 \u251c\u2500\u2500 get_token.yml \u2502 \u251c\u2500\u2500 get_user.yml \u2502 \u2514\u2500\u2500 reset_all.yml \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 testcases \u2502 \u251c\u2500\u2500 create_user.yml \u2502 \u251c\u2500\u2500 deps \u2502 \u2502 \u2514\u2500\u2500 check_and_create.yml \u2502 \u2514\u2500\u2500 setup.yml \u2514\u2500\u2500 testsuites \u251c\u2500\u2500 create_users.yml \u2514\u2500\u2500 create_users_with_parameters.yml \u9879\u76ee\u811a\u624b\u67b6 \u540c\u65f6\uff0c\u5728 HttpRunner \u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u811a\u624b\u67b6\u5de5\u5177\uff0c\u53ef\u4ee5\u5feb\u901f\u521b\u5efa\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\u3002\u8be5\u60f3\u6cd5\u6765\u6e90\u4e8e Django \u7684 django-admin.py startproject project_name \u3002 \u4f7f\u7528\u65b9\u5f0f\u4e5f\u4e0e Django \u7c7b\u4f3c\uff0c\u53ea\u9700\u8981\u901a\u8fc7 --startproject \u6307\u5b9a\u65b0\u9879\u76ee\u7684\u540d\u79f0\u5373\u53ef\u3002 $ hrun --startproject demo Start to create new project: demo CWD: /Users/debugtalk/MyProjects/examples created folder: demo created folder: demo/api created folder: demo/testcases created folder: demo/testsuites created folder: demo/reports created file: demo/debugtalk.py created file: demo/.env \u76f8\u5173\u53c2\u8003 \u00b6 \u300aHttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u673a\u5236\uff08\u5df2\u8fc7\u671f\uff09\u300b \u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u8be6\u7ec6\u793a\u4f8b\uff1a HttpRunner/tests","title":"\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42"},{"location":"prepare/testcase-layer/#_1","text":"","title":"\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42"},{"location":"prepare/testcase-layer/#_2","text":"\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9886\u57df\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u53ef\u7ef4\u62a4\u6027\u662f\u6781\u5176\u91cd\u8981\u7684\u56e0\u7d20\uff0c\u76f4\u63a5\u5173\u7cfb\u5230\u81ea\u52a8\u5316\u6d4b\u8bd5\u80fd\u5426\u6301\u7eed\u6709\u6548\u5730\u5728\u9879\u76ee\u4e2d\u5f00\u5c55\u3002 \u6982\u62ec\u6765\u8bf4\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u673a\u5236\u7684\u6838\u5fc3\u662f\u5c06\u63a5\u53e3\u5b9a\u4e49\u3001\u6d4b\u8bd5\u6b65\u9aa4\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u6d4b\u8bd5\u573a\u666f\u8fdb\u884c\u5206\u79bb\uff0c\u5355\u72ec\u8fdb\u884c\u63cf\u8ff0\u548c\u7ef4\u62a4\uff0c\u4ece\u800c\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ef4\u62a4\u6210\u672c\u3002 \u903b\u8f91\u5173\u7cfb\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u540c\u65f6\uff0c\u5f3a\u8c03\u5982\u4e0b\u51e0\u70b9\u6838\u5fc3\u6982\u5ff5\uff1a \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5e94\u8be5\u662f\u5b8c\u6574\u4e14\u72ec\u7acb\u7684\uff0c\u6bcf\u6761\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684 \u6d4b\u8bd5\u7528\u4f8b\u662f\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u7684 \u6709\u5e8f \u96c6\u5408\uff0c\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5bf9\u5e94\u4e00\u4e2a API \u7684\u8bf7\u6c42\u63cf\u8ff0 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\uff1b\u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\uff0c\u90a3\u5c31\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b8c\u6210\u4f9d\u8d56\u7684\u5904\u7406 \u5982\u679c\u5bf9\u4e8e\u4e0a\u8ff0\u7b2c\u4e09\u70b9\u611f\u89c9\u96be\u4ee5\u7406\u89e3\uff0c\u4e0d\u59a8\u770b\u4e0b\u4e0a\u56fe\u4e2d\u7684\u793a\u4f8b\uff1a testcase1 \u4f9d\u8d56\u4e8e testcase2\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep12\uff09\u4e2d\u5bf9 testcase2 \u8fdb\u884c\u5f15\u7528\uff0c\u7136\u540e testcase1 \u5c31\u662f\u5b8c\u6574\u4e14\u53ef\u72ec\u7acb\u8fd0\u884c\u7684\uff1b \u5728 testsuite \u4e2d\uff0ctestcase1 \u4e0e testcase2 \u76f8\u4e92\u72ec\u7acb\uff0c\u8fd0\u884c\u987a\u5e8f\u5c31\u4e0d\u518d\u6709\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u4e86\u3002","title":"\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b"},{"location":"prepare/testcase-layer/#_3","text":"\u7406\u89e3\u4e86\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u6765\u770b\u4e0b\u5728\u5206\u5c42\u6a21\u578b\u4e0b\uff0c\u63a5\u53e3\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u63cf\u8ff0\u5f62\u5f0f\u3002","title":"\u5206\u5c42\u63cf\u8ff0\u8be6\u89e3"},{"location":"prepare/testcase-layer/#api","text":"\u4e3a\u4e86\u66f4\u597d\u5730\u5bf9\u63a5\u53e3\u63cf\u8ff0\u8fdb\u884c\u7ba1\u7406\uff0c\u63a8\u8350\u4f7f\u7528\u72ec\u7acb\u7684\u6587\u4ef6\u5bf9\u63a5\u53e3\u63cf\u8ff0\u8fdb\u884c\u5b58\u50a8\uff0c\u5373\u6bcf\u4e2a\u6587\u4ef6\u5bf9\u5e94\u4e00\u4e2a\u63a5\u53e3\u63cf\u8ff0\u3002 \u63a5\u53e3\u5b9a\u4e49\u63cf\u8ff0\u7684\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a name \u3001variables\u3001 request \u3001base_url\u3001validate \u7b49\uff0c\u5f62\u5f0f\u5982\u4e0b\uff1a name : get headers base_url : http://httpbin.org variables : expected_status_code : 200 request : url : /headers method : GET validate : - eq : [ \"status_code\" , $expected_status_code ] - eq : [ content.headers.Host , \"httpbin.org\" ] \u5176\u4e2d\uff0cname \u548c request \u90e8\u5206\u662f\u5fc5\u987b\u7684\uff0crequest \u4e2d\u7684\u63cf\u8ff0\u5f62\u5f0f\u4e0e requests.request \u5b8c\u5168\u76f8\u540c\u3002 \u53e6\u5916\uff0cAPI \u63cf\u8ff0\u9700\u8981\u5c3d\u91cf\u4fdd\u6301\u5b8c\u6574\uff0c\u505a\u5230\u53ef\u4ee5\u5355\u72ec\u8fd0\u884c\u3002\u5982\u679c\u5728\u63a5\u53e3\u63cf\u8ff0\u4e2d\u5b58\u5728\u53d8\u91cf\u5f15\u7528\u7684\u60c5\u51b5\uff0c\u53ef\u5728 variables \u4e2d\u5bf9\u53c2\u6570\u8fdb\u884c\u5b9a\u4e49\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u5b9e\u73b0\u5355\u4e2a\u63a5\u53e3\u7684\u8c03\u8bd5\u3002 $ hrun api/get_headers.yml INFO Start to run testcase: get headers headers INFO GET http://httpbin.org/headers INFO status_code: 200 , response_time ( ms ) : 477 .32 ms, response_length: 157 bytes . ---------------------------------------------------------------------- Ran 1 test in 0 .478s OK","title":"\u63a5\u53e3\u5b9a\u4e49\uff08API\uff09"},{"location":"prepare/testcase-layer/#testcase","text":"","title":"\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09"},{"location":"prepare/testcase-layer/#_4","text":"\u6709\u4e86\u63a5\u53e3\u7684\u5b9a\u4e49\u63cf\u8ff0\u540e\uff0c\u6211\u4eec\u7f16\u5199\u6d4b\u8bd5\u573a\u666f\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\u63a5\u53e3\u5b9a\u4e49\u4e86\u3002 \u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u4e2d\uff0c\u53ef\u901a\u8fc7 api \u5b57\u6bb5\u5f15\u7528\u63a5\u53e3\u5b9a\u4e49\uff0c\u5f15\u7528\u65b9\u5f0f\u4e3a\u5bf9\u5e94 API \u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u5747\u53ef\u3002\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u8def\u5f84\u57fa\u51c6\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u5373 debugtalk.py \u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\u3002 - config : name : \"setup and reset all.\" variables : user_agent : 'iOS/10.3' device_sn : \"TESTCASE_SETUP_XXX\" os_platform : 'ios' app_version : '2.8.6' base_url : \"http://127.0.0.1:5000\" verify : False output : - session_token - test : name : get token (setup) api : api/get_token.yml variables : user_agent : 'iOS/10.3' device_sn : $device_sn os_platform : 'ios' app_version : '2.8.6' extract : - session_token : content.token validate : - eq : [ \"status_code\" , 200 ] - len_eq : [ \"content.token\" , 16 ] - test : name : reset all users api : api/reset_all.yml variables : token : $session_token \u82e5\u9700\u8981\u63a7\u5236\u6216\u6539\u53d8\u63a5\u53e3\u5b9a\u4e49\u4e2d\u7684\u53c2\u6570\u503c\uff0c\u53ef\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u6307\u5b9a variables \u53c2\u6570\uff0c\u8986\u76d6 API \u4e2d\u7684 variables \u5b9e\u73b0\u3002 \u540c\u6837\u5730\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5b9a\u4e49 validate \u540e\uff0c\u4e5f\u4f1a\u4e0e API \u4e2d\u7684 validate \u5408\u5e76\u8986\u76d6\u3002\u56e0\u6b64\u63a8\u8350\u7684\u505a\u6cd5\u662f\uff0c\u5728 API \u5b9a\u4e49\u4e2d\u7684 validate \u53ea\u63cf\u8ff0\u6700\u57fa\u672c\u7684\u6821\u9a8c\u9879\uff0c\u4f8b\u5982 status_code\uff0c\u5bf9\u4e8e\u4e0e\u4e1a\u52a1\u903b\u8f91\u76f8\u5173\u7684\u66f4\u591a\u6821\u9a8c\u9879\uff0c\u5728\u6d4b\u8bd5\u6b65\u9aa4\u7684 validate \u4e2d\u8fdb\u884c\u63cf\u8ff0\u3002","title":"\u5f15\u7528\u63a5\u53e3\u5b9a\u4e49"},{"location":"prepare/testcase-layer/#_5","text":"\u5728\u6d4b\u8bd5\u7528\u4f8b\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\uff0c\u9664\u4e86\u53ef\u4ee5\u5f15\u7528\u63a5\u53e3\u5b9a\u4e49\uff0c\u8fd8\u53ef\u4ee5\u5f15\u7528\u5176\u5b83\u6d4b\u8bd5\u7528\u4f8b\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u907f\u514d\u91cd\u590d\u63cf\u8ff0\u7684\u540c\u65f6\uff0c\u89e3\u51b3\u6d4b\u8bd5\u7528\u4f8b\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u800c\u4fdd\u8bc1\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u662f\u72ec\u7acb\u53ef\u8fd0\u884c\u7684\u3002 \u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u4e2d\uff0c\u53ef\u901a\u8fc7 testcase \u5b57\u6bb5\u5f15\u7528\u5176\u5b83\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5f15\u7528\u65b9\u5f0f\u4e3a\u5bf9\u5e94\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u5747\u53ef\u3002\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u8def\u5f84\u57fa\u51c6\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u5373 debugtalk.py \u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08\"setup and reset all.\"\uff09\u4e2d\uff0c\u5b9e\u73b0\u4e86\u5bf9\u83b7\u53d6 token \u529f\u80fd\u7684\u6d4b\u8bd5\uff1b\u540c\u65f6\uff0c\u5728\u5f88\u591a\u5176\u5b83\u529f\u80fd\u4e2d\u90fd\u4f1a\u4f9d\u8d56\u4e8e\u83b7\u53d6 token \u7684\u529f\u80fd\uff0c\u5982\u679c\u5c06\u8be5\u529f\u80fd\u7684\u6d4b\u8bd5\u6b65\u9aa4\u811a\u672c\u62f7\u8d1d\u5230\u5176\u5b83\u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u90a3\u4e48\u5c31\u4f1a\u5b58\u5728\u5927\u91cf\u91cd\u590d\uff0c\u5f53\u9700\u8981\u5bf9\u8be5\u90e8\u5206\u8fdb\u884c\u4fee\u6539\u65f6\u5c31\u9700\u8981\u4fee\u6539\u6240\u6709\u5730\u65b9\uff0c\u663e\u7136\u4e0d\u4fbf\u4e8e\u7ef4\u62a4\u3002 \u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\uff0c\u5728\u5176\u5b83\u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08\u5982\u521b\u5efa\u7528\u6237\uff09\u4e2d\uff0c\u5f15\u7528\u83b7\u53d6 token \u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08testcases/setup.yml\uff09\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff0c\u4ece\u800c\u521b\u5efa\u7528\u6237\uff08\"create user and check result.\"\uff09\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u53d8\u5f97\u72ec\u7acb\u53ef\u8fd0\u884c\u4e86\u3002 - config : name : \"create user and check result.\" id : create_user base_url : \"http://127.0.0.1:5000\" variables : uid : 9001 device_sn : \"TESTCASE_CREATE_XXX\" output : - session_token - test : name : setup and reset all (override) for $device_sn. testcase : testcases/setup.yml output : - session_token - test : name : create user and check result. variables : token : $session_token testcase : testcases/deps/check_and_create.yml","title":"\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b"},{"location":"prepare/testcase-layer/#testsuite","text":"\u5f53\u6d4b\u8bd5\u7528\u4f8b\u6570\u91cf\u6bd4\u8f83\u591a\u4ee5\u540e\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u548c\u5b9e\u73b0\u6279\u91cf\u8fd0\u884c\uff0c\u901a\u5e38\u9700\u8981\u4f7f\u7528\u6d4b\u8bd5\u7528\u4f8b\u96c6\u6765\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u7ec4\u7ec7\u3002 \u5728\u524d\u6587\u7684\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b\u4e2d\u4e5f\u5f3a\u8c03\u4e86\uff0c\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\uff1b\u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\uff0c\u90a3\u5c31\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b8c\u6210\u4f9d\u8d56\u7684\u5904\u7406\u3002 \u56e0\u4e3a\u662f \u65e0\u5e8f \u96c6\u5408\uff0c\u56e0\u6b64\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u63cf\u8ff0\u5f62\u5f0f\u4f1a\u4e0e\u6d4b\u8bd5\u7528\u4f8b\u6709\u4e9b\u4e0d\u540c\uff0c\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u96c6\u6587\u4ef6\u4e2d\uff0c\u7b2c\u4e00\u5c42\u7ea7\u5b58\u5728\u4e24\u7c7b\u5b57\u6bb5\uff1a config: \u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u603b\u4f53\u914d\u7f6e\u53c2\u6570 testcases: \u503c\u4e3a\u5b57\u5178\u7ed3\u6784\uff08\u65e0\u5e8f\uff09\uff0ckey \u4e3a\u6d4b\u8bd5\u7528\u4f8b\u7684\u540d\u79f0\uff0cvalue \u4e3a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5185\u5bb9\uff1b\u5728\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u65f6\u4e5f\u53ef\u4ee5\u6307\u5b9a variables\uff0c\u5b9e\u73b0\u5bf9\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u4e2d variables \u7684\u8986\u76d6\u3002","title":"\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09"},{"location":"prepare/testcase-layer/#_6","text":"config : name : create users with uid variables : device_sn : ${gen_random_string(15)} var_a : ${gen_random_string(5)} var_b : $var_a base_url : \"http://127.0.0.1:5000\" testcases : create user 1000 and check result. : testcase : testcases/create_user.yml variables : uid : 1000 var_c : ${gen_random_string(5)} var_d : $var_c create user 1001 and check result. : testcase : testcases/create_user.yml variables : uid : 1001 var_c : ${gen_random_string(5)} var_d : $var_c","title":"\u975e\u53c2\u6570\u5316\u573a\u666f"},{"location":"prepare/testcase-layer/#parameters","text":"\u5bf9\u4e8e\u53c2\u6570\u5316\u573a\u666f\uff0c\u53ef\u901a\u8fc7 parameters \u5b9e\u73b0\uff0c\u63cf\u8ff0\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\u3002 config : name : create users with parameters variables : device_sn : ${gen_random_string(15)} base_url : \"http://127.0.0.1:5000\" testcases : create user $uid and check result for $device_sn. : testcase : testcases/create_user.yml variables : uid : 1000 device_sn : TESTSUITE_XXX parameters : uid : [ 101 , 102 , 103 ] device_sn : [ TESTSUITE_X1 , TESTSUITE_X2 ] \u53c2\u6570\u5316\u540e\uff0cparameters \u4e2d\u7684\u53d8\u91cf\u5c06\u91c7\u7528\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\u5f62\u6210\u53c2\u6570\u5217\u8868\uff0c\u4f9d\u6b21\u8986\u76d6 variables \u4e2d\u7684\u53c2\u6570\uff0c\u9a71\u52a8\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u3002","title":"\u53c2\u6570\u5316\u573a\u666f\uff08parameters\uff09"},{"location":"prepare/testcase-layer/#_7","text":"\u5728\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8fdb\u884c\u7ec4\u7ec7\u7ba1\u7406\u65f6\uff0c\u5bf9\u4e8e\u6587\u4ef6\u7684\u5b58\u50a8\u4f4d\u7f6e\u5747\u6ca1\u6709\u8981\u6c42\u548c\u9650\u5236\uff0c\u5728\u5f15\u7528\u65f6\u53ea\u9700\u8981\u6307\u5b9a\u5bf9\u5e94\u7684\u6587\u4ef6\u8def\u5f84\u5373\u53ef\u3002\u4f46\u4ece\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\u7684\u89d2\u5ea6\uff0c\u6700\u597d\u662f\u6309\u7167\u63a8\u8350\u7684\u6587\u4ef6\u5939\u540d\u79f0\u8fdb\u884c\u5b58\u50a8\u7ba1\u7406\uff0c\u5e76\u53ef\u901a\u8fc7\u5b50\u76ee\u5f55\u5b9e\u73b0\u9879\u76ee\u6a21\u5757\u5206\u7c7b\u7ba1\u7406\u3002 \u63a8\u8350\u7684\u65b9\u5f0f\u6c47\u603b\u5982\u4e0b\uff1a debugtalk.py \u653e\u7f6e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\uff0c\u5047\u8bbe\u4e3a PRJ_ROOT_DIR .env \u653e\u7f6e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\uff0c\u8def\u5f84\u4e3a PRJ_ROOT_DIR/.env \u63a5\u53e3\u5b9a\u4e49\uff08API\uff09\u653e\u7f6e\u5728 PRJ_ROOT_DIR/api/ \u76ee\u5f55\u4e0b \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u653e\u7f6e\u5728 PRJ_ROOT_DIR/testcases/ \u76ee\u5f55\u4e0b \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u6587\u4ef6\u5fc5\u987b\u653e\u7f6e\u5728 PRJ_ROOT_DIR/testsuites/ \u76ee\u5f55\u4e0b data \u6587\u4ef6\u5939\uff1a\u5b58\u50a8\u53c2\u6570\u5316\u6587\u4ef6\uff0c\u6216\u8005\u9879\u76ee\u4f9d\u8d56\u7684\u6587\u4ef6\uff0c\u8def\u5f84\u4e3a PRJ_ROOT_DIR/data/ reports \u6587\u4ef6\u5939\uff1a\u5b58\u50a8 \bHTML \u6d4b\u8bd5\u62a5\u544a\uff0c\u751f\u6210\u8def\u5f84\u4e3a PRJ_ROOT_DIR/reports/ \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a $ tree tests tests \u251c\u2500\u2500 .env \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 app_version.csv \u2502 \u2514\u2500\u2500 account.csv \u251c\u2500\u2500 api \u2502 \u251c\u2500\u2500 create_user.yml \u2502 \u251c\u2500\u2500 get_headers.yml \u2502 \u251c\u2500\u2500 get_token.yml \u2502 \u251c\u2500\u2500 get_user.yml \u2502 \u2514\u2500\u2500 reset_all.yml \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 testcases \u2502 \u251c\u2500\u2500 create_user.yml \u2502 \u251c\u2500\u2500 deps \u2502 \u2502 \u2514\u2500\u2500 check_and_create.yml \u2502 \u2514\u2500\u2500 setup.yml \u2514\u2500\u2500 testsuites \u251c\u2500\u2500 create_users.yml \u2514\u2500\u2500 create_users_with_parameters.yml \u9879\u76ee\u811a\u624b\u67b6 \u540c\u65f6\uff0c\u5728 HttpRunner \u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u811a\u624b\u67b6\u5de5\u5177\uff0c\u53ef\u4ee5\u5feb\u901f\u521b\u5efa\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\u3002\u8be5\u60f3\u6cd5\u6765\u6e90\u4e8e Django \u7684 django-admin.py startproject project_name \u3002 \u4f7f\u7528\u65b9\u5f0f\u4e5f\u4e0e Django \u7c7b\u4f3c\uff0c\u53ea\u9700\u8981\u901a\u8fc7 --startproject \u6307\u5b9a\u65b0\u9879\u76ee\u7684\u540d\u79f0\u5373\u53ef\u3002 $ hrun --startproject demo Start to create new project: demo CWD: /Users/debugtalk/MyProjects/examples created folder: demo created folder: demo/api created folder: demo/testcases created folder: demo/testsuites created folder: demo/reports created file: demo/debugtalk.py created file: demo/.env","title":"\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u7ba1\u7406 &amp;&amp; \u811a\u624b\u67b6\u5de5\u5177"},{"location":"prepare/testcase-layer/#_8","text":"\u300aHttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u673a\u5236\uff08\u5df2\u8fc7\u671f\uff09\u300b \u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u8be6\u7ec6\u793a\u4f8b\uff1a HttpRunner/tests","title":"\u76f8\u5173\u53c2\u8003"},{"location":"prepare/testcase-structure/","text":"\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7 \u00b6 YAML & JSON \u00b6 HttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u652f\u6301\u4e24\u79cd\u6587\u4ef6\u683c\u5f0f\uff1aYAML \u548c JSON\u3002 JSON \u548c YAML \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u5b8c\u5168\u7b49\u4ef7\uff0c\u5305\u542b\u7684\u4fe1\u606f\u5185\u5bb9\u4e5f\u5b8c\u5168\u76f8\u540c\u3002 \u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u63a8\u8350\u4f7f\u7528 JSON \u683c\u5f0f\uff0c\u867d\u7136\u63cf\u8ff0\u5f62\u5f0f\u4e0a\u7a0d\u663e\u7d2f\u8d58\uff0c\u4f46\u662f\u4e0d\u5bb9\u6613\u51fa\u9519\uff08\u5927\u591a\u7f16\u8f91\u5668\u90fd\u5177\u6709 JSON \u683c\u5f0f\u7684\u68c0\u6d4b\u529f\u80fd\uff09\uff1b\u540c\u65f6\uff0cHttpRunner \u4e5f\u5185\u7f6e\u4e86 JSON \u683c\u5f0f\u6b63\u786e\u6027\u68c0\u6d4b\u548c\u6837\u5f0f\u7f8e\u5316\u529f\u80fd\uff0c\u8be6\u60c5\u53ef\u67e5\u770b \u300aValidate & Prettify\u300b \u3002 \u5bf9\u4e8e\u719f\u6089 YAML \u683c\u5f0f\u7684\u4eba\u6765\u8bf4\uff0c\u7f16\u5199\u7ef4\u62a4 YAML \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4f1a\u66f4\u7b80\u6d01\uff0c\u4f46\u524d\u63d0\u662f\u8981\u4fdd\u8bc1 YAML \u683c\u5f0f\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u3002 \u5bf9\u4e8e\u4e24\u79cd\u683c\u5f0f\u7684\u5c55\u793a\u5dee\u5f02\uff0c\u53ef\u4ee5\u5bf9\u6bd4\u67e5\u770b demo-quickstart-6.json \u548c demo-quickstart-6.yml \u83b7\u53d6\u521d\u6b65\u7684\u5370\u8c61\u3002 \u540e\u9762\u4e3a\u4e86\u66f4\u6e05\u6670\u7684\u63cf\u8ff0\uff0c\u7edf\u4e00\u91c7\u7528 JSON \u683c\u5f0f\u4f5c\u4e3a\u793a\u4f8b\u3002 \u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784 \u00b6 \u5728 HttpRunner \u4e2d\uff0c\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7\u4e3b\u8981\u57fa\u4e8e\u4e09\u4e2a\u6982\u5ff5\uff1a \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\uff1a\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5305\u542b\u5355\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff08 YAML/JSON \uff09\u6587\u4ef6 \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\uff1a\u5bf9\u5e94\u4e00\u4e2a YAML/JSON \u6587\u4ef6\uff0c\u5305\u542b\u5355\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4 \u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\uff1a\u5bf9\u5e94 YAML/JSON \u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a test \uff0c\b\u63cf\u8ff0\u5355\u6b21\u63a5\u53e3\u6d4b\u8bd5\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u5305\u62ec\u53d1\u8d77\u63a5\u53e3\u8bf7\u6c42\u3001\u89e3\u6790\u54cd\u5e94\u7ed3\u679c\u3001\u6821\u9a8c\u7ed3\u679c\u7b49 \u5bf9\u4e8e\u5355\u4e2a YAML/JSON \u6587\u4ef6\u6765\u8bf4\uff0c\u6570\u636e\u5b58\u50a8\u7ed3\u6784\u4e3a list of dict \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u4e00\u4e2a\u5168\u5c40\u914d\u7f6e\u9879\uff08config\uff09\u548c\u82e5\u5e72\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09\u3002 \u5177\u4f53\u5730\uff1a config\uff1a\u4f5c\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5168\u5c40\u914d\u7f6e\u9879 test\uff1a\u5bf9\u5e94\u5355\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5b58\u5728\u987a\u5e8f\u5173\u7cfb\uff0c\u8fd0\u884c\u65f6\u5c06\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u8fd0\u884c\u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4 \u5bf9\u5e94\u7684 JSON \u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a [ { \"config\" : { ... } }, { \"test\" : { ... } }, { \"test\" : { ... } } ] \u53d8\u91cf\u7a7a\u95f4\uff08context\uff09\u4f5c\u7528\u57df \u00b6 \u5728\u6d4b\u8bd5\u7528\u4f8b\u5185\u90e8\uff0cHttpRunner \u5212\u5206\u4e86\u4e24\u5c42\u53d8\u91cf\u7a7a\u95f4\u4f5c\u7528\u57df\uff08context\uff09\u3002 config\uff1a\u4f5c\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5168\u5c40\u914d\u7f6e\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff1b test\uff1a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u7a7a\u95f4\uff08context\uff09\u4f1a\u7ee7\u627f\u6216\u8986\u76d6 config \u4e2d\u5b9a\u4e49\u7684\u5185\u5bb9\uff1b \u82e5\u67d0\u53d8\u91cf\u5728 config \u4e2d\u5b9a\u4e49\u4e86\uff0c\u5728\u67d0 test \u4e2d\u6ca1\u6709\u5b9a\u4e49\uff0c\u5219\u8be5 test \u4f1a\u7ee7\u627f\u8be5\u53d8\u91cf \u82e5\u67d0\u53d8\u91cf\u5728 config \u548c\u67d0 test \u4e2d\u90fd\u5b9a\u4e49\u4e86\uff0c\u5219\u8be5 test \u4e2d\u4f7f\u7528\u81ea\u5df1\u5b9a\u4e49\u7684\u53d8\u91cf\u503c \u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09\u7684\u53d8\u91cf\u7a7a\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u4e92\u4e0d\u5f71\u54cd\uff1b \u5982\u9700\u5728\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09\u4e2d\u4f20\u9012\u53c2\u6570\u503c\uff0c\u5219\u9700\u8981\u4f7f\u7528 extract \u5173\u952e\u5b57\uff0c\u5e76\u4e14\u53ea\u80fd\u4ece\u524d\u5f80\u540e\u4f20\u9012 config \u00b6 \"config\" : { \"name\" : \"testcase description\" , \"parameters\" : [ { \"user_agent\" : [ \"iOS/10.1\" , \"iOS/10.2\" , \"iOS/10.3\" ]}, { \"app_version\" : \"${P(app_version.csv)}\" }, { \"os_platform\" : \"${get_os_platform()}\" } ], \"variables\" : [ { \"user_agent\" : \"iOS/10.3\" }, { \"device_sn\" : \"${gen_random_string(15)}\" }, { \"os_platform\" : \"ios\" } ], \"request\" : { \"base_url\" : \"http://127.0.0.1:5000\" , \"headers\" : { \"Content-Type\" : \"application/json\" , \"device_sn\" : \"$device_sn\" } }, \"output\" : [ \"token\" ] } Key required? format descrption name Yes string \u6d4b\u8bd5\u7528\u4f8b\u7684\u540d\u79f0\uff0c\u5728\u6d4b\u8bd5\u62a5\u544a\u4e2d\u5c06\u4f5c\u4e3a\u6807\u9898 variables No list of dict \u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b parameters No list of dict \u5168\u5c40\u53c2\u6570\uff0c\u7528\u4e8e\u5b9e\u73b0\u6570\u636e\u5316\u9a71\u52a8\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b request No dict request \u7684\u516c\u5171\u53c2\u6570\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b\uff1b\u5e38\u7528\u53c2\u6570\u5305\u62ec base_url \u548c headers request Key required? format descrption base_url No string \u6d4b\u8bd5\u7528\u4f8b\u8bf7\u6c42 URL \u7684\u516c\u5171 host\uff0c\u6307\u5b9a\u8be5\u53c2\u6570\u540e\uff0ctest \u4e2d\u7684 url \u53ef\u4ee5\u53ea\u63cf\u8ff0 path \u90e8\u5206 headers No dict request \u4e2d headers \u7684\u516c\u5171\u53c2\u6570\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b output No list \u6574\u4e2a\u7528\u4f8b\u8f93\u51fa\u7684\u53c2\u6570\u5217\u8868\uff0c\u53ef\u8f93\u51fa\u7684\u53c2\u6570\u5305\u62ec\u516c\u5171\u7684 variable \u548c extract \u7684\u53c2\u6570; \u5728 log-level \u4e3a debug \u6a21\u5f0f\u4e0b\uff0c\u4f1a\u5728 terminal \u4e2d\u6253\u5370\u51fa\u53c2\u6570\u5185\u5bb9 test \u00b6 \"test\" : { \"name\" : \"get token with $user_agent, $os_platform, $app_version\" , \"request\" : { \"url\" : \"/api/get-token\" , \"method\" : \"POST\" , \"headers\" : { \"app_version\" : \"$app_version\" , \"os_platform\" : \"$os_platform\" , \"user_agent\" : \"$user_agent\" }, \"json\" : { \"sign\" : \"${get_sign($user_agent, $device_sn, $os_platform, $app_version)}\" }, \"extract\" : [ { \"token\" : \"content.token\" } ], \"validate\" : [ { \"eq\" : [ \"status_code\" , 200 ]}, { \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]}, { \"eq\" : [ \"content.success\" , true ]} ], \"setup_hooks\" : [], \"teardown_hooks\" : [] } } Key required? format descrption name Yes string \u6d4b\u8bd5\u6b65\u9aa4\u7684\u540d\u79f0\uff0c\u5728\u6d4b\u8bd5\u62a5\u544a\u4e2d\u5c06\u4f5c\u4e3a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u540d\u79f0 request Yes dict HTTP \u8bf7\u6c42\u7684\u8be6\u7ec6\u5185\u5bb9\uff1b\u53ef\u7528\u53c2\u6570\u8be6\u89c1 python-requests \u5b98\u65b9\u6587\u6863 variables No list of dict \u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4 extract No list \u4ece\u5f53\u524d HTTP \u8bf7\u6c42\u7684\u54cd\u5e94\u7ed3\u679c\u4e2d\u63d0\u53d6\u53c2\u6570\uff0c\u5e76\u4fdd\u5b58\u5230\u53c2\u6570\u53d8\u91cf\u4e2d\uff08\u4f8b\u5982 token \uff09\uff0c\u540e\u7eed\u6d4b\u8bd5\u7528\u4f8b\u53ef\u901a\u8fc7 $token \u7684\u5f62\u5f0f\u8fdb\u884c\u5f15\u7528 validate No list \u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u7684\u7ed3\u679c\u6821\u9a8c\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7528\u4e8e\u5b9e\u73b0\u5bf9\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u7ed3\u679c\u7684\u6821\u9a8c setup_hooks No list \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u524d\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c teardown_hooks No list \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u540e\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u6237\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c extract \u652f\u6301\u591a\u79cd\u63d0\u53d6\u65b9\u5f0f\uff1a \u54cd\u5e94\u7ed3\u679c\u4e3a JSON \u7ed3\u6784\uff0c\u53ef\u91c7\u7528 . \u8fd0\u7b97\u7b26\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982 headers.Content-Type \u3001 content.success \uff1b \u54cd\u5e94\u7ed3\u679c\u4e3a text/html \u7ed3\u6784\uff0c\u53ef\u91c7\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982 blog-motto\\\">(.*)</h2> \u8be6\u60c5\u53ef\u9605\u8bfb \u300aApiTestEngine\uff0c\u4e0d\u518d\u5c40\u9650\u4e8eAPI\u7684\u6d4b\u8bd5\u300b validate \u652f\u6301\u4e24\u79cd\u683c\u5f0f\uff1a {\"comparator_name\": [check_item, expect_value]} {\"check\": check_item, \"comparator\": comparator_name, \"expect\": expect_value} hooks setup_hooks \u51fd\u6570\u653e\u7f6e\u4e8e debugtalk.py \u4e2d\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u4e09\u4e2a\u53c2\u6570\uff1a method: \u8bf7\u6c42\u65b9\u6cd5\uff0ce.g. GET, POST, PUT url: \u8bf7\u6c42 URL kwargs: request \u7684\u53c2\u6570\u5b57\u5178 teardown_hooks \u51fd\u6570\u653e\u7f6e\u4e8e debugtalk.py \u4e2d\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u53c2\u6570\uff1a resp_obj: requests.Response \u5b9e\u4f8b \u5173\u4e8e setup_hooks \u548c teardown_hooks \u7684\u66f4\u591a\u5185\u5bb9\uff0c\u8bf7\u53c2\u8003 \u300ahook \u673a\u5236\u300b \u3002","title":"\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7"},{"location":"prepare/testcase-structure/#_1","text":"","title":"\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7"},{"location":"prepare/testcase-structure/#yaml-json","text":"HttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u652f\u6301\u4e24\u79cd\u6587\u4ef6\u683c\u5f0f\uff1aYAML \u548c JSON\u3002 JSON \u548c YAML \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u5b8c\u5168\u7b49\u4ef7\uff0c\u5305\u542b\u7684\u4fe1\u606f\u5185\u5bb9\u4e5f\u5b8c\u5168\u76f8\u540c\u3002 \u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u63a8\u8350\u4f7f\u7528 JSON \u683c\u5f0f\uff0c\u867d\u7136\u63cf\u8ff0\u5f62\u5f0f\u4e0a\u7a0d\u663e\u7d2f\u8d58\uff0c\u4f46\u662f\u4e0d\u5bb9\u6613\u51fa\u9519\uff08\u5927\u591a\u7f16\u8f91\u5668\u90fd\u5177\u6709 JSON \u683c\u5f0f\u7684\u68c0\u6d4b\u529f\u80fd\uff09\uff1b\u540c\u65f6\uff0cHttpRunner \u4e5f\u5185\u7f6e\u4e86 JSON \u683c\u5f0f\u6b63\u786e\u6027\u68c0\u6d4b\u548c\u6837\u5f0f\u7f8e\u5316\u529f\u80fd\uff0c\u8be6\u60c5\u53ef\u67e5\u770b \u300aValidate & Prettify\u300b \u3002 \u5bf9\u4e8e\u719f\u6089 YAML \u683c\u5f0f\u7684\u4eba\u6765\u8bf4\uff0c\u7f16\u5199\u7ef4\u62a4 YAML \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4f1a\u66f4\u7b80\u6d01\uff0c\u4f46\u524d\u63d0\u662f\u8981\u4fdd\u8bc1 YAML \u683c\u5f0f\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u3002 \u5bf9\u4e8e\u4e24\u79cd\u683c\u5f0f\u7684\u5c55\u793a\u5dee\u5f02\uff0c\u53ef\u4ee5\u5bf9\u6bd4\u67e5\u770b demo-quickstart-6.json \u548c demo-quickstart-6.yml \u83b7\u53d6\u521d\u6b65\u7684\u5370\u8c61\u3002 \u540e\u9762\u4e3a\u4e86\u66f4\u6e05\u6670\u7684\u63cf\u8ff0\uff0c\u7edf\u4e00\u91c7\u7528 JSON \u683c\u5f0f\u4f5c\u4e3a\u793a\u4f8b\u3002","title":"YAML &amp; JSON"},{"location":"prepare/testcase-structure/#_2","text":"\u5728 HttpRunner \u4e2d\uff0c\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7\u4e3b\u8981\u57fa\u4e8e\u4e09\u4e2a\u6982\u5ff5\uff1a \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\uff1a\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5305\u542b\u5355\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff08 YAML/JSON \uff09\u6587\u4ef6 \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\uff1a\u5bf9\u5e94\u4e00\u4e2a YAML/JSON \u6587\u4ef6\uff0c\u5305\u542b\u5355\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4 \u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\uff1a\u5bf9\u5e94 YAML/JSON \u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a test \uff0c\b\u63cf\u8ff0\u5355\u6b21\u63a5\u53e3\u6d4b\u8bd5\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u5305\u62ec\u53d1\u8d77\u63a5\u53e3\u8bf7\u6c42\u3001\u89e3\u6790\u54cd\u5e94\u7ed3\u679c\u3001\u6821\u9a8c\u7ed3\u679c\u7b49 \u5bf9\u4e8e\u5355\u4e2a YAML/JSON \u6587\u4ef6\u6765\u8bf4\uff0c\u6570\u636e\u5b58\u50a8\u7ed3\u6784\u4e3a list of dict \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u4e00\u4e2a\u5168\u5c40\u914d\u7f6e\u9879\uff08config\uff09\u548c\u82e5\u5e72\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09\u3002 \u5177\u4f53\u5730\uff1a config\uff1a\u4f5c\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5168\u5c40\u914d\u7f6e\u9879 test\uff1a\u5bf9\u5e94\u5355\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5b58\u5728\u987a\u5e8f\u5173\u7cfb\uff0c\u8fd0\u884c\u65f6\u5c06\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u8fd0\u884c\u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4 \u5bf9\u5e94\u7684 JSON \u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a [ { \"config\" : { ... } }, { \"test\" : { ... } }, { \"test\" : { ... } } ]","title":"\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784"},{"location":"prepare/testcase-structure/#context","text":"\u5728\u6d4b\u8bd5\u7528\u4f8b\u5185\u90e8\uff0cHttpRunner \u5212\u5206\u4e86\u4e24\u5c42\u53d8\u91cf\u7a7a\u95f4\u4f5c\u7528\u57df\uff08context\uff09\u3002 config\uff1a\u4f5c\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5168\u5c40\u914d\u7f6e\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff1b test\uff1a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u7a7a\u95f4\uff08context\uff09\u4f1a\u7ee7\u627f\u6216\u8986\u76d6 config \u4e2d\u5b9a\u4e49\u7684\u5185\u5bb9\uff1b \u82e5\u67d0\u53d8\u91cf\u5728 config \u4e2d\u5b9a\u4e49\u4e86\uff0c\u5728\u67d0 test \u4e2d\u6ca1\u6709\u5b9a\u4e49\uff0c\u5219\u8be5 test \u4f1a\u7ee7\u627f\u8be5\u53d8\u91cf \u82e5\u67d0\u53d8\u91cf\u5728 config \u548c\u67d0 test \u4e2d\u90fd\u5b9a\u4e49\u4e86\uff0c\u5219\u8be5 test \u4e2d\u4f7f\u7528\u81ea\u5df1\u5b9a\u4e49\u7684\u53d8\u91cf\u503c \u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09\u7684\u53d8\u91cf\u7a7a\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u4e92\u4e0d\u5f71\u54cd\uff1b \u5982\u9700\u5728\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08test\uff09\u4e2d\u4f20\u9012\u53c2\u6570\u503c\uff0c\u5219\u9700\u8981\u4f7f\u7528 extract \u5173\u952e\u5b57\uff0c\u5e76\u4e14\u53ea\u80fd\u4ece\u524d\u5f80\u540e\u4f20\u9012","title":"\u53d8\u91cf\u7a7a\u95f4\uff08context\uff09\u4f5c\u7528\u57df"},{"location":"prepare/testcase-structure/#config","text":"\"config\" : { \"name\" : \"testcase description\" , \"parameters\" : [ { \"user_agent\" : [ \"iOS/10.1\" , \"iOS/10.2\" , \"iOS/10.3\" ]}, { \"app_version\" : \"${P(app_version.csv)}\" }, { \"os_platform\" : \"${get_os_platform()}\" } ], \"variables\" : [ { \"user_agent\" : \"iOS/10.3\" }, { \"device_sn\" : \"${gen_random_string(15)}\" }, { \"os_platform\" : \"ios\" } ], \"request\" : { \"base_url\" : \"http://127.0.0.1:5000\" , \"headers\" : { \"Content-Type\" : \"application/json\" , \"device_sn\" : \"$device_sn\" } }, \"output\" : [ \"token\" ] } Key required? format descrption name Yes string \u6d4b\u8bd5\u7528\u4f8b\u7684\u540d\u79f0\uff0c\u5728\u6d4b\u8bd5\u62a5\u544a\u4e2d\u5c06\u4f5c\u4e3a\u6807\u9898 variables No list of dict \u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b parameters No list of dict \u5168\u5c40\u53c2\u6570\uff0c\u7528\u4e8e\u5b9e\u73b0\u6570\u636e\u5316\u9a71\u52a8\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b request No dict request \u7684\u516c\u5171\u53c2\u6570\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b\uff1b\u5e38\u7528\u53c2\u6570\u5305\u62ec base_url \u548c headers request Key required? format descrption base_url No string \u6d4b\u8bd5\u7528\u4f8b\u8bf7\u6c42 URL \u7684\u516c\u5171 host\uff0c\u6307\u5b9a\u8be5\u53c2\u6570\u540e\uff0ctest \u4e2d\u7684 url \u53ef\u4ee5\u53ea\u63cf\u8ff0 path \u90e8\u5206 headers No dict request \u4e2d headers \u7684\u516c\u5171\u53c2\u6570\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b output No list \u6574\u4e2a\u7528\u4f8b\u8f93\u51fa\u7684\u53c2\u6570\u5217\u8868\uff0c\u53ef\u8f93\u51fa\u7684\u53c2\u6570\u5305\u62ec\u516c\u5171\u7684 variable \u548c extract \u7684\u53c2\u6570; \u5728 log-level \u4e3a debug \u6a21\u5f0f\u4e0b\uff0c\u4f1a\u5728 terminal \u4e2d\u6253\u5370\u51fa\u53c2\u6570\u5185\u5bb9","title":"config"},{"location":"prepare/testcase-structure/#test","text":"\"test\" : { \"name\" : \"get token with $user_agent, $os_platform, $app_version\" , \"request\" : { \"url\" : \"/api/get-token\" , \"method\" : \"POST\" , \"headers\" : { \"app_version\" : \"$app_version\" , \"os_platform\" : \"$os_platform\" , \"user_agent\" : \"$user_agent\" }, \"json\" : { \"sign\" : \"${get_sign($user_agent, $device_sn, $os_platform, $app_version)}\" }, \"extract\" : [ { \"token\" : \"content.token\" } ], \"validate\" : [ { \"eq\" : [ \"status_code\" , 200 ]}, { \"eq\" : [ \"headers.Content-Type\" , \"application/json\" ]}, { \"eq\" : [ \"content.success\" , true ]} ], \"setup_hooks\" : [], \"teardown_hooks\" : [] } } Key required? format descrption name Yes string \u6d4b\u8bd5\u6b65\u9aa4\u7684\u540d\u79f0\uff0c\u5728\u6d4b\u8bd5\u62a5\u544a\u4e2d\u5c06\u4f5c\u4e3a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u540d\u79f0 request Yes dict HTTP \u8bf7\u6c42\u7684\u8be6\u7ec6\u5185\u5bb9\uff1b\u53ef\u7528\u53c2\u6570\u8be6\u89c1 python-requests \u5b98\u65b9\u6587\u6863 variables No list of dict \u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4 extract No list \u4ece\u5f53\u524d HTTP \u8bf7\u6c42\u7684\u54cd\u5e94\u7ed3\u679c\u4e2d\u63d0\u53d6\u53c2\u6570\uff0c\u5e76\u4fdd\u5b58\u5230\u53c2\u6570\u53d8\u91cf\u4e2d\uff08\u4f8b\u5982 token \uff09\uff0c\u540e\u7eed\u6d4b\u8bd5\u7528\u4f8b\u53ef\u901a\u8fc7 $token \u7684\u5f62\u5f0f\u8fdb\u884c\u5f15\u7528 validate No list \u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u7684\u7ed3\u679c\u6821\u9a8c\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7528\u4e8e\u5b9e\u73b0\u5bf9\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u7ed3\u679c\u7684\u6821\u9a8c setup_hooks No list \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u524d\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c teardown_hooks No list \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u540e\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u6237\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c extract \u652f\u6301\u591a\u79cd\u63d0\u53d6\u65b9\u5f0f\uff1a \u54cd\u5e94\u7ed3\u679c\u4e3a JSON \u7ed3\u6784\uff0c\u53ef\u91c7\u7528 . \u8fd0\u7b97\u7b26\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982 headers.Content-Type \u3001 content.success \uff1b \u54cd\u5e94\u7ed3\u679c\u4e3a text/html \u7ed3\u6784\uff0c\u53ef\u91c7\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982 blog-motto\\\">(.*)</h2> \u8be6\u60c5\u53ef\u9605\u8bfb \u300aApiTestEngine\uff0c\u4e0d\u518d\u5c40\u9650\u4e8eAPI\u7684\u6d4b\u8bd5\u300b validate \u652f\u6301\u4e24\u79cd\u683c\u5f0f\uff1a {\"comparator_name\": [check_item, expect_value]} {\"check\": check_item, \"comparator\": comparator_name, \"expect\": expect_value} hooks setup_hooks \u51fd\u6570\u653e\u7f6e\u4e8e debugtalk.py \u4e2d\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u4e09\u4e2a\u53c2\u6570\uff1a method: \u8bf7\u6c42\u65b9\u6cd5\uff0ce.g. GET, POST, PUT url: \u8bf7\u6c42 URL kwargs: request \u7684\u53c2\u6570\u5b57\u5178 teardown_hooks \u51fd\u6570\u653e\u7f6e\u4e8e debugtalk.py \u4e2d\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u53c2\u6570\uff1a resp_obj: requests.Response \u5b9e\u4f8b \u5173\u4e8e setup_hooks \u548c teardown_hooks \u7684\u66f4\u591a\u5185\u5bb9\uff0c\u8bf7\u53c2\u8003 \u300ahook \u673a\u5236\u300b \u3002","title":"test"},{"location":"prepare/upload-case/","text":"\u6587\u4ef6\u4e0a\u4f20\u573a\u666f \u00b6 \u5bf9\u4e8e\u4e0a\u4f20\u6587\u4ef6\u7c7b\u578b\u7684\u6d4b\u8bd5\u573a\u666f\uff0cHttpRunner \u96c6\u6210 requests_toolbelt \u5b9e\u73b0\u4e86\u4e0a\u4f20\u529f\u80fd\u3002 \u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u786e\u4fdd\u5df2\u5b89\u88c5\u5982\u4e0b\u4f9d\u8d56\u5e93\uff1a requests_toolbelt filetype \u4f7f\u7528\u5185\u7f6e upload \u5173\u952e\u5b57\uff0c\u53ef\u8f7b\u677e\u5b9e\u73b0\u4e0a\u4f20\u529f\u80fd\uff08\u9002\u7528\u7248\u672c\uff1a2.4.1+\uff09\u3002 - test : name : upload file request : url : http://httpbin.org/upload method : POST headers : Cookie : session=AAA-BBB-CCC upload : file : \"data/file_to_upload\" field1 : \"value1\" field2 : \"value2\" validate : - eq : [ \"status_code\" , 200 ] \u540c\u65f6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u4e4b\u524d\u63cf\u8ff0\u5f62\u5f0f\uff08\u9002\u7528\u7248\u672c\uff1a2.0+\uff09\u3002 - test : name : upload file variables : file : \"data/file_to_upload\" field1 : \"value1\" field2 : \"value2\" m_encoder : ${multipart_encoder(file=$file, field1=$field1, field2=$field2)} request : url : http://httpbin.org/upload method : POST headers : Content-Type : ${multipart_content_type($m_encoder)} Cookie : session=AAA-BBB-CCC data : $m_encoder validate : - eq : [ \"status_code\" , 200 ] \u53c2\u8003\u6848\u4f8b\uff1a httprunner/tests/httpbin/upload.v2.yml","title":"\u6587\u4ef6\u4e0a\u4f20\u573a\u666f"},{"location":"prepare/upload-case/#_1","text":"\u5bf9\u4e8e\u4e0a\u4f20\u6587\u4ef6\u7c7b\u578b\u7684\u6d4b\u8bd5\u573a\u666f\uff0cHttpRunner \u96c6\u6210 requests_toolbelt \u5b9e\u73b0\u4e86\u4e0a\u4f20\u529f\u80fd\u3002 \u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u786e\u4fdd\u5df2\u5b89\u88c5\u5982\u4e0b\u4f9d\u8d56\u5e93\uff1a requests_toolbelt filetype \u4f7f\u7528\u5185\u7f6e upload \u5173\u952e\u5b57\uff0c\u53ef\u8f7b\u677e\u5b9e\u73b0\u4e0a\u4f20\u529f\u80fd\uff08\u9002\u7528\u7248\u672c\uff1a2.4.1+\uff09\u3002 - test : name : upload file request : url : http://httpbin.org/upload method : POST headers : Cookie : session=AAA-BBB-CCC upload : file : \"data/file_to_upload\" field1 : \"value1\" field2 : \"value2\" validate : - eq : [ \"status_code\" , 200 ] \u540c\u65f6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u4e4b\u524d\u63cf\u8ff0\u5f62\u5f0f\uff08\u9002\u7528\u7248\u672c\uff1a2.0+\uff09\u3002 - test : name : upload file variables : file : \"data/file_to_upload\" field1 : \"value1\" field2 : \"value2\" m_encoder : ${multipart_encoder(file=$file, field1=$field1, field2=$field2)} request : url : http://httpbin.org/upload method : POST headers : Content-Type : ${multipart_content_type($m_encoder)} Cookie : session=AAA-BBB-CCC data : $m_encoder validate : - eq : [ \"status_code\" , 200 ] \u53c2\u8003\u6848\u4f8b\uff1a httprunner/tests/httpbin/upload.v2.yml","title":"\u6587\u4ef6\u4e0a\u4f20\u573a\u666f"},{"location":"prepare/validate/","text":"\u6821\u9a8c\u5668\u7528\u6cd5 \u00b6 \u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5305\u542b\u9884\u671f\u7ed3\u679c\u8fd9\u4e48\u4e00\u9879\uff0c\u7528\u4e8e\u8f85\u52a9\u6d4b\u8bd5\u4eba\u5458\u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\u65f6\u5224\u65ad\u7cfb\u7edf\u7684\u529f\u80fd\u662f\u5426\u6b63\u5e38\u3002\u800c\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9\u6d4b\u8bd5\u7528\u4f8b\u81ea\u52a8\u6267\u884c\uff0c\u56e0\u6b64\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u540c\u6837\u9700\u8981\u5305\u542b\u9884\u671f\u7ed3\u679c\u4e00\u9879\uff0c\u53ea\u4e0d\u8fc7\u7cfb\u7edf\u54cd\u5e94\u7ed3\u679c\u4e0d\u518d\u7531\u4eba\u5de5\u6765\u8fdb\u884c\u5224\u65ad\uff0c\u800c\u662f\u4ea4\u7531\u6d4b\u8bd5\u5de5\u5177\u6216\u6846\u67b6\u6765\u5b9e\u73b0\u3002 \u8fd9\u90e8\u5206\u529f\u80fd\u5bf9\u5e94\u7684\u5c31\u662f\u6d4b\u8bd5\u7ed3\u679c\u6821\u9a8c\u5668\uff08validator\uff09\uff0c\u57fa\u672c\u4e0a\u80fd\u79f0\u5f97\u4e0a\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\u6216\u6846\u67b6\u7684\u90fd\u5305\u542b\u8be5\u529f\u80fd\u7279\u6027\u3002 1\u3001\u6821\u9a8c\u5668\u652f\u6301\u4e24\u79cd\u683c\u5f0f \u00b6 - {\"check\": check_item, \"comparator\": comparator_name, \"expect\": expect_value} # \u4e00\u822c\u683c\u5f0f - comparator_name: [check_item, expect_value] # \u7b80\u5316\u683c\u5f0f 2\u3001\u652f\u6301\u81ea\u5b9a\u4e49\u6821\u9a8c\u5668 \u00b6 \u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7684\u6821\u9a8c\u51fd\u6570\uff0c\u9700\u8981\u9075\u5faa\u4e09\u4e2a\u89c4\u5219\uff1a (1)\u81ea\u5b9a\u4e49\u6821\u9a8c\u51fd\u6570\u9700\u653e\u7f6e\u5230debugtalk.py\u4e2d; (2)\u53c2\u6570\u6709\u4e24\u4e2a\uff1a\u7b2c\u4e00\u4e2a\u4e3a\u539f\u59cb\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u4e3a\u539f\u59cb\u6570\u636e\u7ecf\u8fc7\u8fd0\u7b97\u540e\u5f97\u5230\u7684\u9884\u671f\u7ed3\u679c\u503c; (3)\u5728\u6821\u9a8c\u51fd\u6570\u4e2d\u901a\u8fc7assert\u5c06\u5b9e\u9645\u8fd0\u7b97\u7ed3\u679c\u4e0e\u9884\u671f\u7ed3\u679c\u503c\u8fdb\u884c\u6bd4\u8f83; # \u7528\u4f8b - test: name: get token request: url: http://127.0.0.1:5000/api/get-token method: GET validate: - {\"check\": \"status_code\", \"comparator\": \"eq\", \"expect\": 200} - {\"check\": \"status_code\", \"comparator\": \"sum_status_code\", \"expect\": 2} # \u81ea\u5b9a\u4e49\u6821\u9a8c\u5668 def sum_status_code(status_code, expect_sum): \"\"\" sum status code digits e.g. 400 => 4, 201 => 3 \"\"\" sum_value = 0 for digit in str(status_code): sum_value += int(digit) assert sum_value == expect_sum 3\u3001\u652f\u6301\u5728\u6821\u9a8c\u5668\u4e2d\u5f15\u7528\u53d8\u91cf \u00b6 \u5728\u7ed3\u679c\u6821\u9a8c\u5668validate\u4e2d\uff0ccheck\u548cexpect\u5747\u53ef\u5b9e\u73b0\u5b9e\u73b0\u53d8\u91cf\u7684\u5f15\u7528\uff1b\u800c\u5f15\u7528\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u6765\u81ea\u56db\u79cd\u7c7b\u578b\uff1a \uff081\uff09\u5f53\u524dtest\u4e2d\u5b9a\u4e49\u7684variables\uff0c\u4f8b\u5982expect_status_code \uff082\uff09\u5f53\u524dtest\u4e2d\u63d0\u53d6\uff08extract\uff09\u7684\u7ed3\u679c\u53d8\u91cf\uff0c\u4f8b\u5982token \uff083\uff09\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u96c6testset\u4e2d\uff0c\u5148\u524dtest\u4e2d\u63d0\u53d6\uff08extract\uff09\u7684\u7ed3\u679c\u53d8\u91cf \uff084\uff09\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u96c6testset\u4e2d\uff0c\u5168\u5c40\u914d\u7f6econfig\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf - test: name: get token request: url: http://127.0.0.1:5000/api/get_token method: GET variables: - expect_status_code: 200 - token_len: 16 extract: - token: content.token validate: - {\"check\": \"status_code\", \"comparator\": \"eq\", \u201cexpect\": \"$expect_status_code\"} - {\"check\": \"content.token\", \"comparator\": \"len_eq\", \"expect\": \"$token_len\"} - {\"check\": \"$token\", \"comparator\": \"len_eq\", \"expect\": \"$token_len\"} \u57fa\u4e8e\u5f15\u7528\u53d8\u91cf\u7684\u7279\u6548\uff0c\u53ef\u5b9e\u73b0\u66f4\u7075\u6d3b\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\u5668 - test: name: get token request: url: http://127.0.0.1:5000/api/get-token method: GET validate: - {\"check\": \"status_code\", \"comparator\": \"eq\", \"expect\": 200} - {\"check\": \"${sum_status_code(status_code)}\", \"comparator\": \"eq\", \"expect\": 2} # \u81ea\u5b9a\u4e49\u51fd\u6570 def sum_status_code(status_code): \"\"\" sum status code digits e.g. 400 => 4, 201 => 3 \"\"\" sum_value = 0 for digit in str(status_code): sum_value += int(digit) return sum_value 4\u3001\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u63d0\u53d6\u7ed3\u679c\u6821\u9a8c\u5185\u5bb9 \u00b6 \u5047\u8bbe\u63a5\u53e3\u7684\u54cd\u5e94\u7ed3\u679c\u5185\u5bb9\u4e3aLB123abcRB789\uff0c\u90a3\u4e48\u8981\u63d0\u53d6\u51faabc\u90e8\u5206\u8fdb\u884c\u6821\u9a8c\uff1a - test: name: get token request: url: http://127.0.0.1:5000/api/get-token method: GET validate: - {\"check\": \"LB123(.*)RB789\", \"comparator\": \"eq\", \"expect\": \"abc\"} 5\u3001\u9644\u5f55\uff1a\u5185\u7f6e\u6821\u9a8c\u5668 \u00b6 Comparator Description A(check), B(expect) Examples eq, == value is equal A == B 9 eq 9 lt less than A < B 7 lt 8 le less than or equals A <= B 7 le 8, 8 le 8 gt greater than A > B 8 gt 7 ge greater than or equals A >= B 8 ge 7, 8 ge 8 ne not equals A != B 6 ne 9 str_eq string equals str(A) == str(B) 123 str_eq '123' len_eq, count_eq length or count equals len(A) == B 'abc' len_eq 3, [1,2] len_eq 2 len_gt, count_gt length greater than len(A) > B 'abc' len_gt 2, [1,2,3] len_gt 2 len_ge, count_ge length greater than or equals len(A) >= B 'abc' len_ge 3, [1,2,3] len_ge 3 len_lt, count_lt length less than len(A) < B 'abc' len_lt 4, [1,2,3] len_lt 4 len_le, count_le length less than or equals len(A) <= B 'abc' len_le 3, [1,2,3] len_le 3 contains contains [1, 2] contains 1 'abc' contains 'a', [1,2,3] len_lt 4 contained_by contained by A in B 'a' contained_by 'abc', 1 contained_by [1,2] type_match A is instance of B isinstance(A, B) 123 type_match 'int' regex_match regex matches re.match(B, A) 'abcdef' regex 'a startswith starts with A.startswith(B) is True 'abc' startswith 'ab' endswith ends with A.endswith(B) is True 'abc' endswith 'bc'","title":"\u6821\u9a8c\u5668\u7528\u6cd5"},{"location":"prepare/validate/#_1","text":"\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5305\u542b\u9884\u671f\u7ed3\u679c\u8fd9\u4e48\u4e00\u9879\uff0c\u7528\u4e8e\u8f85\u52a9\u6d4b\u8bd5\u4eba\u5458\u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\u65f6\u5224\u65ad\u7cfb\u7edf\u7684\u529f\u80fd\u662f\u5426\u6b63\u5e38\u3002\u800c\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9\u6d4b\u8bd5\u7528\u4f8b\u81ea\u52a8\u6267\u884c\uff0c\u56e0\u6b64\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u540c\u6837\u9700\u8981\u5305\u542b\u9884\u671f\u7ed3\u679c\u4e00\u9879\uff0c\u53ea\u4e0d\u8fc7\u7cfb\u7edf\u54cd\u5e94\u7ed3\u679c\u4e0d\u518d\u7531\u4eba\u5de5\u6765\u8fdb\u884c\u5224\u65ad\uff0c\u800c\u662f\u4ea4\u7531\u6d4b\u8bd5\u5de5\u5177\u6216\u6846\u67b6\u6765\u5b9e\u73b0\u3002 \u8fd9\u90e8\u5206\u529f\u80fd\u5bf9\u5e94\u7684\u5c31\u662f\u6d4b\u8bd5\u7ed3\u679c\u6821\u9a8c\u5668\uff08validator\uff09\uff0c\u57fa\u672c\u4e0a\u80fd\u79f0\u5f97\u4e0a\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\u6216\u6846\u67b6\u7684\u90fd\u5305\u542b\u8be5\u529f\u80fd\u7279\u6027\u3002","title":"\u6821\u9a8c\u5668\u7528\u6cd5"},{"location":"prepare/validate/#1","text":"- {\"check\": check_item, \"comparator\": comparator_name, \"expect\": expect_value} # \u4e00\u822c\u683c\u5f0f - comparator_name: [check_item, expect_value] # \u7b80\u5316\u683c\u5f0f","title":"1\u3001\u6821\u9a8c\u5668\u652f\u6301\u4e24\u79cd\u683c\u5f0f"},{"location":"prepare/validate/#2","text":"\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7684\u6821\u9a8c\u51fd\u6570\uff0c\u9700\u8981\u9075\u5faa\u4e09\u4e2a\u89c4\u5219\uff1a (1)\u81ea\u5b9a\u4e49\u6821\u9a8c\u51fd\u6570\u9700\u653e\u7f6e\u5230debugtalk.py\u4e2d; (2)\u53c2\u6570\u6709\u4e24\u4e2a\uff1a\u7b2c\u4e00\u4e2a\u4e3a\u539f\u59cb\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u4e3a\u539f\u59cb\u6570\u636e\u7ecf\u8fc7\u8fd0\u7b97\u540e\u5f97\u5230\u7684\u9884\u671f\u7ed3\u679c\u503c; (3)\u5728\u6821\u9a8c\u51fd\u6570\u4e2d\u901a\u8fc7assert\u5c06\u5b9e\u9645\u8fd0\u7b97\u7ed3\u679c\u4e0e\u9884\u671f\u7ed3\u679c\u503c\u8fdb\u884c\u6bd4\u8f83; # \u7528\u4f8b - test: name: get token request: url: http://127.0.0.1:5000/api/get-token method: GET validate: - {\"check\": \"status_code\", \"comparator\": \"eq\", \"expect\": 200} - {\"check\": \"status_code\", \"comparator\": \"sum_status_code\", \"expect\": 2} # \u81ea\u5b9a\u4e49\u6821\u9a8c\u5668 def sum_status_code(status_code, expect_sum): \"\"\" sum status code digits e.g. 400 => 4, 201 => 3 \"\"\" sum_value = 0 for digit in str(status_code): sum_value += int(digit) assert sum_value == expect_sum","title":"2\u3001\u652f\u6301\u81ea\u5b9a\u4e49\u6821\u9a8c\u5668"},{"location":"prepare/validate/#3","text":"\u5728\u7ed3\u679c\u6821\u9a8c\u5668validate\u4e2d\uff0ccheck\u548cexpect\u5747\u53ef\u5b9e\u73b0\u5b9e\u73b0\u53d8\u91cf\u7684\u5f15\u7528\uff1b\u800c\u5f15\u7528\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u6765\u81ea\u56db\u79cd\u7c7b\u578b\uff1a \uff081\uff09\u5f53\u524dtest\u4e2d\u5b9a\u4e49\u7684variables\uff0c\u4f8b\u5982expect_status_code \uff082\uff09\u5f53\u524dtest\u4e2d\u63d0\u53d6\uff08extract\uff09\u7684\u7ed3\u679c\u53d8\u91cf\uff0c\u4f8b\u5982token \uff083\uff09\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u96c6testset\u4e2d\uff0c\u5148\u524dtest\u4e2d\u63d0\u53d6\uff08extract\uff09\u7684\u7ed3\u679c\u53d8\u91cf \uff084\uff09\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u96c6testset\u4e2d\uff0c\u5168\u5c40\u914d\u7f6econfig\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf - test: name: get token request: url: http://127.0.0.1:5000/api/get_token method: GET variables: - expect_status_code: 200 - token_len: 16 extract: - token: content.token validate: - {\"check\": \"status_code\", \"comparator\": \"eq\", \u201cexpect\": \"$expect_status_code\"} - {\"check\": \"content.token\", \"comparator\": \"len_eq\", \"expect\": \"$token_len\"} - {\"check\": \"$token\", \"comparator\": \"len_eq\", \"expect\": \"$token_len\"} \u57fa\u4e8e\u5f15\u7528\u53d8\u91cf\u7684\u7279\u6548\uff0c\u53ef\u5b9e\u73b0\u66f4\u7075\u6d3b\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u6821\u9a8c\u5668 - test: name: get token request: url: http://127.0.0.1:5000/api/get-token method: GET validate: - {\"check\": \"status_code\", \"comparator\": \"eq\", \"expect\": 200} - {\"check\": \"${sum_status_code(status_code)}\", \"comparator\": \"eq\", \"expect\": 2} # \u81ea\u5b9a\u4e49\u51fd\u6570 def sum_status_code(status_code): \"\"\" sum status code digits e.g. 400 => 4, 201 => 3 \"\"\" sum_value = 0 for digit in str(status_code): sum_value += int(digit) return sum_value","title":"3\u3001\u652f\u6301\u5728\u6821\u9a8c\u5668\u4e2d\u5f15\u7528\u53d8\u91cf"},{"location":"prepare/validate/#4","text":"\u5047\u8bbe\u63a5\u53e3\u7684\u54cd\u5e94\u7ed3\u679c\u5185\u5bb9\u4e3aLB123abcRB789\uff0c\u90a3\u4e48\u8981\u63d0\u53d6\u51faabc\u90e8\u5206\u8fdb\u884c\u6821\u9a8c\uff1a - test: name: get token request: url: http://127.0.0.1:5000/api/get-token method: GET validate: - {\"check\": \"LB123(.*)RB789\", \"comparator\": \"eq\", \"expect\": \"abc\"}","title":"4\u3001\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u63d0\u53d6\u7ed3\u679c\u6821\u9a8c\u5185\u5bb9"},{"location":"prepare/validate/#5","text":"Comparator Description A(check), B(expect) Examples eq, == value is equal A == B 9 eq 9 lt less than A < B 7 lt 8 le less than or equals A <= B 7 le 8, 8 le 8 gt greater than A > B 8 gt 7 ge greater than or equals A >= B 8 ge 7, 8 ge 8 ne not equals A != B 6 ne 9 str_eq string equals str(A) == str(B) 123 str_eq '123' len_eq, count_eq length or count equals len(A) == B 'abc' len_eq 3, [1,2] len_eq 2 len_gt, count_gt length greater than len(A) > B 'abc' len_gt 2, [1,2,3] len_gt 2 len_ge, count_ge length greater than or equals len(A) >= B 'abc' len_ge 3, [1,2,3] len_ge 3 len_lt, count_lt length less than len(A) < B 'abc' len_lt 4, [1,2,3] len_lt 4 len_le, count_le length less than or equals len(A) <= B 'abc' len_le 3, [1,2,3] len_le 3 contains contains [1, 2] contains 1 'abc' contains 'a', [1,2,3] len_lt 4 contained_by contained by A in B 'a' contained_by 'abc', 1 contained_by [1,2] type_match A is instance of B isinstance(A, B) 123 type_match 'int' regex_match regex matches re.match(B, A) 'abcdef' regex 'a startswith starts with A.startswith(B) is True 'abc' startswith 'ab' endswith ends with A.endswith(B) is True 'abc' endswith 'bc'","title":"5\u3001\u9644\u5f55\uff1a\u5185\u7f6e\u6821\u9a8c\u5668"},{"location":"prepare/yaml-issue/","text":"YAML \u7528\u4f8b\u8bed\u6cd5\u683c\u5f0f\u6ce8\u610f\u4e8b\u9879 \u00b6 APIMeter\u6d4b\u8bd5\u7528\u4f8b\u683c\u5f0f\u662f\u57fa\u4e8eYAML\uff0cYAML\u672c\u8eab\u6709\u81ea\u5df1\u8bed\u6cd5\u8981\u6c42\uff0c\u52a0\u4e0a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5305\u542b\u81ea\u5b9a\u4e49\u53d8\u91cf\u3001\u5168\u5c40\u53d8\u91cf\u8f6c\u4e49\u3001\u81ea\u5b9a\u4e49\u51fd\u6570\u3001\u5217\u8868\u53c2\u6570\u3001\u5bf9\u8c61\u53c2\u6570\u3001\u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570\u3001\u94fe\u5f0f\u53c2\u6570\u3001\u6b63\u5219\u53c2\u6570\u7b49\u5185\u5bb9\uff0c\u5199\u6d4b\u8bd5\u7528\u4f8b\u6709\u65f6\u4f1a\u9047\u5230\u7528\u4f8b\u6587\u4ef6\u89e3\u6790\u5931\u8d25\u7684\u8bed\u6cd5\u95ee\u9898\uff0c\u56e0\u6b64\u68b3\u7406\u4e00\u4e0b\u5e38\u89c1\u7684\u9519\u8bef\u5199\u6cd5\u683c\u5f0f\uff0c\u6c47\u603b\u4e3a\u4e00\u4efdYAML\u7528\u4f8b\u8bed\u6cd5\u683c\u5f0f\u6ce8\u610f\u4e8b\u9879\u6587\u6863\uff0c\u65b9\u4fbf\u5927\u5bb6\u907f\u5751\u548c\u6392\u67e5\u95ee\u9898\u3002 \u4e00\u3001YAML\u8bed\u6cd5\u6392\u67e5 \u00b6 1\u3001IDE\u5185\u7f6eYAML\u8bed\u6cd5\u9ad8\u4eae \u00b6 \u5982\u679c\u7528\u4f8b\u5b58\u5728\u8bed\u6cd5\u9ad8\u4eae\u5f02\u5e38\u4e0d\u89c4\u5219\uff0c\u5219\u8bf4\u660e\u5b58\u5728YAML\u8bed\u6cd5\u95ee\u9898\uff0c\u9700\u8981\u7ea0\u6b63 2\u3001\u5185\u7f6e\u547d\u4ee4\uff0c\u4e00\u952e\u6392\u67e5 \u00b6 # Validate YAML/JSON api/testcase/testsuite format. apimeter --validate [ VALIDATE ... ] # Example: testcase file apimeter --validate api/youcloud/account/query_areaCodeList_api.yml # Example: testcase folder apimeter --validate api/youcloud/account \u4e8c\u3001\u5e38\u89c1\u9519\u8bef\u6982\u89c8 \u00b6 \u9519\u8bef\u4fe1\u606f \u53ef\u80fd\u539f\u56e0 \u89e3\u51b3\u65b9\u6848 mapping values are not allowed here \u51fd\u6570\u53c2\u6570\u4e2d\u7684 {} \u88ab\u8bef\u8ba4\u4e3a\u5b57\u5178 \u7528\u5f15\u53f7\u5305\u56f4\u6574\u4e2a\u51fd\u6570\u8c03\u7528 while parsing a flow sequence \u5217\u8868\u8bed\u6cd5\u4e2d\u7279\u6b8a\u5b57\u7b26\u672a\u5904\u7406 \u4f7f\u7528\u591a\u884c\u683c\u5f0f\u6216\u52a0\u5f15\u53f7 found undefined tag handle \u53d8\u91cf\u5f15\u7528\u683c\u5f0f\u9519\u8bef \u68c0\u67e5 ${} \u683c\u5f0f\u548c\u53d8\u91cf\u540d VariableNotFound\u3001FunctionNotFound \u53d8\u91cf\u3001\u51fd\u6570\u672a\u5b9a\u4e49\u6216\u5f15\u7528\u9519\u8bef \u68c0\u67e5\u53d8\u91cf\u3001\u51fd\u6570\u5b9a\u4e49\u548c\u5f15\u7528\u8bed\u6cd5 \u4e09\u3001\u5e38\u89c1\u95ee\u9898\u793a\u4f8b \u00b6 1\u3001\u6821\u9a8c\u5668\u9519\u8bef\u5199\u6cd5 \u274c \u00b6 validate : - eq : [ $ { validate_token($token) }, true ] # YAML\u7684\u5217\u8868\uff08\u6570\u7ec4\uff09\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u7684\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u4f1a\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef \u62a5\u9519\u4fe1\u606f \u00b6 ERROR while parsing a flow sequence expected ',' or ']' , but got '{' \u2705 \u6b63\u786e\u5199\u6cd51\uff1a\u5355\u884c\u683c\u5f0f\uff08\u52a0\u5f15\u53f7\uff09 \u00b6 validate : - eq : [ \"${validate_token($token)}\" , true ] \u2705 \u6b63\u786e\u5199\u6cd52\uff1a\u591a\u884c\u683c\u5f0f\uff08\u63a8\u8350\uff09 \u00b6 validate : - eq : - ${validate_token($token)} - true 2\u3001\u5b57\u5178\u53c2\u6570\u9519\u8bef\u5199\u6cd5 \u274c \u00b6 sign : ${get_sign_v3({device_sn : $device_sn, os_platform : $os_platform})} # \u51fd\u6570\u53c2\u6570\u5305\u542b\u82b1\u62ec\u53f7 `{}` \u65f6\uff0cYAML\u89e3\u6790\u5668\u4f1a\u5c06\u5176\u8bef\u8ba4\u4e3a\u662f\u5b57\u5178\u5b9a\u4e49\uff0c\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef \u62a5\u9519\u4fe1\u606f \u00b6 ERROR mapping values are not allowed here \u2705 \u6b63\u786e\u5199\u6cd51\uff1a\u4f7f\u7528\u53cc\u5f15\u53f7\u548c\u8f6c\u4e49 \u00b6 sign : \"${get_sign_v3({\\\"device_sn\\\": $device_sn, \\\"os_platform\\\": $os_platform})}\" \u2705 \u6b63\u786e\u5199\u6cd52\uff1a\u4f7f\u7528\u53cc\u5f15\u53f7+\u5355\u5f15\u53f7 \u00b6 sign : \"${get_sign_v3({'device_sn': $device_sn, 'os_platform': $os_platform})}\" \u2705 \u6b63\u786e\u5199\u6cd53\uff1a\u4f7f\u7528\u53cc\u5f15\u53f7 \u00b6 sign : \"${get_sign_v3({device_sn: $device_sn, os_platform: $os_platform})}\" # YAML\u539f\u751f\u5b57\u5178\u8bed\u6cd5\uff08\u63a8\u8350\uff09 \u56db\u3001YAML\u7528\u4f8b\u6b63\u786e\u8bed\u6cd5\u59ff\u52bf \u00b6 1\u3001\u5404\u79cd\u51fd\u6570\u8c03\u7528\u7684\u6b63\u786e\u5199\u6cd5 \u00b6 teststeps : - name : test functions validate : # \u7b80\u5355\u51fd\u6570\u8c03\u7528 - \u65e0\u9700\u5f15\u53f7 - eq : [ $ { get_timestamp() }, 1234567890 ] # \u590d\u6742\u51fd\u6570\u8c03\u7528 - \u9700\u8981\u5f15\u53f7 - eq : [ \"${validate_data({\\\"key\\\": $value})}\" , true ] # \u5217\u8868\u53c2\u6570 - \u9700\u8981\u5f15\u53f7 - eq : [ \"${process_list([$item1, $item2])}\" , \"success\" ] # \u591a\u884c\u683c\u5f0f - \u603b\u662f\u5b89\u5168 - eq : - ${complex_function($param1, $param2)} - expected_result 2\u3001\u5305\u542b\u5217\u8868\u53c2\u6570\u7684\u51fd\u6570\u8c03\u7528\u7684\u6b63\u786e\u5199\u6cd5 \u00b6 sign : ${get_sign($device_sn, $os_platform, $app_version)} sign : \"${get_sign_v2([$device_sn, $os_platform, $app_version])}\" sign : ${get_sign_v2([$device_sn, $os_platform, $app_version])} 3\u3001\u5168\u5c40\u53d8\u91cf\u6b63\u786e\u7528\u6cd5 \u00b6 APIMeter\u63d0\u4f9b\u4ee5\u4e0b\u5185\u7f6e\u5168\u5c40\u53d8\u91cf\uff0c\u65e0\u9700\u4f7f\u7528 $ \u524d\u7f00 \u00b6 # \u5185\u7f6e\u5168\u5c40\u53d8\u91cf\u5217\u8868 - content / body / text / json # \u54cd\u5e94\u4f53\u6570\u636e - status_code # HTTP\u72b6\u6001\u7801 - headers # \u54cd\u5e94\u5934 - cookies # Cookie\u4fe1\u606f - elapsed # \u8bf7\u6c42\u8017\u65f6 - encoding / ok / reason / url # \u5176\u4ed6\u54cd\u5e94\u4fe1\u606f \u2705 \u6b63\u786e\u4f7f\u7528\u65b9\u5f0f \u00b6 # \u76f4\u63a5\u4f7f\u7528\u5168\u5c40\u53d8\u91cf validate : - eq : [ status_code , 200 ] - eq : [ content.token , $expected_token ] - eq : [ headers.content-type , \"application/json\" ] # \u5728\u51fd\u6570\u4e2d\u5f15\u7528\u5168\u5c40\u53d8\u91cf script : - ${validate_response(content)} - ${check_headers(headers)} \u274c \u9519\u8bef\u5199\u6cd5 \u00b6 # \u5168\u5c40\u53d8\u91cf\u524d\u52a0$\u7b26\u53f7 validate : - eq : [ $status_code , 200 ] # \u9519\u8bef\uff01 - eq : [ $content.token , \"abc\" ] # \u9519\u8bef\uff01 \u5f53\u6570\u636e\u5b57\u6bb5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u4f7f\u7528\u53cd\u659c\u6760 \\ \u8f6c\u4e49 \u00b6 \u2705 \u6b63\u786e\u4f7f\u7528\u8f6c\u4e49 \u00b6 # \u5f53\u54cd\u5e94\u6570\u636e\u4e2d\u6709\u540d\u4e3a\"content\"\u7684\u5b57\u6bb5\u65f6 validate : - eq : - ${check_data_not_null(content.data.lines, \\content)} # \\content \u8868\u793a\u5b57\u7b26\u4e32 \"content\" - True # \u652f\u6301\u8f6c\u4e49\u6240\u6709\u5168\u5c40\u53d8\u91cf script : - ${validate_field_name(\\status_code, \\headers, \\content)} \u274c \u9519\u8bef\u5199\u6cd5 \u00b6 # \u76f4\u63a5\u4f7f\u7528\u4f1a\u88ab\u89e3\u6790\u4e3a\u5168\u5c40\u53d8\u91cf\u800c\u975e\u5b57\u9762\u91cf validate : - eq : - ${check_field_name(content.data, content)} # content\u88ab\u89e3\u6790\u4e3a\u5168\u5c40\u53d8\u91cf\u503c - True 4\u3001\u5f15\u53f7\u6b63\u786e\u4f7f\u7528\u89c4\u5219 \u00b6 \u4f55\u65f6\u5fc5\u987b\u4f7f\u7528\u5f15\u53f7 \u00b6 \u5305\u542b\u82b1\u62ec\u53f7 {} \u7684\u51fd\u6570\u8c03\u7528 \u5305\u542b\u65b9\u62ec\u53f7 [] \u7684\u51fd\u6570\u8c03\u7528 \u5355\u884c\u5217\u8868\u683c\u5f0f\u4e2d\u7684\u590d\u6742\u8868\u8fbe\u5f0f\uff0c\u6bd4\u5982\u6b63\u5219\u8868\u8fbe\u5f0f\u6216\u590d\u5236\u5d4c\u5957\u7ed3\u6784\u6570\u636e \u5305\u542b\u5192\u53f7 : \u7684\u5b57\u7b26\u4e32\u503c \u2705 \u6b63\u786e\u793a\u4f8b \u00b6 # \u5b57\u5178\u53c2\u6570\u5fc5\u987b\u52a0\u5f15\u53f7 sign : \"${get_sign({device: $device_sn})}\" # \u5305\u542b\u5192\u53f7\u7684\u503c\u5fc5\u987b\u52a0\u5f15\u53f7 url : \"http://example.com:8080/api\" # \u5355\u884c\u6821\u9a8c\u5668\u5fc5\u987b\u52a0\u5f15\u53f7 validate : - eq : [ \"${complex_func($param)}\" , \"expected\" ] # \u5217\u8868\u53c2\u6570\u5efa\u8bae\u52a0\u5f15\u53f7 data : \"${process_list([$item1, $item2])}\" \u274c \u9519\u8bef\u793a\u4f8b \u00b6 # \u5b57\u5178\u53c2\u6570\u65e0\u5f15\u53f7 - \u89e3\u6790\u9519\u8bef sign : ${get_sign({device : $device_sn})} # \u5355\u884c\u6821\u9a8c\u5668\u65e0\u5f15\u53f7 - \u89e3\u6790\u9519\u8bef validate : - eq : [ $ { func($param) }, \"expected\" ] \u4e94\u3001\u6700\u4f73\u5b9e\u8df5 \u00b6 \u68c0\u9a8c\u5668\u4f18\u5148\u4f7f\u7528\u591a\u884c\u683c\u5f0f \uff1a\u66f4\u6e05\u6670\uff0c\u4e0d\u5bb9\u6613\u51fa\u9519 \u590d\u6742\u53c2\u6570\u7edf\u4e00\u52a0\u5f15\u53f7 \uff1a\u5305\u542b {}[] \u7b49\u7279\u6b8a\u5b57\u7b26\u65f6 \u4fdd\u6301\u56e2\u961f\u811a\u672c\u98ce\u683c\u4e00\u81f4 \uff1a\u5728\u540c\u4e00\u4e2a\u9879\u76ee\u4e2d\u4f7f\u7528\u7edf\u4e00\u7684\u98ce\u683c \u53ca\u65f6\u6d4b\u8bd5\u9a8c\u8bc1\u8bed\u6cd5 \uff1a\u4fee\u6539YAML\u540e\u53ca\u65f6\u9a8c\u8bc1\u8bed\u6cd5\u6b63\u786e\u6027 \u6700\u540e\u63d0\u9192 \uff1a\u9047\u5230\u8bed\u6cd5\u9519\u8bef\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u5f15\u53f7\u4f7f\u7528\u548c\u683c\u5f0f\u89c4\u8303\uff0c90%\u7684\u95ee\u9898\u90fd\u80fd\u5feb\u901f\u89e3\u51b3\uff01 \ud83c\udfaf \ud83d\udd27 \u9644\u5f55\uff1a\u6d4b\u8bd5\u7528\u4f8b\u6a21\u677f \u00b6 teststeps : - name : \"\u57fa\u7840\u7528\u4f8b\u6a21\u677f\" variables : expected_status : 200 expected_field : \"success\" request : url : \"/api/endpoint\" method : GET headers : Authorization : \"Bearer ${get_auth_token($user_id)}\" validate : - eq : [ status_code , $expected_status ] - eq : [ content.status , $expected_field ] - eq : - \"${validate_response_format(content)}\" - True script : - assert status_code == 200 - assert content.success is True - ${log_response_time(elapsed.total_seconds)}","title":"\u5e38\u89c1\u683c\u5f0f\u95ee\u9898"},{"location":"prepare/yaml-issue/#yaml","text":"APIMeter\u6d4b\u8bd5\u7528\u4f8b\u683c\u5f0f\u662f\u57fa\u4e8eYAML\uff0cYAML\u672c\u8eab\u6709\u81ea\u5df1\u8bed\u6cd5\u8981\u6c42\uff0c\u52a0\u4e0a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5305\u542b\u81ea\u5b9a\u4e49\u53d8\u91cf\u3001\u5168\u5c40\u53d8\u91cf\u8f6c\u4e49\u3001\u81ea\u5b9a\u4e49\u51fd\u6570\u3001\u5217\u8868\u53c2\u6570\u3001\u5bf9\u8c61\u53c2\u6570\u3001\u590d\u6742\u5d4c\u5957\u5bf9\u8c61\u53c2\u6570\u3001\u94fe\u5f0f\u53c2\u6570\u3001\u6b63\u5219\u53c2\u6570\u7b49\u5185\u5bb9\uff0c\u5199\u6d4b\u8bd5\u7528\u4f8b\u6709\u65f6\u4f1a\u9047\u5230\u7528\u4f8b\u6587\u4ef6\u89e3\u6790\u5931\u8d25\u7684\u8bed\u6cd5\u95ee\u9898\uff0c\u56e0\u6b64\u68b3\u7406\u4e00\u4e0b\u5e38\u89c1\u7684\u9519\u8bef\u5199\u6cd5\u683c\u5f0f\uff0c\u6c47\u603b\u4e3a\u4e00\u4efdYAML\u7528\u4f8b\u8bed\u6cd5\u683c\u5f0f\u6ce8\u610f\u4e8b\u9879\u6587\u6863\uff0c\u65b9\u4fbf\u5927\u5bb6\u907f\u5751\u548c\u6392\u67e5\u95ee\u9898\u3002","title":"YAML \u7528\u4f8b\u8bed\u6cd5\u683c\u5f0f\u6ce8\u610f\u4e8b\u9879"},{"location":"prepare/yaml-issue/#yaml_1","text":"","title":"\u4e00\u3001YAML\u8bed\u6cd5\u6392\u67e5"},{"location":"prepare/yaml-issue/#1ideyaml","text":"\u5982\u679c\u7528\u4f8b\u5b58\u5728\u8bed\u6cd5\u9ad8\u4eae\u5f02\u5e38\u4e0d\u89c4\u5219\uff0c\u5219\u8bf4\u660e\u5b58\u5728YAML\u8bed\u6cd5\u95ee\u9898\uff0c\u9700\u8981\u7ea0\u6b63","title":"1\u3001IDE\u5185\u7f6eYAML\u8bed\u6cd5\u9ad8\u4eae"},{"location":"prepare/yaml-issue/#2","text":"# Validate YAML/JSON api/testcase/testsuite format. apimeter --validate [ VALIDATE ... ] # Example: testcase file apimeter --validate api/youcloud/account/query_areaCodeList_api.yml # Example: testcase folder apimeter --validate api/youcloud/account","title":"2\u3001\u5185\u7f6e\u547d\u4ee4\uff0c\u4e00\u952e\u6392\u67e5"},{"location":"prepare/yaml-issue/#_1","text":"\u9519\u8bef\u4fe1\u606f \u53ef\u80fd\u539f\u56e0 \u89e3\u51b3\u65b9\u6848 mapping values are not allowed here \u51fd\u6570\u53c2\u6570\u4e2d\u7684 {} \u88ab\u8bef\u8ba4\u4e3a\u5b57\u5178 \u7528\u5f15\u53f7\u5305\u56f4\u6574\u4e2a\u51fd\u6570\u8c03\u7528 while parsing a flow sequence \u5217\u8868\u8bed\u6cd5\u4e2d\u7279\u6b8a\u5b57\u7b26\u672a\u5904\u7406 \u4f7f\u7528\u591a\u884c\u683c\u5f0f\u6216\u52a0\u5f15\u53f7 found undefined tag handle \u53d8\u91cf\u5f15\u7528\u683c\u5f0f\u9519\u8bef \u68c0\u67e5 ${} \u683c\u5f0f\u548c\u53d8\u91cf\u540d VariableNotFound\u3001FunctionNotFound \u53d8\u91cf\u3001\u51fd\u6570\u672a\u5b9a\u4e49\u6216\u5f15\u7528\u9519\u8bef \u68c0\u67e5\u53d8\u91cf\u3001\u51fd\u6570\u5b9a\u4e49\u548c\u5f15\u7528\u8bed\u6cd5","title":"\u4e8c\u3001\u5e38\u89c1\u9519\u8bef\u6982\u89c8"},{"location":"prepare/yaml-issue/#_2","text":"","title":"\u4e09\u3001\u5e38\u89c1\u95ee\u9898\u793a\u4f8b"},{"location":"prepare/yaml-issue/#1","text":"validate : - eq : [ $ { validate_token($token) }, true ] # YAML\u7684\u5217\u8868\uff08\u6570\u7ec4\uff09\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u7684\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u4f1a\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef","title":"1\u3001\u6821\u9a8c\u5668\u9519\u8bef\u5199\u6cd5 \u274c"},{"location":"prepare/yaml-issue/#_3","text":"ERROR while parsing a flow sequence expected ',' or ']' , but got '{'","title":"\u62a5\u9519\u4fe1\u606f"},{"location":"prepare/yaml-issue/#1_1","text":"validate : - eq : [ \"${validate_token($token)}\" , true ]","title":"\u2705 \u6b63\u786e\u5199\u6cd51\uff1a\u5355\u884c\u683c\u5f0f\uff08\u52a0\u5f15\u53f7\uff09"},{"location":"prepare/yaml-issue/#2_1","text":"validate : - eq : - ${validate_token($token)} - true","title":"\u2705 \u6b63\u786e\u5199\u6cd52\uff1a\u591a\u884c\u683c\u5f0f\uff08\u63a8\u8350\uff09"},{"location":"prepare/yaml-issue/#2_2","text":"sign : ${get_sign_v3({device_sn : $device_sn, os_platform : $os_platform})} # \u51fd\u6570\u53c2\u6570\u5305\u542b\u82b1\u62ec\u53f7 `{}` \u65f6\uff0cYAML\u89e3\u6790\u5668\u4f1a\u5c06\u5176\u8bef\u8ba4\u4e3a\u662f\u5b57\u5178\u5b9a\u4e49\uff0c\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef","title":"2\u3001\u5b57\u5178\u53c2\u6570\u9519\u8bef\u5199\u6cd5 \u274c"},{"location":"prepare/yaml-issue/#_4","text":"ERROR mapping values are not allowed here","title":"\u62a5\u9519\u4fe1\u606f"},{"location":"prepare/yaml-issue/#1_2","text":"sign : \"${get_sign_v3({\\\"device_sn\\\": $device_sn, \\\"os_platform\\\": $os_platform})}\"","title":"\u2705 \u6b63\u786e\u5199\u6cd51\uff1a\u4f7f\u7528\u53cc\u5f15\u53f7\u548c\u8f6c\u4e49"},{"location":"prepare/yaml-issue/#2_3","text":"sign : \"${get_sign_v3({'device_sn': $device_sn, 'os_platform': $os_platform})}\"","title":"\u2705 \u6b63\u786e\u5199\u6cd52\uff1a\u4f7f\u7528\u53cc\u5f15\u53f7+\u5355\u5f15\u53f7"},{"location":"prepare/yaml-issue/#3","text":"sign : \"${get_sign_v3({device_sn: $device_sn, os_platform: $os_platform})}\" # YAML\u539f\u751f\u5b57\u5178\u8bed\u6cd5\uff08\u63a8\u8350\uff09","title":"\u2705 \u6b63\u786e\u5199\u6cd53\uff1a\u4f7f\u7528\u53cc\u5f15\u53f7"},{"location":"prepare/yaml-issue/#yaml_2","text":"","title":"\u56db\u3001YAML\u7528\u4f8b\u6b63\u786e\u8bed\u6cd5\u59ff\u52bf"},{"location":"prepare/yaml-issue/#1_3","text":"teststeps : - name : test functions validate : # \u7b80\u5355\u51fd\u6570\u8c03\u7528 - \u65e0\u9700\u5f15\u53f7 - eq : [ $ { get_timestamp() }, 1234567890 ] # \u590d\u6742\u51fd\u6570\u8c03\u7528 - \u9700\u8981\u5f15\u53f7 - eq : [ \"${validate_data({\\\"key\\\": $value})}\" , true ] # \u5217\u8868\u53c2\u6570 - \u9700\u8981\u5f15\u53f7 - eq : [ \"${process_list([$item1, $item2])}\" , \"success\" ] # \u591a\u884c\u683c\u5f0f - \u603b\u662f\u5b89\u5168 - eq : - ${complex_function($param1, $param2)} - expected_result","title":"1\u3001\u5404\u79cd\u51fd\u6570\u8c03\u7528\u7684\u6b63\u786e\u5199\u6cd5"},{"location":"prepare/yaml-issue/#2_4","text":"sign : ${get_sign($device_sn, $os_platform, $app_version)} sign : \"${get_sign_v2([$device_sn, $os_platform, $app_version])}\" sign : ${get_sign_v2([$device_sn, $os_platform, $app_version])}","title":"2\u3001\u5305\u542b\u5217\u8868\u53c2\u6570\u7684\u51fd\u6570\u8c03\u7528\u7684\u6b63\u786e\u5199\u6cd5"},{"location":"prepare/yaml-issue/#3_1","text":"","title":"3\u3001\u5168\u5c40\u53d8\u91cf\u6b63\u786e\u7528\u6cd5"},{"location":"prepare/yaml-issue/#apimeter","text":"# \u5185\u7f6e\u5168\u5c40\u53d8\u91cf\u5217\u8868 - content / body / text / json # \u54cd\u5e94\u4f53\u6570\u636e - status_code # HTTP\u72b6\u6001\u7801 - headers # \u54cd\u5e94\u5934 - cookies # Cookie\u4fe1\u606f - elapsed # \u8bf7\u6c42\u8017\u65f6 - encoding / ok / reason / url # \u5176\u4ed6\u54cd\u5e94\u4fe1\u606f","title":"APIMeter\u63d0\u4f9b\u4ee5\u4e0b\u5185\u7f6e\u5168\u5c40\u53d8\u91cf\uff0c\u65e0\u9700\u4f7f\u7528$\u524d\u7f00"},{"location":"prepare/yaml-issue/#_5","text":"# \u76f4\u63a5\u4f7f\u7528\u5168\u5c40\u53d8\u91cf validate : - eq : [ status_code , 200 ] - eq : [ content.token , $expected_token ] - eq : [ headers.content-type , \"application/json\" ] # \u5728\u51fd\u6570\u4e2d\u5f15\u7528\u5168\u5c40\u53d8\u91cf script : - ${validate_response(content)} - ${check_headers(headers)}","title":"\u2705 \u6b63\u786e\u4f7f\u7528\u65b9\u5f0f"},{"location":"prepare/yaml-issue/#_6","text":"# \u5168\u5c40\u53d8\u91cf\u524d\u52a0$\u7b26\u53f7 validate : - eq : [ $status_code , 200 ] # \u9519\u8bef\uff01 - eq : [ $content.token , \"abc\" ] # \u9519\u8bef\uff01","title":"\u274c \u9519\u8bef\u5199\u6cd5"},{"location":"prepare/yaml-issue/#_7","text":"","title":"\u5f53\u6570\u636e\u5b57\u6bb5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u4f7f\u7528\u53cd\u659c\u6760\\\u8f6c\u4e49"},{"location":"prepare/yaml-issue/#_8","text":"# \u5f53\u54cd\u5e94\u6570\u636e\u4e2d\u6709\u540d\u4e3a\"content\"\u7684\u5b57\u6bb5\u65f6 validate : - eq : - ${check_data_not_null(content.data.lines, \\content)} # \\content \u8868\u793a\u5b57\u7b26\u4e32 \"content\" - True # \u652f\u6301\u8f6c\u4e49\u6240\u6709\u5168\u5c40\u53d8\u91cf script : - ${validate_field_name(\\status_code, \\headers, \\content)}","title":"\u2705 \u6b63\u786e\u4f7f\u7528\u8f6c\u4e49"},{"location":"prepare/yaml-issue/#_9","text":"# \u76f4\u63a5\u4f7f\u7528\u4f1a\u88ab\u89e3\u6790\u4e3a\u5168\u5c40\u53d8\u91cf\u800c\u975e\u5b57\u9762\u91cf validate : - eq : - ${check_field_name(content.data, content)} # content\u88ab\u89e3\u6790\u4e3a\u5168\u5c40\u53d8\u91cf\u503c - True","title":"\u274c \u9519\u8bef\u5199\u6cd5"},{"location":"prepare/yaml-issue/#4","text":"","title":"4\u3001\u5f15\u53f7\u6b63\u786e\u4f7f\u7528\u89c4\u5219"},{"location":"prepare/yaml-issue/#_10","text":"\u5305\u542b\u82b1\u62ec\u53f7 {} \u7684\u51fd\u6570\u8c03\u7528 \u5305\u542b\u65b9\u62ec\u53f7 [] \u7684\u51fd\u6570\u8c03\u7528 \u5355\u884c\u5217\u8868\u683c\u5f0f\u4e2d\u7684\u590d\u6742\u8868\u8fbe\u5f0f\uff0c\u6bd4\u5982\u6b63\u5219\u8868\u8fbe\u5f0f\u6216\u590d\u5236\u5d4c\u5957\u7ed3\u6784\u6570\u636e \u5305\u542b\u5192\u53f7 : \u7684\u5b57\u7b26\u4e32\u503c","title":"\u4f55\u65f6\u5fc5\u987b\u4f7f\u7528\u5f15\u53f7"},{"location":"prepare/yaml-issue/#_11","text":"# \u5b57\u5178\u53c2\u6570\u5fc5\u987b\u52a0\u5f15\u53f7 sign : \"${get_sign({device: $device_sn})}\" # \u5305\u542b\u5192\u53f7\u7684\u503c\u5fc5\u987b\u52a0\u5f15\u53f7 url : \"http://example.com:8080/api\" # \u5355\u884c\u6821\u9a8c\u5668\u5fc5\u987b\u52a0\u5f15\u53f7 validate : - eq : [ \"${complex_func($param)}\" , \"expected\" ] # \u5217\u8868\u53c2\u6570\u5efa\u8bae\u52a0\u5f15\u53f7 data : \"${process_list([$item1, $item2])}\"","title":"\u2705 \u6b63\u786e\u793a\u4f8b"},{"location":"prepare/yaml-issue/#_12","text":"# \u5b57\u5178\u53c2\u6570\u65e0\u5f15\u53f7 - \u89e3\u6790\u9519\u8bef sign : ${get_sign({device : $device_sn})} # \u5355\u884c\u6821\u9a8c\u5668\u65e0\u5f15\u53f7 - \u89e3\u6790\u9519\u8bef validate : - eq : [ $ { func($param) }, \"expected\" ]","title":"\u274c \u9519\u8bef\u793a\u4f8b"},{"location":"prepare/yaml-issue/#_13","text":"\u68c0\u9a8c\u5668\u4f18\u5148\u4f7f\u7528\u591a\u884c\u683c\u5f0f \uff1a\u66f4\u6e05\u6670\uff0c\u4e0d\u5bb9\u6613\u51fa\u9519 \u590d\u6742\u53c2\u6570\u7edf\u4e00\u52a0\u5f15\u53f7 \uff1a\u5305\u542b {}[] \u7b49\u7279\u6b8a\u5b57\u7b26\u65f6 \u4fdd\u6301\u56e2\u961f\u811a\u672c\u98ce\u683c\u4e00\u81f4 \uff1a\u5728\u540c\u4e00\u4e2a\u9879\u76ee\u4e2d\u4f7f\u7528\u7edf\u4e00\u7684\u98ce\u683c \u53ca\u65f6\u6d4b\u8bd5\u9a8c\u8bc1\u8bed\u6cd5 \uff1a\u4fee\u6539YAML\u540e\u53ca\u65f6\u9a8c\u8bc1\u8bed\u6cd5\u6b63\u786e\u6027 \u6700\u540e\u63d0\u9192 \uff1a\u9047\u5230\u8bed\u6cd5\u9519\u8bef\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u5f15\u53f7\u4f7f\u7528\u548c\u683c\u5f0f\u89c4\u8303\uff0c90%\u7684\u95ee\u9898\u90fd\u80fd\u5feb\u901f\u89e3\u51b3\uff01 \ud83c\udfaf","title":"\u4e94\u3001\u6700\u4f73\u5b9e\u8df5"},{"location":"prepare/yaml-issue/#_14","text":"teststeps : - name : \"\u57fa\u7840\u7528\u4f8b\u6a21\u677f\" variables : expected_status : 200 expected_field : \"success\" request : url : \"/api/endpoint\" method : GET headers : Authorization : \"Bearer ${get_auth_token($user_id)}\" validate : - eq : [ status_code , $expected_status ] - eq : [ content.status , $expected_field ] - eq : - \"${validate_response_format(content)}\" - True script : - assert status_code == 200 - assert content.success is True - ${log_response_time(elapsed.total_seconds)}","title":"\ud83d\udd27 \u9644\u5f55\uff1a\u6d4b\u8bd5\u7528\u4f8b\u6a21\u677f"},{"location":"run-tests/cli/","text":"\u8fd0\u884c\u6d4b\u8bd5(CLI) \u00b6 HttpRunner \u5728\u547d\u4ee4\u884c\u4e2d\u542f\u52a8\u6d4b\u8bd5\u65f6\uff0c\u901a\u8fc7\u6307\u5b9a\u53c2\u6570\uff0c\u53ef\u5b9e\u73b0\u4e30\u5bcc\u7684\u6d4b\u8bd5\u7279\u6027\u63a7\u5236\u3002 $ hrun -h usage: hrun [-h] [-V] [--log-level LOG_LEVEL] [--log-file LOG_FILE] [--dot-env-path DOT_ENV_PATH] [--report-template REPORT_TEMPLATE] [--report-dir REPORT_DIR] [--failfast] [--save-tests] [--startproject STARTPROJECT] [--validate [VALIDATE [VALIDATE ...]]] [--prettify [PRETTIFY [PRETTIFY ...]]] [testcase_paths [testcase_paths ...]] One-stop solution for HTTP(S) testing. positional arguments: testcase_paths testcase file path optional arguments: -h, --help show this help message and exit -V, --version show version --log-level LOG_LEVEL Specify logging level, default is INFO. --log-file LOG_FILE Write logs to specified file path. --dot-env-path DOT_ENV_PATH Specify .env file path, which is useful for keeping sensitive data. --report-template REPORT_TEMPLATE specify report template path. --report-dir REPORT_DIR specify report save directory. --failfast Stop the test run on the first error or failure. --save-tests Save loaded tests and parsed tests to JSON file. --startproject STARTPROJECT Specify new project name. --validate [VALIDATE [VALIDATE ...]] Validate JSON testcase format. --prettify [PRETTIFY [PRETTIFY ...]] Prettify JSON testcase format. \u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u8def\u5f84 \u00b6 \u4f7f\u7528 HttpRunner \u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u8def\u5f84\u65f6\uff0c\u652f\u6301\u591a\u79cd\u65b9\u5f0f\u3002 \u4f7f\u7528 hrun \u547d\u4ee4\u5916\u52a0\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u8fd0\u884c\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\uff1a $ hrun filepath/testcase.yml \u5c06\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u653e\u7f6e\u5230\u6587\u4ef6\u5939\u4e2d\uff0c\u6307\u5b9a\u6587\u4ef6\u5939\u8def\u5f84\u53ef\u5c06\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u4f5c\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u96c6\u8fdb\u884c\u8fd0\u884c\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\uff1a $ hrun testcases_folder_path failfast \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cHttpRunner \u4f1a\u8fd0\u884c\u6307\u5b9a\u7528\u4f8b\u96c6\u4e2d\u7684\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u7edf\u8ba1\u6d4b\u8bd5\u7ed3\u679c\u3002 \u5bf9\u4e8e\u67d0\u4e9b\u4f9d\u8d56\u4e8e\u6267\u884c\u987a\u5e8f\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f8b\u5982\u9700\u8981\u5148\u767b\u5f55\u6210\u529f\u624d\u80fd\u6267\u884c\u540e\u7eed\u63a5\u53e3\u8bf7\u6c42\u7684\u573a\u666f\uff0c\u5f53\u524d\u9762\u7684\u6d4b\u8bd5\u7528\u4f8b\u6267\u884c\u5931\u8d25\u540e\uff0c\u540e\u7eed\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u90fd\u5fc5\u5c06\u5931\u8d25\uff0c\u56e0\u6b64\u6ca1\u6709\u7ee7\u7eed\u6267\u884c\u7684\u5fc5\u8981\u4e86\u3002 \u82e5\u5e0c\u671b\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u5931\u8d25\u65f6\u4e0d\u518d\u7ee7\u7eed\u8fd0\u884c\u540e\u7eed\u7528\u4f8b\uff0c\u5219\u53ef\u901a\u8fc7\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 --failfast \u5b9e\u73b0\u3002 $ hrun filepath/testcase.yml --failfast \u65e5\u5fd7\u7ea7\u522b \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cHttpRunner \u8fd0\u884c\u65f6\u7684\u65e5\u5fd7\u7ea7\u522b\u4e3a INFO \uff0c\u53ea\u4f1a\u5305\u542b\u6700\u57fa\u672c\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u7528\u4f8b\u540d\u79f0\u3001\u8bf7\u6c42\u7684URL\u548cMethod\u3001\u54cd\u5e94\u7ed3\u679c\u7684\u72b6\u6001\u7801\u3001\u8017\u65f6\u548c\u5185\u5bb9\u5927\u5c0f\u3002 $ hrun docs/data/demo-quickstart-6.json INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 9.08 ms, response_length: 46 bytes . /api/users/1548560655759 INFO POST http://127.0.0.1:5000/api/users/1548560655759 INFO status_code: 201, response_time(ms): 2.89 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.019s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548560655.html \u82e5\u9700\u8981\u67e5\u770b\u5230\u66f4\u8be6\u5c3d\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u8bf7\u6c42\u7684\u53c2\u6570\u548c\u54cd\u5e94\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u53ef\u4ee5\u5c06\u65e5\u5fd7\u7ea7\u522b\u8bbe\u7f6e\u4e3a DEBUG \uff0c\u5373\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 --log-level debug \u3002 $ hrun docs/data/demo-quickstart-6.json --log-level debug INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token DEBUG request kwargs(raw): {'headers': {'User-Agent': 'python-requests/2.18.4', 'device_sn': 'W5ACRDytKRQJPhC', 'os_platform': 'ios', 'app_version': '2.8.6', 'Content-Type': 'application/json'}, 'json': {'sign': '2e7c3b5d560a1c8a859edcb9c8b0d3f8349abeff'}, 'verify': True} DEBUG processed request: > POST http://127.0.0.1:5000/api/get-token > kwargs: {'headers': {'User-Agent': 'python-requests/2.18.4', 'device_sn': 'W5ACRDytKRQJPhC', 'os_platform': 'ios', 'app_version': '2.8.6', 'Content-Type': 'application/json'}, 'json': {'sign': '2e7c3b5d560a1c8a859edcb9c8b0d3f8349abeff'}, 'verify': True, 'timeout': 120} DEBUG ================== request details ================== url : 'http://127.0.0.1:5000/api/get-token' method : 'POST' headers : {'User-Agent': 'python-requests/2.18.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'device_sn': 'W5ACRDytKRQJPhC', 'os_platform': 'ios', 'app_version': '2.8.6', 'Content-Type': 'application/json', 'Content-Length': '52'} body : b'{\"sign\": \"2e7c3b5d560a1c8a859edcb9c8b0d3f8349abeff\"}' DEBUG ================== response details ================== ok : True url : 'http://127.0.0.1:5000/api/get-token' status_code : 200 reason : 'OK' cookies : {} encoding : None headers : {'Content-Type': 'application/json', 'Content-Length': '46', 'Server': 'Werkzeug/0.14.1 Python/3.6.5+', 'Date': 'Sun, 27 Jan 2019 03:45:16 GMT'} content_type : 'application/json' json : {'success': True, 'token': 'o6uakmubLrCbpRRS'} INFO status_code: 200, response_time(ms): 9.28 ms, response_length: 46 bytes DEBUG start to extract from response object. DEBUG extract: content.token => o6uakmubLrCbpRRS DEBUG start to validate. DEBUG extract: status_code => 200 DEBUG validate: status_code equals 200(int) ==> pass DEBUG extract: headers.Content-Type => application/json DEBUG validate: headers.Content-Type equals application/json(str) ==> pass DEBUG extract: content.success => True DEBUG validate: content.success equals True(bool) ==> pass . /api/users/1548560716736 INFO POST http://127.0.0.1:5000/api/users/1548560716736 DEBUG request kwargs(raw): {'headers': {'User-Agent': 'python-requests/2.18.4', 'device_sn': 'W5ACRDytKRQJPhC', 'token': 'o6uakmubLrCbpRRS', 'Content-Type': 'application/json'}, 'json': {'name': 'user1', 'password': '123456'}, 'verify': True} DEBUG processed request: > POST http://127.0.0.1:5000/api/users/1548560716736 > kwargs: {'headers': {'User-Agent': 'python-requests/2.18.4', 'device_sn': 'W5ACRDytKRQJPhC', 'token': 'o6uakmubLrCbpRRS', 'Content-Type': 'application/json'}, 'json': {'name': 'user1', 'password': '123456'}, 'verify': True, 'timeout': 120} DEBUG ================== request details ================== url : 'http://127.0.0.1:5000/api/users/1548560716736' method : 'POST' headers : {'User-Agent': 'python-requests/2.18.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'device_sn': 'W5ACRDytKRQJPhC', 'token': 'o6uakmubLrCbpRRS', 'Content-Type': 'application/json', 'Content-Length': '39'} body : b'{\"name\": \"user1\", \"password\": \"123456\"}' DEBUG ================== response details ================== ok : True url : 'http://127.0.0.1:5000/api/users/1548560716736' status_code : 201 reason : 'CREATED' cookies : {} encoding : None headers : {'Content-Type': 'application/json', 'Content-Length': '54', 'Server': 'Werkzeug/0.14.1 Python/3.6.5+', 'Date': 'Sun, 27 Jan 2019 03:45:16 GMT'} content_type : 'application/json' json : {'success': True, 'msg': 'user created successfully.'} INFO status_code: 201, response_time(ms): 2.77 ms, response_length: 54 bytes DEBUG start to validate. DEBUG extract: status_code => 201 DEBUG validate: status_code equals 201(int) ==> pass DEBUG extract: headers.Content-Type => application/json DEBUG validate: headers.Content-Type equals application/json(str) ==> pass DEBUG extract: content.success => True DEBUG validate: content.success equals True(bool) ==> pass DEBUG extract: content.msg => user created successfully. DEBUG validate: content.msg equals user created successfully.(str) ==> pass . ---------------------------------------------------------------------- Ran 2 tests in 0.022s OK DEBUG No html report template specified, use default. INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548560716.html \u4fdd\u5b58\u8be6\u7ec6\u8fc7\u7a0b\u6570\u636e \u00b6 \u4e3a\u4e86\u65b9\u4fbf\u5b9a\u4f4d\u95ee\u9898\uff0c\u8fd0\u884c\u6d4b\u8bd5\u65f6\u53ef\u6307\u5b9a --save-tests \u53c2\u6570\uff0c\u5373\u53ef\u5c06\u8fd0\u884c\u8fc7\u7a0b\u7684\u4e2d\u95f4\u6570\u636e\u4fdd\u5b58\u4e3a\u65e5\u5fd7\u6587\u4ef6\u3002 $ hrun docs/data/demo-quickstart-6.json --save-tests dump file: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/docs/data/logs/demo-quickstart-6.loaded.json dump file: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/docs/data/logs/demo-quickstart-6.parsed.json INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 11.42 ms, response_length: 46 bytes . /api/users/1548560768589 INFO POST http://127.0.0.1:5000/api/users/1548560768589 INFO status_code: 201, response_time(ms): 2.8 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.028s OK dump file: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/docs/data/logs/demo-quickstart-6.summary.json INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548560768.html \u65e5\u5fd7\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728\u9879\u76ee\u6839\u76ee\u5f55\u7684 logs \u6587\u4ef6\u5939\u4e2d\uff0c\u751f\u6210\u7684\u6587\u4ef6\u6709\u5982\u4e0b\u4e09\u4e2a\uff08XXX\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0\uff09\uff1a XXX.loaded.json \uff1a\u6d4b\u8bd5\u7528\u4f8b\u52a0\u8f7d\u540e\u7684\u6570\u636e\u7ed3\u6784\u5185\u5bb9\uff0c\u52a0\u8f7d\u5305\u62ec\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\uff08YAML/JSON\uff09\u3001debugtalk.py\u3001.env \u7b49\u6240\u6709\u9879\u76ee\u6587\u4ef6\uff0c\u4f8b\u5982 demo-quickstart-6.loaded.json XXX.parsed.json \uff1a\u6d4b\u8bd5\u7528\u4f8b\u89e3\u6790\u540e\u7684\u6570\u636e\u7ed3\u6784\u5185\u5bb9\uff0c\u89e3\u6790\u5185\u5bb9\u5305\u62ec\u6d4b\u8bd5\u7528\u4f8b\u5f15\u7528\uff08API/testcase\uff09\u3001\u53d8\u91cf\u8ba1\u7b97\u548c\u66ff\u6362\u3001base_url \u62fc\u63a5\u7b49\uff0c\u4f8b\u5982 demo-quickstart-6.parsed.json XXX.summary.json \uff1a\u6d4b\u8bd5\u62a5\u544a\u751f\u6210\u524d\u7684\u6570\u636e\u7ed3\u6784\u5185\u5bb9\uff0c\u4f8b\u5982 demo-quickstart-6.summary.json","title":"\u8fd0\u884c\u6d4b\u8bd5(CLI)"},{"location":"run-tests/cli/#cli","text":"HttpRunner \u5728\u547d\u4ee4\u884c\u4e2d\u542f\u52a8\u6d4b\u8bd5\u65f6\uff0c\u901a\u8fc7\u6307\u5b9a\u53c2\u6570\uff0c\u53ef\u5b9e\u73b0\u4e30\u5bcc\u7684\u6d4b\u8bd5\u7279\u6027\u63a7\u5236\u3002 $ hrun -h usage: hrun [-h] [-V] [--log-level LOG_LEVEL] [--log-file LOG_FILE] [--dot-env-path DOT_ENV_PATH] [--report-template REPORT_TEMPLATE] [--report-dir REPORT_DIR] [--failfast] [--save-tests] [--startproject STARTPROJECT] [--validate [VALIDATE [VALIDATE ...]]] [--prettify [PRETTIFY [PRETTIFY ...]]] [testcase_paths [testcase_paths ...]] One-stop solution for HTTP(S) testing. positional arguments: testcase_paths testcase file path optional arguments: -h, --help show this help message and exit -V, --version show version --log-level LOG_LEVEL Specify logging level, default is INFO. --log-file LOG_FILE Write logs to specified file path. --dot-env-path DOT_ENV_PATH Specify .env file path, which is useful for keeping sensitive data. --report-template REPORT_TEMPLATE specify report template path. --report-dir REPORT_DIR specify report save directory. --failfast Stop the test run on the first error or failure. --save-tests Save loaded tests and parsed tests to JSON file. --startproject STARTPROJECT Specify new project name. --validate [VALIDATE [VALIDATE ...]] Validate JSON testcase format. --prettify [PRETTIFY [PRETTIFY ...]] Prettify JSON testcase format.","title":"\u8fd0\u884c\u6d4b\u8bd5(CLI)"},{"location":"run-tests/cli/#_1","text":"\u4f7f\u7528 HttpRunner \u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u8def\u5f84\u65f6\uff0c\u652f\u6301\u591a\u79cd\u65b9\u5f0f\u3002 \u4f7f\u7528 hrun \u547d\u4ee4\u5916\u52a0\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u8fd0\u884c\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\uff1a $ hrun filepath/testcase.yml \u5c06\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u653e\u7f6e\u5230\u6587\u4ef6\u5939\u4e2d\uff0c\u6307\u5b9a\u6587\u4ef6\u5939\u8def\u5f84\u53ef\u5c06\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u4f5c\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u96c6\u8fdb\u884c\u8fd0\u884c\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\uff1a $ hrun testcases_folder_path","title":"\u6307\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u8def\u5f84"},{"location":"run-tests/cli/#failfast","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cHttpRunner \u4f1a\u8fd0\u884c\u6307\u5b9a\u7528\u4f8b\u96c6\u4e2d\u7684\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u7edf\u8ba1\u6d4b\u8bd5\u7ed3\u679c\u3002 \u5bf9\u4e8e\u67d0\u4e9b\u4f9d\u8d56\u4e8e\u6267\u884c\u987a\u5e8f\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f8b\u5982\u9700\u8981\u5148\u767b\u5f55\u6210\u529f\u624d\u80fd\u6267\u884c\u540e\u7eed\u63a5\u53e3\u8bf7\u6c42\u7684\u573a\u666f\uff0c\u5f53\u524d\u9762\u7684\u6d4b\u8bd5\u7528\u4f8b\u6267\u884c\u5931\u8d25\u540e\uff0c\u540e\u7eed\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u90fd\u5fc5\u5c06\u5931\u8d25\uff0c\u56e0\u6b64\u6ca1\u6709\u7ee7\u7eed\u6267\u884c\u7684\u5fc5\u8981\u4e86\u3002 \u82e5\u5e0c\u671b\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u5931\u8d25\u65f6\u4e0d\u518d\u7ee7\u7eed\u8fd0\u884c\u540e\u7eed\u7528\u4f8b\uff0c\u5219\u53ef\u901a\u8fc7\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 --failfast \u5b9e\u73b0\u3002 $ hrun filepath/testcase.yml --failfast","title":"failfast"},{"location":"run-tests/cli/#_2","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cHttpRunner \u8fd0\u884c\u65f6\u7684\u65e5\u5fd7\u7ea7\u522b\u4e3a INFO \uff0c\u53ea\u4f1a\u5305\u542b\u6700\u57fa\u672c\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u7528\u4f8b\u540d\u79f0\u3001\u8bf7\u6c42\u7684URL\u548cMethod\u3001\u54cd\u5e94\u7ed3\u679c\u7684\u72b6\u6001\u7801\u3001\u8017\u65f6\u548c\u5185\u5bb9\u5927\u5c0f\u3002 $ hrun docs/data/demo-quickstart-6.json INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 9.08 ms, response_length: 46 bytes . /api/users/1548560655759 INFO POST http://127.0.0.1:5000/api/users/1548560655759 INFO status_code: 201, response_time(ms): 2.89 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.019s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548560655.html \u82e5\u9700\u8981\u67e5\u770b\u5230\u66f4\u8be6\u5c3d\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u8bf7\u6c42\u7684\u53c2\u6570\u548c\u54cd\u5e94\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u53ef\u4ee5\u5c06\u65e5\u5fd7\u7ea7\u522b\u8bbe\u7f6e\u4e3a DEBUG \uff0c\u5373\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 --log-level debug \u3002 $ hrun docs/data/demo-quickstart-6.json --log-level debug INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token DEBUG request kwargs(raw): {'headers': {'User-Agent': 'python-requests/2.18.4', 'device_sn': 'W5ACRDytKRQJPhC', 'os_platform': 'ios', 'app_version': '2.8.6', 'Content-Type': 'application/json'}, 'json': {'sign': '2e7c3b5d560a1c8a859edcb9c8b0d3f8349abeff'}, 'verify': True} DEBUG processed request: > POST http://127.0.0.1:5000/api/get-token > kwargs: {'headers': {'User-Agent': 'python-requests/2.18.4', 'device_sn': 'W5ACRDytKRQJPhC', 'os_platform': 'ios', 'app_version': '2.8.6', 'Content-Type': 'application/json'}, 'json': {'sign': '2e7c3b5d560a1c8a859edcb9c8b0d3f8349abeff'}, 'verify': True, 'timeout': 120} DEBUG ================== request details ================== url : 'http://127.0.0.1:5000/api/get-token' method : 'POST' headers : {'User-Agent': 'python-requests/2.18.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'device_sn': 'W5ACRDytKRQJPhC', 'os_platform': 'ios', 'app_version': '2.8.6', 'Content-Type': 'application/json', 'Content-Length': '52'} body : b'{\"sign\": \"2e7c3b5d560a1c8a859edcb9c8b0d3f8349abeff\"}' DEBUG ================== response details ================== ok : True url : 'http://127.0.0.1:5000/api/get-token' status_code : 200 reason : 'OK' cookies : {} encoding : None headers : {'Content-Type': 'application/json', 'Content-Length': '46', 'Server': 'Werkzeug/0.14.1 Python/3.6.5+', 'Date': 'Sun, 27 Jan 2019 03:45:16 GMT'} content_type : 'application/json' json : {'success': True, 'token': 'o6uakmubLrCbpRRS'} INFO status_code: 200, response_time(ms): 9.28 ms, response_length: 46 bytes DEBUG start to extract from response object. DEBUG extract: content.token => o6uakmubLrCbpRRS DEBUG start to validate. DEBUG extract: status_code => 200 DEBUG validate: status_code equals 200(int) ==> pass DEBUG extract: headers.Content-Type => application/json DEBUG validate: headers.Content-Type equals application/json(str) ==> pass DEBUG extract: content.success => True DEBUG validate: content.success equals True(bool) ==> pass . /api/users/1548560716736 INFO POST http://127.0.0.1:5000/api/users/1548560716736 DEBUG request kwargs(raw): {'headers': {'User-Agent': 'python-requests/2.18.4', 'device_sn': 'W5ACRDytKRQJPhC', 'token': 'o6uakmubLrCbpRRS', 'Content-Type': 'application/json'}, 'json': {'name': 'user1', 'password': '123456'}, 'verify': True} DEBUG processed request: > POST http://127.0.0.1:5000/api/users/1548560716736 > kwargs: {'headers': {'User-Agent': 'python-requests/2.18.4', 'device_sn': 'W5ACRDytKRQJPhC', 'token': 'o6uakmubLrCbpRRS', 'Content-Type': 'application/json'}, 'json': {'name': 'user1', 'password': '123456'}, 'verify': True, 'timeout': 120} DEBUG ================== request details ================== url : 'http://127.0.0.1:5000/api/users/1548560716736' method : 'POST' headers : {'User-Agent': 'python-requests/2.18.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'device_sn': 'W5ACRDytKRQJPhC', 'token': 'o6uakmubLrCbpRRS', 'Content-Type': 'application/json', 'Content-Length': '39'} body : b'{\"name\": \"user1\", \"password\": \"123456\"}' DEBUG ================== response details ================== ok : True url : 'http://127.0.0.1:5000/api/users/1548560716736' status_code : 201 reason : 'CREATED' cookies : {} encoding : None headers : {'Content-Type': 'application/json', 'Content-Length': '54', 'Server': 'Werkzeug/0.14.1 Python/3.6.5+', 'Date': 'Sun, 27 Jan 2019 03:45:16 GMT'} content_type : 'application/json' json : {'success': True, 'msg': 'user created successfully.'} INFO status_code: 201, response_time(ms): 2.77 ms, response_length: 54 bytes DEBUG start to validate. DEBUG extract: status_code => 201 DEBUG validate: status_code equals 201(int) ==> pass DEBUG extract: headers.Content-Type => application/json DEBUG validate: headers.Content-Type equals application/json(str) ==> pass DEBUG extract: content.success => True DEBUG validate: content.success equals True(bool) ==> pass DEBUG extract: content.msg => user created successfully. DEBUG validate: content.msg equals user created successfully.(str) ==> pass . ---------------------------------------------------------------------- Ran 2 tests in 0.022s OK DEBUG No html report template specified, use default. INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548560716.html","title":"\u65e5\u5fd7\u7ea7\u522b"},{"location":"run-tests/cli/#_3","text":"\u4e3a\u4e86\u65b9\u4fbf\u5b9a\u4f4d\u95ee\u9898\uff0c\u8fd0\u884c\u6d4b\u8bd5\u65f6\u53ef\u6307\u5b9a --save-tests \u53c2\u6570\uff0c\u5373\u53ef\u5c06\u8fd0\u884c\u8fc7\u7a0b\u7684\u4e2d\u95f4\u6570\u636e\u4fdd\u5b58\u4e3a\u65e5\u5fd7\u6587\u4ef6\u3002 $ hrun docs/data/demo-quickstart-6.json --save-tests dump file: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/docs/data/logs/demo-quickstart-6.loaded.json dump file: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/docs/data/logs/demo-quickstart-6.parsed.json INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200, response_time(ms): 11.42 ms, response_length: 46 bytes . /api/users/1548560768589 INFO POST http://127.0.0.1:5000/api/users/1548560768589 INFO status_code: 201, response_time(ms): 2.8 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0.028s OK dump file: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/docs/data/logs/demo-quickstart-6.summary.json INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548560768.html \u65e5\u5fd7\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728\u9879\u76ee\u6839\u76ee\u5f55\u7684 logs \u6587\u4ef6\u5939\u4e2d\uff0c\u751f\u6210\u7684\u6587\u4ef6\u6709\u5982\u4e0b\u4e09\u4e2a\uff08XXX\u4e3a\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0\uff09\uff1a XXX.loaded.json \uff1a\u6d4b\u8bd5\u7528\u4f8b\u52a0\u8f7d\u540e\u7684\u6570\u636e\u7ed3\u6784\u5185\u5bb9\uff0c\u52a0\u8f7d\u5305\u62ec\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\uff08YAML/JSON\uff09\u3001debugtalk.py\u3001.env \u7b49\u6240\u6709\u9879\u76ee\u6587\u4ef6\uff0c\u4f8b\u5982 demo-quickstart-6.loaded.json XXX.parsed.json \uff1a\u6d4b\u8bd5\u7528\u4f8b\u89e3\u6790\u540e\u7684\u6570\u636e\u7ed3\u6784\u5185\u5bb9\uff0c\u89e3\u6790\u5185\u5bb9\u5305\u62ec\u6d4b\u8bd5\u7528\u4f8b\u5f15\u7528\uff08API/testcase\uff09\u3001\u53d8\u91cf\u8ba1\u7b97\u548c\u66ff\u6362\u3001base_url \u62fc\u63a5\u7b49\uff0c\u4f8b\u5982 demo-quickstart-6.parsed.json XXX.summary.json \uff1a\u6d4b\u8bd5\u62a5\u544a\u751f\u6210\u524d\u7684\u6570\u636e\u7ed3\u6784\u5185\u5bb9\uff0c\u4f8b\u5982 demo-quickstart-6.summary.json","title":"\u4fdd\u5b58\u8be6\u7ec6\u8fc7\u7a0b\u6570\u636e"},{"location":"run-tests/load-test/","text":"\u6027\u80fd\u6d4b\u8bd5 \u00b6 HttpRunner \u901a\u8fc7\u590d\u7528 Locust \uff0c\u53ef\u4ee5\u5728\u65e0\u9700\u5bf9 YAML/JSON \u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\u3002 \u539f\u7406\u56fe \u00b6 \u5b89\u88c5\u4f9d\u8d56\u5305 \u00b6 \u5b89\u88c5\u5b8c\u6210 HttpRunner \u540e\uff0c\u7cfb\u7edf\u4e2d\u4f1a\u65b0\u589e locusts \u547d\u4ee4\uff0c\u4f46\u4e0d\u4f1a\u540c\u65f6\u5b89\u88c5 Locust\u3002 \u5728\u7cfb\u7edf\u4e2d\u672a\u5b89\u88c5 Locust \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c locusts \u547d\u4ee4\u65f6\u4f1a\u51fa\u73b0\u5982\u4e0b\u63d0\u793a\u3002 $ locusts -V WARNING Locust is not installed, install first and try again. install command: pip install locustio Locust \u7684\u5b89\u88c5\u65b9\u5f0f\u5982\u4e0b\uff1a $ pip install locustio \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6267\u884c locusts -V \u53ef\u67e5\u770b\u5230 Locust \u7684\u7248\u672c\u53f7\u3002 $ locusts -V [2017-08-26 23:45:42,246] bogon/INFO/stdout: Locust 0.8a2 [2017-08-26 23:45:42,246] bogon/INFO/stdout: \u6267\u884c locusts -h \uff0c\u53ef\u67e5\u770b\u5230\u4f7f\u7528\u5e2e\u52a9\u6587\u6863\u3002 $ locusts -h Usage: locust [options] [LocustClass [LocustClass2 ... ]] Options: -h, --help show this help message and exit -H HOST, --host=HOST Host to load test in the following format: http://10.21.32.33 --web-host=WEB_HOST Host to bind the web interface to. Defaults to '' (all interfaces) -P PORT, --port=PORT, --web-port=PORT Port on which to run web host -f LOCUSTFILE, --locustfile=LOCUSTFILE Python module file to import, e.g. '../other.py'. Default: locustfile --csv=CSVFILEBASE, --csv-base-name=CSVFILEBASE Store current request stats to files in CSV format. --master Set locust to run in distributed mode with this process as master --slave Set locust to run in distributed mode with this process as slave --master-host=MASTER_HOST Host or IP address of locust master for distributed load testing. Only used when running with --slave. Defaults to 127.0.0.1. --master-port=MASTER_PORT The port to connect to that is used by the locust master for distributed load testing. Only used when running with --slave. Defaults to 5557. Note that slaves will also connect to the master node on this port + 1. --master-bind-host=MASTER_BIND_HOST Interfaces (hostname, ip) that locust master should bind to. Only used when running with --master. Defaults to * (all available interfaces). --master-bind-port=MASTER_BIND_PORT Port that locust master should bind to. Only used when running with --master. Defaults to 5557. Note that Locust will also use this port + 1, so by default the master node will bind to 5557 and 5558. --expect-slaves=EXPECT_SLAVES How many slaves master should expect to connect before starting the test (only when --no-web used). --no-web Disable the web interface, and instead start running the test immediately. Requires -c and -r to be specified. -c NUM_CLIENTS, --clients=NUM_CLIENTS Number of concurrent clients. Only used together with --no-web -r HATCH_RATE, --hatch-rate=HATCH_RATE The rate per second in which clients are spawned. Only used together with --no-web -n NUM_REQUESTS, --num-request=NUM_REQUESTS Number of requests to perform. Only used together with --no-web -L LOGLEVEL, --loglevel=LOGLEVEL Choose between DEBUG/INFO/WARNING/ERROR/CRITICAL. Default is INFO. --logfile=LOGFILE Path to log file. If not set, log will go to stdout/stderr --print-stats Print stats in the console --only-summary Only print the summary stats --no-reset-stats Do not reset statistics once hatching has been completed -l, --list Show list of possible locust classes and exit --show-task-ratio print table of the locust classes' task execution ratio --show-task-ratio-json print json data of the locust classes' task execution ratio -V, --version show program's version number and exit \u53ef\u4ee5\u770b\u51fa\uff0c loucsts \u547d\u4ee4\u4e0e locust \u547d\u4ee4\u7684\u7528\u6cd5\u57fa\u672c\u76f8\u540c\u3002 \u76f8\u6bd4\u4e8e locust \u547d\u4ee4\uff0c loucsts \u547d\u4ee4\u4e3b\u8981\u5b58\u5728\u5982\u4e0b\u4e24\u9879\u5dee\u5f02\u3002 \u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5 \u00b6 \u5728 -f \u53c2\u6570\u540e\u9762\uff0c loucsts \u547d\u4ee4\u4e0d\u4ec5\u53ef\u4ee5\u6307\u5b9a Locust \u652f\u6301\u7684 Python \u6587\u4ef6\uff0c\u540c\u65f6\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002\u5728\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5f53 -f \u6307\u5b9a YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u65f6\uff0c\u4f1a\u5148\u5c06\u5176\u8f6c\u6362\u4e3a Python \u683c\u5f0f\u7684 locustfile\uff0c\u7136\u540e\u518d\u5c06 locustfile.py \u4f20\u7ed9 locust \u547d\u4ee4\u3002 $ locusts -f examples/first-testcase.yml [ 2017 -08-18 17 :20:43,915 ] Leos-MacBook-Air.local/INFO/locust.main: Starting web monitor at *:8089 [ 2017 -08-18 17 :20:43,918 ] Leos-MacBook-Air.local/INFO/locust.main: Starting Locust 0 .8a2 \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u540e\uff0c\u5373\u5b8c\u6210\u4e86 Locust \u670d\u52a1\u7684\u542f\u52a8\uff0c\u540e\u7eed\u5c31\u53ef\u4ee5\u5728 Locust \u7684 Web \u7ba1\u7406\u754c\u9762\u4e2d\u8fdb\u884c\u64cd\u4f5c\u4e86\uff0c\u4f7f\u7528\u65b9\u5f0f\u4e0e Locust \u5b8c\u5168\u76f8\u540c\u3002 \u591a\u8fdb\u7a0b\u8fd0\u884c\u6a21\u5f0f \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728 Locust \u4e2d\u5982\u9700\u4f7f\u7528 master-slave \u6a21\u5f0f\u542f\u52a8\u591a\u4e2a\u8fdb\u7a0b\uff08\u4f7f\u7528\u591a\u6838\u5904\u7406\u5668\u7684\u80fd\u529b\uff09\uff0c\u53ea\u80fd\u5148\u542f\u52a8 master\uff0c\u7136\u540e\u518d\u9010\u4e00\u542f\u52a8\u82e5\u5e72\u4e2a slave\u3002 $ locust -f locustfile.py --master $ locust -f locustfile.py --slave & $ locust -f locustfile.py --slave & $ locust -f locustfile.py --slave & $ locust -f locustfile.py --slave & \u5728 HttpRunner \u4e2d\uff0c\u65b0\u589e\u5b9e\u73b0 --processes \u53c2\u6570\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u542f\u52a8 1 \u4e2a master \u548c\u591a\u4e2a salve\u3002\u82e5\u5728 --processes \u53c2\u6570\u540e\u6ca1\u6709\u6307\u5b9a\u5177\u4f53\u7684\u6570\u503c\uff0c\u5219\u542f\u52a8\u7684 slave \u4e2a\u6570\u4e0e\u673a\u5668\u7684 CPU \u6838\u6570\u76f8\u540c\u3002 $ locusts -f examples/first-testcase.yml --processes 4 [ 2017 -08-26 23 :51:47,071 ] bogon/INFO/locust.main: Starting web monitor at *:8089 [ 2017 -08-26 23 :51:47,075 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,078 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,080 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,083 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,084 ] bogon/INFO/locust.runners: Client 'bogon_656e0af8e968a8533d379dd252422ad3' reported as ready. Currently 1 clients ready to swarm. [ 2017 -08-26 23 :51:47,085 ] bogon/INFO/locust.runners: Client 'bogon_09f73850252ee4ec739ed77d3c4c6dba' reported as ready. Currently 2 clients ready to swarm. [ 2017 -08-26 23 :51:47,084 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,085 ] bogon/INFO/locust.runners: Client 'bogon_869f7ed671b1a9952b56610f01e2006f' reported as ready. Currently 3 clients ready to swarm. [ 2017 -08-26 23 :51:47,085 ] bogon/INFO/locust.runners: Client 'bogon_80a804cda36b80fac17b57fd2d5e7cdb' reported as ready. Currently 4 clients ready to swarm. Enjoy!","title":"\u6027\u80fd\u6d4b\u8bd5"},{"location":"run-tests/load-test/#_1","text":"HttpRunner \u901a\u8fc7\u590d\u7528 Locust \uff0c\u53ef\u4ee5\u5728\u65e0\u9700\u5bf9 YAML/JSON \u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\u3002","title":"\u6027\u80fd\u6d4b\u8bd5"},{"location":"run-tests/load-test/#_2","text":"","title":"\u539f\u7406\u56fe"},{"location":"run-tests/load-test/#_3","text":"\u5b89\u88c5\u5b8c\u6210 HttpRunner \u540e\uff0c\u7cfb\u7edf\u4e2d\u4f1a\u65b0\u589e locusts \u547d\u4ee4\uff0c\u4f46\u4e0d\u4f1a\u540c\u65f6\u5b89\u88c5 Locust\u3002 \u5728\u7cfb\u7edf\u4e2d\u672a\u5b89\u88c5 Locust \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c locusts \u547d\u4ee4\u65f6\u4f1a\u51fa\u73b0\u5982\u4e0b\u63d0\u793a\u3002 $ locusts -V WARNING Locust is not installed, install first and try again. install command: pip install locustio Locust \u7684\u5b89\u88c5\u65b9\u5f0f\u5982\u4e0b\uff1a $ pip install locustio \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6267\u884c locusts -V \u53ef\u67e5\u770b\u5230 Locust \u7684\u7248\u672c\u53f7\u3002 $ locusts -V [2017-08-26 23:45:42,246] bogon/INFO/stdout: Locust 0.8a2 [2017-08-26 23:45:42,246] bogon/INFO/stdout: \u6267\u884c locusts -h \uff0c\u53ef\u67e5\u770b\u5230\u4f7f\u7528\u5e2e\u52a9\u6587\u6863\u3002 $ locusts -h Usage: locust [options] [LocustClass [LocustClass2 ... ]] Options: -h, --help show this help message and exit -H HOST, --host=HOST Host to load test in the following format: http://10.21.32.33 --web-host=WEB_HOST Host to bind the web interface to. Defaults to '' (all interfaces) -P PORT, --port=PORT, --web-port=PORT Port on which to run web host -f LOCUSTFILE, --locustfile=LOCUSTFILE Python module file to import, e.g. '../other.py'. Default: locustfile --csv=CSVFILEBASE, --csv-base-name=CSVFILEBASE Store current request stats to files in CSV format. --master Set locust to run in distributed mode with this process as master --slave Set locust to run in distributed mode with this process as slave --master-host=MASTER_HOST Host or IP address of locust master for distributed load testing. Only used when running with --slave. Defaults to 127.0.0.1. --master-port=MASTER_PORT The port to connect to that is used by the locust master for distributed load testing. Only used when running with --slave. Defaults to 5557. Note that slaves will also connect to the master node on this port + 1. --master-bind-host=MASTER_BIND_HOST Interfaces (hostname, ip) that locust master should bind to. Only used when running with --master. Defaults to * (all available interfaces). --master-bind-port=MASTER_BIND_PORT Port that locust master should bind to. Only used when running with --master. Defaults to 5557. Note that Locust will also use this port + 1, so by default the master node will bind to 5557 and 5558. --expect-slaves=EXPECT_SLAVES How many slaves master should expect to connect before starting the test (only when --no-web used). --no-web Disable the web interface, and instead start running the test immediately. Requires -c and -r to be specified. -c NUM_CLIENTS, --clients=NUM_CLIENTS Number of concurrent clients. Only used together with --no-web -r HATCH_RATE, --hatch-rate=HATCH_RATE The rate per second in which clients are spawned. Only used together with --no-web -n NUM_REQUESTS, --num-request=NUM_REQUESTS Number of requests to perform. Only used together with --no-web -L LOGLEVEL, --loglevel=LOGLEVEL Choose between DEBUG/INFO/WARNING/ERROR/CRITICAL. Default is INFO. --logfile=LOGFILE Path to log file. If not set, log will go to stdout/stderr --print-stats Print stats in the console --only-summary Only print the summary stats --no-reset-stats Do not reset statistics once hatching has been completed -l, --list Show list of possible locust classes and exit --show-task-ratio print table of the locust classes' task execution ratio --show-task-ratio-json print json data of the locust classes' task execution ratio -V, --version show program's version number and exit \u53ef\u4ee5\u770b\u51fa\uff0c loucsts \u547d\u4ee4\u4e0e locust \u547d\u4ee4\u7684\u7528\u6cd5\u57fa\u672c\u76f8\u540c\u3002 \u76f8\u6bd4\u4e8e locust \u547d\u4ee4\uff0c loucsts \u547d\u4ee4\u4e3b\u8981\u5b58\u5728\u5982\u4e0b\u4e24\u9879\u5dee\u5f02\u3002","title":"\u5b89\u88c5\u4f9d\u8d56\u5305"},{"location":"run-tests/load-test/#_4","text":"\u5728 -f \u53c2\u6570\u540e\u9762\uff0c loucsts \u547d\u4ee4\u4e0d\u4ec5\u53ef\u4ee5\u6307\u5b9a Locust \u652f\u6301\u7684 Python \u6587\u4ef6\uff0c\u540c\u65f6\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002\u5728\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5f53 -f \u6307\u5b9a YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u65f6\uff0c\u4f1a\u5148\u5c06\u5176\u8f6c\u6362\u4e3a Python \u683c\u5f0f\u7684 locustfile\uff0c\u7136\u540e\u518d\u5c06 locustfile.py \u4f20\u7ed9 locust \u547d\u4ee4\u3002 $ locusts -f examples/first-testcase.yml [ 2017 -08-18 17 :20:43,915 ] Leos-MacBook-Air.local/INFO/locust.main: Starting web monitor at *:8089 [ 2017 -08-18 17 :20:43,918 ] Leos-MacBook-Air.local/INFO/locust.main: Starting Locust 0 .8a2 \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u540e\uff0c\u5373\u5b8c\u6210\u4e86 Locust \u670d\u52a1\u7684\u542f\u52a8\uff0c\u540e\u7eed\u5c31\u53ef\u4ee5\u5728 Locust \u7684 Web \u7ba1\u7406\u754c\u9762\u4e2d\u8fdb\u884c\u64cd\u4f5c\u4e86\uff0c\u4f7f\u7528\u65b9\u5f0f\u4e0e Locust \u5b8c\u5168\u76f8\u540c\u3002","title":"\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5"},{"location":"run-tests/load-test/#_5","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728 Locust \u4e2d\u5982\u9700\u4f7f\u7528 master-slave \u6a21\u5f0f\u542f\u52a8\u591a\u4e2a\u8fdb\u7a0b\uff08\u4f7f\u7528\u591a\u6838\u5904\u7406\u5668\u7684\u80fd\u529b\uff09\uff0c\u53ea\u80fd\u5148\u542f\u52a8 master\uff0c\u7136\u540e\u518d\u9010\u4e00\u542f\u52a8\u82e5\u5e72\u4e2a slave\u3002 $ locust -f locustfile.py --master $ locust -f locustfile.py --slave & $ locust -f locustfile.py --slave & $ locust -f locustfile.py --slave & $ locust -f locustfile.py --slave & \u5728 HttpRunner \u4e2d\uff0c\u65b0\u589e\u5b9e\u73b0 --processes \u53c2\u6570\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u542f\u52a8 1 \u4e2a master \u548c\u591a\u4e2a salve\u3002\u82e5\u5728 --processes \u53c2\u6570\u540e\u6ca1\u6709\u6307\u5b9a\u5177\u4f53\u7684\u6570\u503c\uff0c\u5219\u542f\u52a8\u7684 slave \u4e2a\u6570\u4e0e\u673a\u5668\u7684 CPU \u6838\u6570\u76f8\u540c\u3002 $ locusts -f examples/first-testcase.yml --processes 4 [ 2017 -08-26 23 :51:47,071 ] bogon/INFO/locust.main: Starting web monitor at *:8089 [ 2017 -08-26 23 :51:47,075 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,078 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,080 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,083 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,084 ] bogon/INFO/locust.runners: Client 'bogon_656e0af8e968a8533d379dd252422ad3' reported as ready. Currently 1 clients ready to swarm. [ 2017 -08-26 23 :51:47,085 ] bogon/INFO/locust.runners: Client 'bogon_09f73850252ee4ec739ed77d3c4c6dba' reported as ready. Currently 2 clients ready to swarm. [ 2017 -08-26 23 :51:47,084 ] bogon/INFO/locust.main: Starting Locust 0 .8a2 [ 2017 -08-26 23 :51:47,085 ] bogon/INFO/locust.runners: Client 'bogon_869f7ed671b1a9952b56610f01e2006f' reported as ready. Currently 3 clients ready to swarm. [ 2017 -08-26 23 :51:47,085 ] bogon/INFO/locust.runners: Client 'bogon_80a804cda36b80fac17b57fd2d5e7cdb' reported as ready. Currently 4 clients ready to swarm. Enjoy!","title":"\u591a\u8fdb\u7a0b\u8fd0\u884c\u6a21\u5f0f"},{"location":"run-tests/report/","text":"\u6d4b\u8bd5\u62a5\u544a \u00b6 \u4f7f\u7528 HttpRunner \u6267\u884c\u5b8c\u81ea\u52a8\u5316\u6d4b\u8bd5\u540e\uff0c\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u7684 reports \u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4efd HTML \u683c\u5f0f\u7684\u6d4b\u8bd5\u62a5\u544a\u3002 \u9ed8\u8ba4\u60c5\u51b5 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\u4f1a\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u7684 reports \u6587\u4ef6\u5939\u4e2d\uff0c\u6587\u4ef6\u540d\u79f0\u4e3a\u6d4b\u8bd5\u5f00\u59cb\u7684\u65f6\u95f4\u6233\u3002 $ hrun docs/data/demo-quickstart-6.yml INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200 , response_time ( ms ) : 10 .05 ms, response_length: 46 bytes . /api/users/1548561170497 INFO POST http://127.0.0.1:5000/api/users/1548561170497 INFO status_code: 201 , response_time ( ms ) : 2 .88 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0 .034s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548561170.html \u70b9\u51fb\u67e5\u770b \u6d4b\u8bd5\u62a5\u544a \u3002 \u9ed8\u8ba4\u62a5\u544a\u6837\u5f0f \u00b6 \u5728 HttpRunner \u4e2d\u81ea\u5e26\u4e86\u4e00\u4e2a Jinja2 \u683c\u5f0f\u7684\u62a5\u544a\u6a21\u7248\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u62a5\u544a\u6837\u5f0f\u5747\u57fa\u4e8e\u8be5\u6a21\u7248\uff08 httprunner/templates/default_report_template.html \uff09\u3002 \u6d4b\u8bd5\u62a5\u544a\u5f62\u5f0f\u5982\u4e0b\uff1a \u5728 Summary \u4e2d\uff0c\u4f1a\u7f57\u5217\u672c\u6b21\u6d4b\u8bd5\u7684\u6574\u4f53\u4fe1\u606f\uff0c\u5305\u62ec\u6d4b\u8bd5\u5f00\u59cb\u65f6\u95f4\u3001\u603b\u8fd0\u884c\u65f6\u957f\u3001\u8fd0\u884c\u7684Python\u7248\u672c\u548c\u7cfb\u7edf\u73af\u5883\u3001\u8fd0\u884c\u7ed3\u679c\u7edf\u8ba1\u6570\u636e\u3002 \u5728 Details \u4e2d\uff0c\u4f1a\u8be6\u7ec6\u5c55\u793a\u6bcf\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u7ed3\u679c\u3002 \u70b9\u51fb\u6d4b\u8bd5\u7528\u4f8b\u5bf9\u5e94\u7684 log \u6309\u94ae\uff0c\u4f1a\u5728\u5f39\u51fa\u6846\u4e2d\u5c55\u793a\u8be5\u7528\u4f8b\u6267\u884c\u7684\u8be6\u7ec6\u6570\u636e\uff0c\u5305\u62ec\u8bf7\u6c42\u7684 headers \u548c body\u3001\u54cd\u5e94\u7684 headers \u548c body\u3001\u6821\u9a8c\u7ed3\u679c\u3001\u54cd\u5e94\u3001\u54cd\u5e94\u8017\u65f6\uff08elapsed\uff09\u7b49\u4fe1\u606f\u3002 \u82e5\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u4e0d\u6210\u529f\uff08failed/error/skipped\uff09\uff0c\u5219\u5728\u8be5\u6d4b\u8bd5\u7528\u4f8b\u7684 detail \u4e2d\u4f1a\u51fa\u73b0 traceback \u6309\u94ae\uff0c\u70b9\u51fb\u8be5\u6309\u94ae\u540e\uff0c\u4f1a\u5728\u5f39\u51fa\u6846\u4e2d\u5c55\u793a\u5931\u8d25\u7684\u5806\u6808\u65e5\u5fd7\uff0c\u6216\u8005 skipped \u7684\u539f\u56e0\u3002 \u70b9\u51fb\u67e5\u770b \u6d4b\u8bd5\u62a5\u544a \u3002 \u81ea\u5b9a\u4e49 \u00b6 \u9664\u4e86\u9ed8\u8ba4\u7684\u62a5\u544a\u6837\u5f0f\uff0cHttpRunner \u8fd8\u652f\u6301\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u62a5\u544a\u6a21\u677f\u3002 \u7f16\u5199\u81ea\u5b9a\u4e49\u6a21\u677f\uff08Jinja2\u683c\u5f0f\uff09 \u00b6 \u81ea\u5b9a\u4e49\u6a21\u677f\u9700\u8981\u91c7\u7528 Jinja2 \u7684\u683c\u5f0f\uff0c\u5176\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u6570\u636e\u53ef\u53c2\u8003 \u6570\u636e\u7ed3\u6784\u793a\u4f8b \u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u9700\u8981\u5728\u81ea\u5b9a\u4e49\u6a21\u677f\u4e2d\u5c55\u793a\u6d4b\u8bd5\u7ed3\u679c\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u63cf\u8ff0\uff1a < tr > < th > TOTAL </ th > < th > SUCCESS </ th > < th > FAILED </ th > < th > ERROR </ th > < th > SKIPPED </ th > </ tr > < tr > < td > {{stat.testsRun}} </ td > < td > {{stat.successes}} </ td > < td > {{stat.failures}} </ td > < td > {{stat.errors}} </ td > < td > {{stat.skipped}} </ td > </ tr > \u5728\u81ea\u5b9a\u4e49\u62a5\u544a\u6a21\u677f\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003 HttpRunner \u7684 \u9ed8\u8ba4\u62a5\u544a\u6a21\u677f \uff0c\u8981\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u6a21\u7248\u529f\u80fd\uff0c\u53ef\u53c2\u8003 Jinja2 \u7684\u4f7f\u7528\u6587\u6863\u3002 \u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u677f \u00b6 \u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u7248\u65f6\uff0c\u9700\u8981\u901a\u8fc7 --report-template \u6307\u5b9a\u62a5\u544a\u6a21\u677f\u7684\u8def\u5f84\uff0c\u7136\u540e\u6d4b\u8bd5\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u5c31\u4f1a\u91c7\u7528\u81ea\u5b9a\u4e49\u7684\u6a21\u677f\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\u3002 $ hrun docs/data/demo-quickstart-2.yml --report-template /path/to/custom_report_template ... \u540c\u4e0a\uff0c\u7701\u7565 INFO render with html report template: /path/to/custom_report_template INFO Start to render Html report ... INFO Generated Html report: reports/1532078874.html \u6307\u5b9a\u62a5\u544a\u751f\u6210\u8def\u5f84 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\u4f1a\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u7684 reports \u6587\u4ef6\u5939\u4e2d\u3002\u5982\u9700\u6307\u5b9a\u751f\u6210\u62a5\u544a\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u4f7f\u7528 --report-dir \u53c2\u6570\u3002 $ hrun docs/data/demo-quickstart-2.yml --dirreport-name /other/path/ ... \u540c\u4e0a\uff0c\u7701\u7565 INFO Start to render Html report ... INFO Generated Html report: /other/path/1532078874.html","title":"\u6d4b\u8bd5\u62a5\u544a"},{"location":"run-tests/report/#_1","text":"\u4f7f\u7528 HttpRunner \u6267\u884c\u5b8c\u81ea\u52a8\u5316\u6d4b\u8bd5\u540e\uff0c\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u7684 reports \u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4efd HTML \u683c\u5f0f\u7684\u6d4b\u8bd5\u62a5\u544a\u3002","title":"\u6d4b\u8bd5\u62a5\u544a"},{"location":"run-tests/report/#_2","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\u4f1a\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u7684 reports \u6587\u4ef6\u5939\u4e2d\uff0c\u6587\u4ef6\u540d\u79f0\u4e3a\u6d4b\u8bd5\u5f00\u59cb\u7684\u65f6\u95f4\u6233\u3002 $ hrun docs/data/demo-quickstart-6.yml INFO Start to run testcase: testcase description /api/get-token INFO POST http://127.0.0.1:5000/api/get-token INFO status_code: 200 , response_time ( ms ) : 10 .05 ms, response_length: 46 bytes . /api/users/1548561170497 INFO POST http://127.0.0.1:5000/api/users/1548561170497 INFO status_code: 201 , response_time ( ms ) : 2 .88 ms, response_length: 54 bytes . ---------------------------------------------------------------------- Ran 2 tests in 0 .034s OK INFO Start to render Html report ... INFO Generated Html report: /Users/debugtalk/MyProjects/HttpRunner-dev/httprunner-docs-v2x/reports/1548561170.html \u70b9\u51fb\u67e5\u770b \u6d4b\u8bd5\u62a5\u544a \u3002","title":"\u9ed8\u8ba4\u60c5\u51b5"},{"location":"run-tests/report/#_3","text":"\u5728 HttpRunner \u4e2d\u81ea\u5e26\u4e86\u4e00\u4e2a Jinja2 \u683c\u5f0f\u7684\u62a5\u544a\u6a21\u7248\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u62a5\u544a\u6837\u5f0f\u5747\u57fa\u4e8e\u8be5\u6a21\u7248\uff08 httprunner/templates/default_report_template.html \uff09\u3002 \u6d4b\u8bd5\u62a5\u544a\u5f62\u5f0f\u5982\u4e0b\uff1a \u5728 Summary \u4e2d\uff0c\u4f1a\u7f57\u5217\u672c\u6b21\u6d4b\u8bd5\u7684\u6574\u4f53\u4fe1\u606f\uff0c\u5305\u62ec\u6d4b\u8bd5\u5f00\u59cb\u65f6\u95f4\u3001\u603b\u8fd0\u884c\u65f6\u957f\u3001\u8fd0\u884c\u7684Python\u7248\u672c\u548c\u7cfb\u7edf\u73af\u5883\u3001\u8fd0\u884c\u7ed3\u679c\u7edf\u8ba1\u6570\u636e\u3002 \u5728 Details \u4e2d\uff0c\u4f1a\u8be6\u7ec6\u5c55\u793a\u6bcf\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u7ed3\u679c\u3002 \u70b9\u51fb\u6d4b\u8bd5\u7528\u4f8b\u5bf9\u5e94\u7684 log \u6309\u94ae\uff0c\u4f1a\u5728\u5f39\u51fa\u6846\u4e2d\u5c55\u793a\u8be5\u7528\u4f8b\u6267\u884c\u7684\u8be6\u7ec6\u6570\u636e\uff0c\u5305\u62ec\u8bf7\u6c42\u7684 headers \u548c body\u3001\u54cd\u5e94\u7684 headers \u548c body\u3001\u6821\u9a8c\u7ed3\u679c\u3001\u54cd\u5e94\u3001\u54cd\u5e94\u8017\u65f6\uff08elapsed\uff09\u7b49\u4fe1\u606f\u3002 \u82e5\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u4e0d\u6210\u529f\uff08failed/error/skipped\uff09\uff0c\u5219\u5728\u8be5\u6d4b\u8bd5\u7528\u4f8b\u7684 detail \u4e2d\u4f1a\u51fa\u73b0 traceback \u6309\u94ae\uff0c\u70b9\u51fb\u8be5\u6309\u94ae\u540e\uff0c\u4f1a\u5728\u5f39\u51fa\u6846\u4e2d\u5c55\u793a\u5931\u8d25\u7684\u5806\u6808\u65e5\u5fd7\uff0c\u6216\u8005 skipped \u7684\u539f\u56e0\u3002 \u70b9\u51fb\u67e5\u770b \u6d4b\u8bd5\u62a5\u544a \u3002","title":"\u9ed8\u8ba4\u62a5\u544a\u6837\u5f0f"},{"location":"run-tests/report/#_4","text":"\u9664\u4e86\u9ed8\u8ba4\u7684\u62a5\u544a\u6837\u5f0f\uff0cHttpRunner \u8fd8\u652f\u6301\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u62a5\u544a\u6a21\u677f\u3002","title":"\u81ea\u5b9a\u4e49"},{"location":"run-tests/report/#jinja2","text":"\u81ea\u5b9a\u4e49\u6a21\u677f\u9700\u8981\u91c7\u7528 Jinja2 \u7684\u683c\u5f0f\uff0c\u5176\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u6570\u636e\u53ef\u53c2\u8003 \u6570\u636e\u7ed3\u6784\u793a\u4f8b \u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u9700\u8981\u5728\u81ea\u5b9a\u4e49\u6a21\u677f\u4e2d\u5c55\u793a\u6d4b\u8bd5\u7ed3\u679c\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u63cf\u8ff0\uff1a < tr > < th > TOTAL </ th > < th > SUCCESS </ th > < th > FAILED </ th > < th > ERROR </ th > < th > SKIPPED </ th > </ tr > < tr > < td > {{stat.testsRun}} </ td > < td > {{stat.successes}} </ td > < td > {{stat.failures}} </ td > < td > {{stat.errors}} </ td > < td > {{stat.skipped}} </ td > </ tr > \u5728\u81ea\u5b9a\u4e49\u62a5\u544a\u6a21\u677f\u65f6\uff0c\u53ef\u4ee5\u53c2\u8003 HttpRunner \u7684 \u9ed8\u8ba4\u62a5\u544a\u6a21\u677f \uff0c\u8981\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u6a21\u7248\u529f\u80fd\uff0c\u53ef\u53c2\u8003 Jinja2 \u7684\u4f7f\u7528\u6587\u6863\u3002","title":"\u7f16\u5199\u81ea\u5b9a\u4e49\u6a21\u677f\uff08Jinja2\u683c\u5f0f\uff09"},{"location":"run-tests/report/#_5","text":"\u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u7248\u65f6\uff0c\u9700\u8981\u901a\u8fc7 --report-template \u6307\u5b9a\u62a5\u544a\u6a21\u677f\u7684\u8def\u5f84\uff0c\u7136\u540e\u6d4b\u8bd5\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u5c31\u4f1a\u91c7\u7528\u81ea\u5b9a\u4e49\u7684\u6a21\u677f\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\u3002 $ hrun docs/data/demo-quickstart-2.yml --report-template /path/to/custom_report_template ... \u540c\u4e0a\uff0c\u7701\u7565 INFO render with html report template: /path/to/custom_report_template INFO Start to render Html report ... INFO Generated Html report: reports/1532078874.html","title":"\u4f7f\u7528\u81ea\u5b9a\u4e49\u6a21\u677f"},{"location":"run-tests/report/#_6","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\u4f1a\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u7684 reports \u6587\u4ef6\u5939\u4e2d\u3002\u5982\u9700\u6307\u5b9a\u751f\u6210\u62a5\u544a\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u4f7f\u7528 --report-dir \u53c2\u6570\u3002 $ hrun docs/data/demo-quickstart-2.yml --dirreport-name /other/path/ ... \u540c\u4e0a\uff0c\u7701\u7565 INFO Start to render Html report ... INFO Generated Html report: /other/path/1532078874.html","title":"\u6307\u5b9a\u62a5\u544a\u751f\u6210\u8def\u5f84"}]}